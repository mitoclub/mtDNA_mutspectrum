xlab('Митохондриальные гены')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=150, label= "Ah")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество гуанина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество цитозина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
#PCA
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_for_diploma[c('species_name', 'russian_eco', 'russian_tn')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
birds_pca = data.frame(stats_pca$x)
birds_pca = birds_pca[,c(1,2)]
birds_pca$species_name = row.names(birds_pca)
gene_stats$species_name = row.names(gene_stats)
gene_stats = merge(gene_stats, birds_pca, by = 'species_name')
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[,c(2:14)]
g5 = ggplot(gene_stats, aes(x=PC1, color=russian_eco)) +
geom_density(linewidth = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (48.0%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))+
ylab('Плотность')+
theme(legend.position="none")
g5
library(ggbiplot)
#PCA
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_for_diploma[c('species_name', 'russian_eco', 'russian_tn')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
biplot(stats_pca)
ggbiplot(stats_pca)
ggbiplot(stats_pca, labels.size = 3)
ggbiplot(stats_pca, labels.size = 4)
ggbiplot(stats_pca)
ggbiplot(stats_pca, labels.size = 0.5)
ggbiplot(stats_pca, labels.size = 4)
ggbiplot(stats_pca, obs.scale = 4)
ggbiplot(stats_pca, obs.scale = 3)
ggbiplot(stats_pca, var.scale = 3)
ggbiplot(stats_pca, var.scale = 4)
ggbiplot(stats_pca, var.scale = 5)
ggbiplot(stats_pca, var.axes = TRUE)
autoplot(stats_pca)
library('ggfortify')
installed.packages(ggfortify)
install.packages(ggfortify)
library(ggfortify)
install.packages('ggfortify')
library(ggfortify)
autoplot(stats_pca)
autoplot(stats_pca,
loadings = TRUE)
autoplot(stats_pca,
loadings = TRUE,
loadings.label = TRUE)
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
df_fly = read.csv('../Paper_materials/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_eco = df_mtdna[,c('species_name','realm','Trophic_niche')]
df_fly_big1 = merge(df_fly, df_eco)
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_fly_final = merge(df_fly_big1, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final = unique(df_fly_final)
df_fly_final$russian_fly = ''
df_fly_final$russian_dive = ''
unique(df_fly_final$flightless)
df1 = df_fly_final[df_fly_final$flightless == "0",]
df2 = df_fly_final[df_fly_final$flightless == "Sphenisciformes",]
df3 = df_fly_final[df_fly_final$flightless == "Apterygiformes",]
df4 = df_fly_final[df_fly_final$flightless == "Gruiformes",]
df5 = df_fly_final[df_fly_final$flightless == "Casuariiformes",]
df6 = df_fly_final[df_fly_final$flightless == "Tinamiformes",]
df7 = df_fly_final[df_fly_final$flightless == "Columbiformes",]
df8 = df_fly_final[df_fly_final$flightless == "Rheiformes",]
df9 = df_fly_final[df_fly_final$flightless == "Eurypygiformes",]
df10 = df_fly_final[df_fly_final$flightless == "Psittaciformes",]
df11 = df_fly_final[df_fly_final$flightless == "Struthioniformes",]
df1$russian_fly = 'Летающие птицы'
df2$russian_fly = 'Пингвинообразные'
df3$russian_fly = 'Кивиобразные'
df4$russian_fly = 'Журавлеобразные'
df5$russian_fly = 'Казуарообразные'
df6$russian_fly = 'Тинамуобразные'
df7$russian_fly = 'Голубеобразные'
df8$russian_fly = 'Нандуобразные'
df9$russian_fly = 'Отряд Кагу и солнечной цапли'
df10$russian_fly = 'Попугаеобразные'
df11$russian_fly = 'Страусообразные'
rm(df_russian_fly)
df_russian_fly = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_fly, aes(x = russian_fly, y = GhAhSkew))+
geom_point()+
xlim(c('Летающие птицы', "Тинамуобразные", "Кивиобразные", "Казуарообразные", "Страусообразные", "Нандуобразные",
"Попугаеобразные", "Голубеобразные", "Отряд Кагу и солнечной цапли", "Журавлеобразные", "Пингвинообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Летающие птицы и отряды нелетающих птиц")
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_jitter()+
xlab('Способность к дайвингу')
ggplot(df_dive_final, aes(x = diving, y = ThChSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_jitter()
ggplot(df_dive_final, aes(x = diving, y = ThChSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_dive_final$russian_dive = ''
unique(df_dive_final$diving)
df1 = df_dive_final[df_dive_final$diving == "0",]
df2 = df_dive_final[df_dive_final$diving == "Charadriiformes",]
df3 = df_dive_final[df_dive_final$diving == "Anseriformes",]
df4 = df_dive_final[df_dive_final$diving == "Coraciiformes",]
df5 = df_dive_final[df_dive_final$diving == "Suliformes",]
df6 = df_dive_final[df_dive_final$diving == "Sphenisciformes",]
df7 = df_dive_final[df_dive_final$diving == "Passeriformes",]
df8 = df_dive_final[df_dive_final$diving == "Procellariiformes",]
df9 = df_dive_final[df_dive_final$diving == "Gruiformes",]
df10 = df_dive_final[df_dive_final$diving == "Gaviiformes",]
df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
#Midory mutspec data
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/internal_12_syn_mutspec_all", header = TRUE, fill = TRUE)
#Midory mutspec data
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/internal_12_syn_mutspec_all.csv", header = TRUE, fill = TRUE)
View(mut_data)
#Midory mutspec data
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/internal_12_syn_mutspec_all.csv", header = TRUE, fill = TRUE, sep = ',')
View(mut_data)
library(stringr)
mut_data[c('gene_name', 'species_name')] <- str_split_fixed(mut_data$gene_and_species, '__', 2)
unique(mut_data$gene_name)
mut_data = mut_data[,c(2,3,4,5,7,8)]
View(df_mtdna)
ex = reshape(data = mut_data, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
View(ex)
warnings()
mut_data_no_gene = mut_data[,c(1,2,3,4,6)]
View(mut_data_no_gene)
mut_data_no_gene = mut_data[,c(1,4,6)]
ex = reshape(data = mut_data, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
View(ex)
ex = reshape(data = mut_data_no_gene, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
sum(unique(mut_data_no_gene$species_name))
count(unique(mut_data_no_gene$species_name))
length(unique(mut_data_no_gene$species_name))
warnings()
names(ex) = c('species_name', 'A>G', 'A>T', 'C>A', 'C>G', 'C>T', 'G>A', 'G>C','G>T','T>A', 'T>C', 'T>G', 'A>C')
eco_data = unique(df_mtdna[c('species_name', 'realm', 'Trophic_niche'),])
View(eco_data)
eco_data = df_mtdna[c('species_name', 'realm', 'Trophic_niche'),]
View(eco_data)
eco_data = unique(,df_mtdna[c('species_name', 'realm', 'Trophic_niche')])
eco_data = unique(df_mtdna[,c('species_name', 'realm', 'Trophic_niche')])
View(eco_data)
eco_data$species_name = gsub(' ', '_', eco_data$species_name)
midori_birds = merge(ex, eco_data, by = 'species_name')
View(midori_birds)
View(mut_data)
midori_birds_extra = merge(mut_data, eco_data, by = 'species_name')
View(ex)
View(mut_data_no_gene)
length(unique(mut_data$gene_name))
know = mut_data_no_gene[mut_data_no_gene$species_name == 'Adelomyia_melanogenys']
know = mut_data_no_gene[mut_data_no_gene$species_name == 'Adelomyia_melanogenys',]
View(know)
know = mut_data_no_gene[mut_data$species_name == 'Adelomyia_melanogenys',]
rm(know)
know = mut_data_no_gene[mut_data$species_name == 'Adelomyia_melanogenys',]
View(know)
know = mut_data[mut_data$species_name == 'Adelomyia_melanogenys',]
View(midori_birds_extra)
ggplot(midori_birds_extra, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ex1 = ex
G
names(ex1) = c('species_name', 'T>C', 'T>A', 'G>T', 'G>C', 'G>A', 'C>T', 'C>G','C>A','A>T', 'A>G', 'A>C', 'T>G')
eco_data = unique(df_mtdna[,c('species_name', 'realm', 'Trophic_niche')])
eco_data$species_name = gsub(' ', '_', eco_data$species_name)
midori_birds1 = merge(ex1, eco_data, by = 'species_name')
AC = mut_data[mut_data$Mut == 'A>C',]
AG = mut_data[mut_data$Mut == 'A>G',]
AT = mut_data[mut_data$Mut == 'A>T',]
GC = mut_data[mut_data$Mut == 'G>C',]
GT = mut_data[mut_data$Mut == 'G>T',]
GA = mut_data[mut_data$Mut == 'G>A',]
CG = mut_data[mut_data$Mut == 'C>G',]
CT = mut_data[mut_data$Mut == 'C>T',]
CA = mut_data[mut_data$Mut == 'C>A',]
TG = mut_data[mut_data$Mut == 'T>G',]
TC = mut_data[mut_data$Mut == 'T>C',]
TA = mut_data[mut_data$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
View(AC)
AC = AC[,c(2,3,4,5,6,7)]
names(AC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(2,3,4,5,6,7)]
names(AG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(2,3,4,5,6,7)]
names(AT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[c(2,3,4,5,6,7)]
names(GC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(2,3,4,5,6,7)]
names(GT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(2,3,4,5,6,7)]
names(GA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(2,3,4,5,6,7)]
names(CG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(2,3,4,5,6,7)]
names(CT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(2,3,4,5,6,7)]
names(CA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(2,3,4,5,6,7)]
names(TG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(2,3,4,5,6,7)]
names(TC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(2,3,4,5,6,7)]
names(TA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
mut_data_reverse = rbind(AC, AG, AT, GC, GT, GA, CT, CG, CA, TA, TC, TG)
View(mut_data_reverse)
midori_birds_extra1 = merge(mut_data_reverse, eco_data, by = 'species_name')
ggplot(midori_birds_extra1, aes(x = Mut, y = MutSpec))+
geom_boxplot()
View(midori_birds_extra1)
ggplot(midori_birds_extra1, aes(x = Mut, y = MutSpec, fill = realm))+
geom_boxplot()
ggplot(midori_birds_extra1, aes(x = Mut, y = MutSpec, fill = Trophic_niche))+
geom_boxplot()
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
df_fly = read.csv('../Paper_materials/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_eco = df_mtdna[,c('species_name','realm','Trophic_niche')]
df_fly_big1 = merge(df_fly, df_eco)
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_fly_final = merge(df_fly_big1, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final = unique(df_fly_final)
ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
View(df_fly_final)
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
View(df_dive_final)
#Midory mutspec data
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/internal_12_syn_mutspec_all.csv", header = TRUE, fill = TRUE, sep = ',')
library(stringr)
mut_data[c('gene_name', 'species_name')] = str_split_fixed(mut_data$gene_and_species, '__', 2)
mut_data = mut_data[,c(2,3,4,5,7,8)]
mut_data_no_gene = mut_data[,c(1,4,6)]
know = mut_data[mut_data$species_name == 'Adelomyia_melanogenys',]
rm(know)
ex = reshape(data = mut_data_no_gene, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
names(ex) = c('species_name', 'A>G', 'A>T', 'C>A', 'C>G', 'C>T', 'G>A', 'G>C','G>T','T>A', 'T>C', 'T>G', 'A>C')
ex1 = ex
eco_data = unique(df_mtdna[,c('species_name', 'realm', 'Trophic_niche')])
eco_data$species_name = gsub(' ', '_', eco_data$species_name)
midori_birds = merge(ex, eco_data, by = 'species_name')
midori_birds_extra = merge(mut_data, eco_data, by = 'species_name')
names(ex1) = c('species_name', 'T>C', 'T>A', 'G>T', 'G>C', 'G>A', 'C>T', 'C>G','C>A','A>T', 'A>G', 'A>C', 'T>G')
eco_data = unique(df_mtdna[,c('species_name', 'realm', 'Trophic_niche')])
eco_data$species_name = gsub(' ', '_', eco_data$species_name)
midori_birds1 = merge(ex1, eco_data, by = 'species_name')
AC = mut_data[mut_data$Mut == 'A>C',]
AG = mut_data[mut_data$Mut == 'A>G',]
AT = mut_data[mut_data$Mut == 'A>T',]
GC = mut_data[mut_data$Mut == 'G>C',]
GT = mut_data[mut_data$Mut == 'G>T',]
GA = mut_data[mut_data$Mut == 'G>A',]
CG = mut_data[mut_data$Mut == 'C>G',]
CT = mut_data[mut_data$Mut == 'C>T',]
CA = mut_data[mut_data$Mut == 'C>A',]
TG = mut_data[mut_data$Mut == 'T>G',]
TC = mut_data[mut_data$Mut == 'T>C',]
TA = mut_data[mut_data$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(2,3,4,5,6,7)]
names(AC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(2,3,4,5,6,7)]
names(AG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(2,3,4,5,6,7)]
names(AT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[c(2,3,4,5,6,7)]
names(GC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(2,3,4,5,6,7)]
names(GT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(2,3,4,5,6,7)]
names(GA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(2,3,4,5,6,7)]
names(CG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(2,3,4,5,6,7)]
names(CT) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(2,3,4,5,6,7)]
names(CA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(2,3,4,5,6,7)]
names(TG) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(2,3,4,5,6,7)]
names(TC) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(2,3,4,5,6,7)]
names(TA) = c('ObsNum', 'ExpNum', 'MutSpec', 'gene_name', 'species_name', 'Mut')
mut_data_reverse = rbind(AC, AG, AT, GC, GT, GA, CT, CG, CA, TA, TC, TG)
midori_birds_extra1 = merge(mut_data_reverse, eco_data, by = 'species_name')
View(midori_birds_extra1)
View(midori_birds_extra)
df_dive_ms = df_dive_final[,c(1,3)]
df_dive_ms_big = merge(midori_birds_extra1, df_dive_ms)
df_dive_ms$species_name = gsub(' ', '_', df_dive_ms$species_name)
df_dive_ms_big = merge(midori_birds_extra1, df_dive_ms, by = 'species_name')
View(midori_birds_extra)
View(midori_birds)
length(unique(midori_birds_extra1$species_name))
View(df_dive_ms_big)
df_fly_ms = df_fly_final[,c(1,2)]
df_fly_ms$species_name = gsub(' ', '_', df_fly_ms$species_name)
df_fly_ms_big = merge(midori_birds_extra1, df_fly_ms, by = 'species_name')
ggplot(df_dive_ms_big, aes(x = Mut, y = MutSpec, fill = diving))+
geom_boxplot()
ggplot(df_fly_ms_big, aes(x = Mut, y = MutSpec, fill = flying))+
geom_boxplot()
ggplot(df_fly_ms_big, aes(x = Mut, y = MutSpec, fill = flyghtless))+
geom_boxplot()
ggplot(df_fly_ms_big, aes(x = Mut, y = MutSpec, fill = flightless))+
geom_boxplot()
ggplot(df_dive_ms_big, aes(x = Mut, y = MutSpec, fill = diving))+
geom_dotplot()
ggplot(df_dive_ms_big, aes(x = Mut, y = MutSpec, fill = diving))+
geom_point()
ggplot(df_dive_ms_big, aes(x = Mut, y = MutSpec, color = diving))+
geom_point()
View(df_fly_ms_big)
View(df_dive_ms_big)
rm(list = ls(all=TRUE))
