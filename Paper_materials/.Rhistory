rm(df_russian_fly)
df_russian_fly = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_fly, aes(x = russian_fly, y = GhAhSkew))+
geom_point()+
xlim(c('Летающие птицы', "Тинамуобразные", "Кивиобразные", "Казуарообразные", "Страусообразные", "Нандуобразные",
"Попугаеобразные", "Голубеобразные", "Отряд Кагу и солнечной цапли", "Журавлеобразные", "Пингвинообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Летающие птицы и отряды нелетающих птиц")
ggplot(df_russian_fly, aes(x = russian_fly, y = GhAhSkew))+
geom_point()+
xlim(c('Летающие птицы', "Тинамуобразные", "Кивиобразные", "Казуарообразные", "Страусообразные", "Нандуобразные",
"Попугаеобразные", "Голубеобразные", "Отряд Кагу и солнечной цапли", "Журавлеобразные", "Пингвинообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Летающие птицы и отряды нелетающих птиц")+
ylab('Метрика окислительного стресса (GhAhSkew)')
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_dive_final$russian_dive = ''
unique(df_dive_final$diving)
df1 = df_dive_final[df_dive_final$diving == "0",]
df2 = df_dive_final[df_dive_final$diving == "Charadriiformes",]
df3 = df_dive_final[df_dive_final$diving == "Anseriformes",]
df4 = df_dive_final[df_dive_final$diving == "Coraciiformes",]
df5 = df_dive_final[df_dive_final$diving == "Suliformes",]
df6 = df_dive_final[df_dive_final$diving == "Sphenisciformes",]
df7 = df_dive_final[df_dive_final$diving == "Passeriformes",]
df8 = df_dive_final[df_dive_final$diving == "Procellariiformes",]
df9 = df_dive_final[df_dive_final$diving == "Gruiformes",]
df10 = df_dive_final[df_dive_final$diving == "Gaviiformes",]
df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")+
ylab('Метрика окислительного стресса (GhAhSkew)')
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_for_diploma[,c('species_name', 'russian_eco', 'russian_tn')]
ecozone_data = unique(ecozone_data)
View(mut_data_syn)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
View(mut_data_syn)
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_syn$MutSpec =  as.numeric(mut_data_syn$MutSpec)
AC = mut_data_syn[mut_data_syn$Mut == 'A>C',]
AG = mut_data_syn[mut_data_syn$Mut == 'A>G',]
AT = mut_data_syn[mut_data_syn$Mut == 'A>T',]
GC = mut_data_syn[mut_data_syn$Mut == 'G>C',]
GT = mut_data_syn[mut_data_syn$Mut == 'G>T',]
GA = mut_data_syn[mut_data_syn$Mut == 'G>A',]
CG = mut_data_syn[mut_data_syn$Mut == 'C>G',]
CT = mut_data_syn[mut_data_syn$Mut == 'C>T',]
CA = mut_data_syn[mut_data_syn$Mut == 'C>A',]
TG = mut_data_syn[mut_data_syn$Mut == 'T>G',]
TC = mut_data_syn[mut_data_syn$Mut == 'T>C',]
TA = mut_data_syn[mut_data_syn$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(1,3,4,5,6,7,8,9,10)]
names(AC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
View(AC)
df_fly = read.csv('../Paper_materials/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_eco = df_mtdna[,c('species_name','realm','Trophic_niche')]
df_fly_big1 = merge(df_fly, df_eco)
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_fly_final = merge(df_fly_big1, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final = unique(df_fly_final)
df_fly_final$russian_fly = ''
df_fly_final$russian_dive = ''
unique(df_fly_final$flightless)
df1 = df_fly_final[df_fly_final$flightless == "0",]
df2 = df_fly_final[df_fly_final$flightless == "Sphenisciformes",]
df3 = df_fly_final[df_fly_final$flightless == "Apterygiformes",]
df4 = df_fly_final[df_fly_final$flightless == "Gruiformes",]
df5 = df_fly_final[df_fly_final$flightless == "Casuariiformes",]
df6 = df_fly_final[df_fly_final$flightless == "Tinamiformes",]
df7 = df_fly_final[df_fly_final$flightless == "Columbiformes",]
df8 = df_fly_final[df_fly_final$flightless == "Rheiformes",]
df9 = df_fly_final[df_fly_final$flightless == "Eurypygiformes",]
df10 = df_fly_final[df_fly_final$flightless == "Psittaciformes",]
df11 = df_fly_final[df_fly_final$flightless == "Struthioniformes",]
df1$russian_fly = 'Летающие птицы'
df2$russian_fly = 'Пингвинообразные'
df3$russian_fly = 'Кивиобразные'
df4$russian_fly = 'Журавлеобразные'
df5$russian_fly = 'Казуарообразные'
df6$russian_fly = 'Тинамуобразные'
df7$russian_fly = 'Голубеобразные'
df8$russian_fly = 'Нандуобразные'
df9$russian_fly = 'Отряд Кагу и солнечной цапли'
df10$russian_fly = 'Попугаеобразные'
df11$russian_fly = 'Страусообразные'
rm(df_russian_fly)
df_russian_fly = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_fly, aes(x = russian_fly, y = GhAhSkew))+
geom_point()+
xlim(c('Летающие птицы', "Тинамуобразные", "Кивиобразные", "Казуарообразные", "Страусообразные", "Нандуобразные",
"Попугаеобразные", "Голубеобразные", "Отряд Кагу и солнечной цапли", "Журавлеобразные", "Пингвинообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Летающие птицы и отряды нелетающих птиц")+
ylab('Метрика окислительного стресса (GhAhSkew)')
df_eco = unique(df_eco)
df_fly = merge(df_fly, df_eco, by = 'species_name')
rm(df_for_graph)
df_for_graph = merge(df_fly, df_short, by = 'species_name')
ggplot(df_for_graph, aes(x = flightless, y = GhAhSkew, color=realm))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
View(df_dive_final)
df_dive_final$russian_dive = ''
unique(df_dive_final$diving)
df1 = df_dive_final[df_dive_final$diving == "0",]
df2 = df_dive_final[df_dive_final$diving == "Charadriiformes",]
df3 = df_dive_final[df_dive_final$diving == "Anseriformes",]
df4 = df_dive_final[df_dive_final$diving == "Coraciiformes",]
df5 = df_dive_final[df_dive_final$diving == "Suliformes",]
df6 = df_dive_final[df_dive_final$diving == "Sphenisciformes",]
df7 = df_dive_final[df_dive_final$diving == "Passeriformes",]
df8 = df_dive_final[df_dive_final$diving == "Procellariiformes",]
df9 = df_dive_final[df_dive_final$diving == "Gruiformes",]
df10 = df_dive_final[df_dive_final$diving == "Gaviiformes",]
df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")+
ylab('Метрика окислительного стресса (GhAhSkew)')
View(df_russian_dive)
df_russian_dive$species_name = gsub(' ', '_', df_russian_dive$species_name)
df_russian_fly$species_name = gsub(' ', '_', df_russian_fly$species_name)
df_fly_mut = merge(df_russian_fly, mut_data_syn, by = 'species_name')
df_dive_mut = merge(df_russian_dive, mut_data_syn, by = 'species_name')
View(df_dive_mut)
ggplot(df_fly_mut, aes(x = Mut, y = MutSpec, fill = flightless))+
geom_boxplot()
ggplot(df_fly_mut, aes(x = Mut, y = MutSpec, fill = flightless))+
geom_point()
ggplot(df_fly_mut, aes(x = Mut, y = MutSpec, color = flightless))+
geom_point()
df_fly_mut_zero = df_fly_mut[df_fly_mut$flightless != 0,]
ggplot(df_fly_mut_zero, aes(x = Mut, y = MutSpec, color = flightless))+
geom_point()
#ecology
df_for_diploma = df_mtdna
df_for_diploma$russian_eco = ''
df_for_diploma$russian_tn = ''
dfr1 = df_for_diploma[df_for_diploma$realm == 'Antarctic',]
dfr2 = df_for_diploma[df_for_diploma$realm == 'Nearctic',]
dfr3 = df_for_diploma[df_for_diploma$realm == 'Palearctic',]
dfr4 = df_for_diploma[df_for_diploma$realm == 'Indo_Malay',]
dfr5 = df_for_diploma[df_for_diploma$realm == 'Afrotropic',]
dfr6 = df_for_diploma[df_for_diploma$realm == 'Neotropic',]
dfr7 = df_for_diploma[df_for_diploma$realm == 'Madagascar',]
dfr8 = df_for_diploma[df_for_diploma$realm == 'Australian',]
dfr9 = df_for_diploma[df_for_diploma$realm == 'Oceania',]
dfr1$russian_eco = 'Антарктика'
dfr2$russian_eco = 'Неарктика'
dfr3$russian_eco = 'Палеарктика'
dfr4$russian_eco = 'Индо-Малайзия'
dfr5$russian_eco = 'Афротропики'
dfr6$russian_eco = 'Неотропики'
dfr7$russian_eco = 'Мадагаскар'
dfr8$russian_eco = 'Австралия'
dfr9$russian_eco = 'Океания'
df_for_diploma = rbind(dfr1, dfr2, dfr3, dfr4, dfr5, dfr6, dfr7, dfr8, dfr9)
dfr1 = df_for_diploma[df_for_diploma$Trophic_niche == 'Herbivore aquatic',]
dfr2 = df_for_diploma[df_for_diploma$Trophic_niche == 'Scavenger',]
dfr3 = df_for_diploma[df_for_diploma$Trophic_niche == 'Vertivore',]
dfr4 = df_for_diploma[df_for_diploma$Trophic_niche == 'Granivore',]
dfr5 = df_for_diploma[df_for_diploma$Trophic_niche == 'Herbivore terrestrial',]
dfr6 = df_for_diploma[df_for_diploma$Trophic_niche == 'Invertivore',]
dfr7 = df_for_diploma[df_for_diploma$Trophic_niche == 'Aquatic predator',]
dfr8 = df_for_diploma[df_for_diploma$Trophic_niche == 'Nectarivore',]
dfr9 = df_for_diploma[df_for_diploma$Trophic_niche == 'Omnivore',]
dfr10 = df_for_diploma[df_for_diploma$Trophic_niche == 'Frugivore',]
dfr1$russian_tn = 'Водные травоядные'
dfr2$russian_tn = 'Падальщики'
dfr3$russian_tn = 'Позвоночные'
dfr4$russian_tn = 'Зерноядные'
dfr5$russian_tn = 'Наземные травоядные'
dfr6$russian_tn = 'Беспозвоночные'
dfr7$russian_tn = 'Водные хищники'
dfr8$russian_tn = 'Нектароядные'
dfr9$russian_tn = 'Всеядные'
dfr10$russian_tn = 'Плодоядные'
df_for_diploma = rbind(dfr1, dfr2, dfr3, dfr4, dfr5, dfr6, dfr7, dfr8, dfr9, dfr10)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_for_diploma[,c('species_name', 'russian_eco', 'russian_tn')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_syn = merge(mut_data_syn, ecozone_data, by = 'species_name')
mut_data_syn$MutSpec =  as.numeric(mut_data_syn$MutSpec)
AC = mut_data_syn[mut_data_syn$Mut == 'A>C',]
AG = mut_data_syn[mut_data_syn$Mut == 'A>G',]
AT = mut_data_syn[mut_data_syn$Mut == 'A>T',]
GC = mut_data_syn[mut_data_syn$Mut == 'G>C',]
GT = mut_data_syn[mut_data_syn$Mut == 'G>T',]
GA = mut_data_syn[mut_data_syn$Mut == 'G>A',]
CG = mut_data_syn[mut_data_syn$Mut == 'C>G',]
CT = mut_data_syn[mut_data_syn$Mut == 'C>T',]
CA = mut_data_syn[mut_data_syn$Mut == 'C>A',]
TG = mut_data_syn[mut_data_syn$Mut == 'T>G',]
TC = mut_data_syn[mut_data_syn$Mut == 'T>C',]
TA = mut_data_syn[mut_data_syn$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(1,3,4,5,6,7,8,9,10)]
names(AC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(1,3,4,5,6,7,8,9,10)]
names(AG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(1,3,4,5,6,7,8,9,10)]
names(AT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[,c(1,3,4,5,6,7,8,9,10)]
names(GC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(1,3,4,5,6,7,8,9,10)]
names(GT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(1,3,4,5,6,7,8,9,10)]
names(GA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(1,3,4,5,6,7,8,9,10)]
names(CG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(1,3,4,5,6,7,8,9,10)]
names(CT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(1,3,4,5,6,7,8,9,10)]
names(CA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(1,3,4,5,6,7,8,9,10)]
names(TG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(1,3,4,5,6,7,8,9,10)]
names(TC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(1,3,4,5,6,7,8,9,10)]
names(TA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
mut_data_syn1 = rbind(AC, AG, AT, GC, GT, GA, CT, CA, CG, TA, TG, TC)
df_fly = read.csv('../Paper_materials/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_eco = df_mtdna[,c('species_name','realm','Trophic_niche')]
df_fly_big1 = merge(df_fly, df_eco)
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_fly_final = merge(df_fly_big1, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final = unique(df_fly_final)
ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_jitter()+
xlab('Неспособность к полету')
df_fly_final$russian_fly = ''
df_fly_final$russian_dive = ''
unique(df_fly_final$flightless)
df1 = df_fly_final[df_fly_final$flightless == "0",]
df2 = df_fly_final[df_fly_final$flightless == "Sphenisciformes",]
df3 = df_fly_final[df_fly_final$flightless == "Apterygiformes",]
df4 = df_fly_final[df_fly_final$flightless == "Gruiformes",]
df5 = df_fly_final[df_fly_final$flightless == "Casuariiformes",]
df6 = df_fly_final[df_fly_final$flightless == "Tinamiformes",]
df7 = df_fly_final[df_fly_final$flightless == "Columbiformes",]
df8 = df_fly_final[df_fly_final$flightless == "Rheiformes",]
df9 = df_fly_final[df_fly_final$flightless == "Eurypygiformes",]
df10 = df_fly_final[df_fly_final$flightless == "Psittaciformes",]
df11 = df_fly_final[df_fly_final$flightless == "Struthioniformes",]
df1$russian_fly = 'Летающие птицы'
df2$russian_fly = 'Пингвинообразные'
df3$russian_fly = 'Кивиобразные'
df4$russian_fly = 'Журавлеобразные'
df5$russian_fly = 'Казуарообразные'
df6$russian_fly = 'Тинамуобразные'
df7$russian_fly = 'Голубеобразные'
df8$russian_fly = 'Нандуобразные'
df9$russian_fly = 'Отряд Кагу и солнечной цапли'
df10$russian_fly = 'Попугаеобразные'
df11$russian_fly = 'Страусообразные'
rm(df_russian_fly)
df_russian_fly = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
df_eco = unique(df_eco)
df_fly = merge(df_fly, df_eco, by = 'species_name')
rm(df_for_graph)
df_dive_final$russian_dive = ''
unique(df_dive_final$diving)
df1 = df_dive_final[df_dive_final$diving == "0",]
df2 = df_dive_final[df_dive_final$diving == "Charadriiformes",]
df3 = df_dive_final[df_dive_final$diving == "Anseriformes",]
df4 = df_dive_final[df_dive_final$diving == "Coraciiformes",]
df5 = df_dive_final[df_dive_final$diving == "Suliformes",]
df6 = df_dive_final[df_dive_final$diving == "Sphenisciformes",]
df7 = df_dive_final[df_dive_final$diving == "Passeriformes",]
df8 = df_dive_final[df_dive_final$diving == "Procellariiformes",]
df9 = df_dive_final[df_dive_final$diving == "Gruiformes",]
df10 = df_dive_final[df_dive_final$diving == "Gaviiformes",]
df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
df_russian_dive$species_name = gsub(' ', '_', df_russian_dive$species_name)
df_russian_fly$species_name = gsub(' ', '_', df_russian_fly$species_name)
df_fly_mut = merge(df_russian_fly, mut_data_syn1, by = 'species_name')
ggplot(df_fly_mut, aes(x = Mut, y = MutSpec, color = flightless))+
geom_point()
df_fly_mut_zero = df_fly_mut[df_fly_mut$flightless != 0,]
ggplot(df_fly_mut_zero, aes(x = Mut, y = MutSpec, color = flightless))+
geom_point()
View(mut_data_syn1)
df_dive_mut = merge(df_russian_dive, mut_data_syn, by = 'species_name')
df_dive_mut = merge(df_russian_dive, mut_data_syn1, by = 'species_name')
View(df_dive_mut)
rm(df_dive_mut)
df_dive_mut = merge(df_russian_dive, mut_data_syn1, by = 'species_name')
View(df_fly_mut_zero)
View(mut_data_syn1)
ggplot(mut_data_syn1, aes(x = Mut, y = MutSpec, color = realm))+
geom_point()
df_antarcit = mut_data_syn1[mut_data_syn1$realm == 'Антарктика',]
View(df_antarcit)
ggplot(df_antarcit, aes(x = Mut, y = MutSpec))+
geom_point()
ggplot(mut_data_syn1, aes(x = Mut, y = MutSpec, color = realm))+
geom_boxplot()+
geom_jitter()
ggplot(df_antarcit, aes(x = Mut, y = MutSpec))+
geom_point()
ggplot(df_antarcit, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
geom_jitter()
ggplot(df_antarcit, aes(x = Mut, y = MutSpec. colot = species_name))+
ggplot(df_antarcit, aes(x = Mut, y = MutSpec, color = species_name))+
geom_point()
ggplot(df_antarcit, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
geom_jitter()
df_fly_mut_nozero = df_fly_mut[df_fly_mut$flightless == 0,]
ggplot(df_fly_mut_zero, aes(x = Mut, y = MutSpec))+
geom_boxplot()
t.test(df_fly_mut_nozero$GhAhSkew, df_fly_mut_zero[df_fly_mut_zero$flightless == 'Sphenisciformes',]$GhAhSkew)
ggplot(df_fly_mut_zero, aes(x = Mut, y = MutSpec, color = flightless))+
geom_point()
ggplot(df_fly_mut_zero, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(df_fly_mut_nozero, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(df_fly_mut_zero[df_fly_mut_zero == 'Sphenisciformes',], aes(x = Mut, y = MutSpec))+
geom_boxplot()
check = df_fly_mut_zero[df_fly_mut_zero == 'Sphenisciformes',]
View(check)
check = df_fly_mut_zero[df_fly_mut_zero$flightless == 'Sphenisciformes',]
ggplot(check, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(check, aes(x = Mut, y = MutSpec))+
geom_point()
View(check)
ggplot(check, aes(x = Mut, y = MutSpec. color = realm))+
ggplot(check, aes(x = Mut, y = MutSpec, color = realm))+
geom_point()
ggplot(check, aes(x = Mut, y = MutSpec, color = realm.x))+
geom_point()
View(df_dive_mut)
df_dive_mut_zero = df_dive_mut[df_dive_mut$flightless != 0,]
df_dive_mut_nozero = df_dive_mut[df_dive_mut$flightless == 0,]
View(df_dive_mut_nozero)
ggplot(df_dive_mut_zero, aes(x = Mut, y = MutSpec))+
geom_point()
df_dive_mut_zero = df_dive_mut[df_dive_mut$diving != 0,]
df_dive_mut_nozero = df_dive_mut[df_dive_mut$diving == 0,]
ggplot(df_dive_mut_zero, aes(x = Mut, y = MutSpec))+
geom_point()
ggplot(df_dive_mut_zero, aes(x = Mut, y = MutSpec, color = diving))+
geom_point()
ggplot(df_dive_mut_nozero, aes(x = Mut, y = MutSpec, color = diving))+
geom_boxplot()
ggplot(df_dive_mut_nozero, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(df_dive_mut_zero, aes(x = Mut, y = MutSpec, color = diving))+
geom_point()
except1 = df_dive_mut_zero[df_dive_mut_zero$diving == 'Anseriformes',]
View(ecozone_data)
View(except1)
except2 = df_dive_mut_zero[df_dive_mut_zero$diving == 'Sphenisciformes',]
ggplot(except1, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(except2, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(except1, aes(x = Mut, y = MutSpec, color = Trophic_niche))+
geom_point()
ggplot(df_dive_mut_zero, aes(x = Mut, y = MutSpec))+
geom_boxplot()
except2 = df_dive_mut_zero[df_dive_mut_zero$diving == 'Anseriformes' | df_dive_mut_zero$diving == 'Sphenisciformes',]
View(df_dive_mut_zero)
except2 = df_dive_mut_zero[df_dive_mut_zero$diving == 'Anseriformes' | df_dive_mut_zero$diving == 'Sphenisciformes' | df_dive_mut_zero$diving == 'Suliformes' | df_dive_mut_zero$diving == 'Gaviiformes' | df_dive_mut_zero$diving == 'Podicipediformes',]
ggplot(except2, aes(x = Mut, y = MutSpec))+
geom_boxplot()
View(except1)
View(except2)
rm(list = ls(all=TRUE))
