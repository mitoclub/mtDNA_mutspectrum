df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
geom_jitter()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point(outlier.shape = NA)+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
df1 = df_russian_fly[df_russian_fly$flightless == "Apterygiformes",]
df2 = df_russian_fly[df_russian_fly$flightless == "Casuariiformes",]
df3 = df_russian_fly[df_russian_fly$flightless == "Tinamiformes",]
df4 = df_russian_fly[df_russian_fly$flightless == "Rheiformes",]
df5 = df_russian_fly[df_russian_fly$flightless == "Struthioniformes",]
df6 = rbind(df1, df2, df3, df4, df5)
df7 = df_russian_fly[df_russian_fly$flightless == "0",]
wilcox.test(df6$GhAhSkew, df7$GhAhSkew)
df1 = df_russian_fly[df_russian_fly$flightless == "Gruiformes",]
df2 = df_russian_fly[df_russian_fly$flightless == "Columbiformes",]
df3 = df_russian_fly[df_russian_fly$flightless == "Eurypygiformes",]
df4 = df_russian_fly[df_russian_fly$flightless == "Psittaciformes",]
df6 = rbind(df1, df2, df3, df4)
df7 = df_russian_fly[df_russian_fly$flightless == "0",]
wilcox.test(df6$GhAhSkew, df7$GhAhSkew)
rm(list = ls(all=TRUE))
library(ggplot2)
library(ggpubr)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
unzip("../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
names(SynNuc)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Млекопитающие'
new_bird = df_mtdna[, c('species_name', 'gene_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Птицы'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
new_bird$gene_name[new_bird$gene_name == 'CYTB'] = 'CytB'
names(new_mam) = c('species_name', 'gene_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=-0.5, label= "GhAhSkew")+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none")
new_b_and_m
for_article = SynNuc[, c(1, 2, 73, 74, 75, 76)]
for_article = for_article[for_article$Gene != 'ND6',]
for_article$class = 'Mammalia'
new_bird1 = df_mtdna[, c('species_name', 'gene_name', 'neutral_A','neutral_g', 'neutral_c', 'neutral_T')]
new_bird1$class = 'Aves'
new_bird1$species_name = gsub(' ', '_', new_bird1$species_name)
new_bird1$gene_name[new_bird1$gene_name == 'CYTB'] = 'CytB'
names(for_article) = c('species_name', 'gene_name', 'neutral_A', 'neutral_T', 'neutral_g', 'neutral_c', 'class')
new_big1 = rbind(for_article, new_bird1)
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.title.y=element_blank(),axis.ticks.y=element_blank(),
legend.position = "none")
new_b_and_m1
View(new_big)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=-0.5, label= "GhAhSkew")+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none")
new_b_and_m
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
new_b_and_m1
new_b_and_m1 = ggplot(new_big, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
new_b_and_m1
View(new_big1)
for_article = SynNuc[, c(1, 2, 73, 74, 75, 76)]
for_article = for_article[for_article$Gene != 'ND6',]
for_article$class = 'Млекопитающие'
new_bird1 = df_mtdna[, c('species_name', 'gene_name', 'neutral_A','neutral_g', 'neutral_c', 'neutral_T')]
new_bird1$class = 'Птицы'
new_bird1$species_name = gsub(' ', '_', new_bird1$species_name)
new_bird1$gene_name[new_bird1$gene_name == 'CYTB'] = 'CytB'
names(for_article) = c('species_name', 'gene_name', 'neutral_A', 'neutral_T', 'neutral_g', 'neutral_c', 'class')
new_big1 = rbind(for_article, new_bird1)
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.title.y=element_blank(),axis.ticks.y=element_blank(),
legend.position = "none")
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
new_b_and_m1
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(color = guide_legend(title = "Экозона"))
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(color = guide_legend(title = "Класс животных"))
new_b_and_m1
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Th")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m1
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m2
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество цитозина')
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество цитозина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество гуанина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Gh")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=150, label= "Ah")+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2")+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество тимина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество цитозина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество гуанина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=175, label= "Gh")+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=150, label= "Ah")+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество цитозина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m2
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
annotate("text", x=8, y=150, label= "Ah")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество аденина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
new_b_and_m4
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Количество гуанина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(fill = guide_legend(title = "Класс животных"))
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Митохондриальные гены')+
ylab('Количество цитозина')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
guides(fill = guide_legend(title = "Класс животных"))
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
#PCA
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_for_diploma[c('species_name', 'russian_eco', 'russian_tn')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
birds_pca = data.frame(stats_pca$x)
birds_pca = birds_pca[,c(1,2)]
birds_pca$species_name = row.names(birds_pca)
gene_stats$species_name = row.names(gene_stats)
gene_stats = merge(gene_stats, birds_pca, by = 'species_name')
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[,c(2:14)]
g5 = ggplot(gene_stats, aes(x=PC1, color=russian_eco)) +
geom_density(linewidth = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (48.0%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))+
ylab('Плотность')+
theme(legend.position="none")
g5
library(ggbiplot)
#PCA
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_for_diploma[c('species_name', 'russian_eco', 'russian_tn')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
biplot(stats_pca)
ggbiplot(stats_pca)
ggbiplot(stats_pca, labels.size = 3)
ggbiplot(stats_pca, labels.size = 4)
ggbiplot(stats_pca)
ggbiplot(stats_pca, labels.size = 0.5)
ggbiplot(stats_pca, labels.size = 4)
ggbiplot(stats_pca, obs.scale = 4)
ggbiplot(stats_pca, obs.scale = 3)
ggbiplot(stats_pca, var.scale = 3)
ggbiplot(stats_pca, var.scale = 4)
ggbiplot(stats_pca, var.scale = 5)
ggbiplot(stats_pca, var.axes = TRUE)
autoplot(stats_pca)
library('ggfortify')
installed.packages(ggfortify)
install.packages(ggfortify)
library(ggfortify)
install.packages('ggfortify')
library(ggfortify)
autoplot(stats_pca)
autoplot(stats_pca,
loadings = TRUE)
autoplot(stats_pca,
loadings = TRUE,
loadings.label = TRUE)
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
df_fly = read.csv('../Paper_materials/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_eco = df_mtdna[,c('species_name','realm','Trophic_niche')]
df_fly_big1 = merge(df_fly, df_eco)
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_fly_final = merge(df_fly_big1, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final = unique(df_fly_final)
df_fly_final$russian_fly = ''
df_fly_final$russian_dive = ''
unique(df_fly_final$flightless)
df1 = df_fly_final[df_fly_final$flightless == "0",]
df2 = df_fly_final[df_fly_final$flightless == "Sphenisciformes",]
df3 = df_fly_final[df_fly_final$flightless == "Apterygiformes",]
df4 = df_fly_final[df_fly_final$flightless == "Gruiformes",]
df5 = df_fly_final[df_fly_final$flightless == "Casuariiformes",]
df6 = df_fly_final[df_fly_final$flightless == "Tinamiformes",]
df7 = df_fly_final[df_fly_final$flightless == "Columbiformes",]
df8 = df_fly_final[df_fly_final$flightless == "Rheiformes",]
df9 = df_fly_final[df_fly_final$flightless == "Eurypygiformes",]
df10 = df_fly_final[df_fly_final$flightless == "Psittaciformes",]
df11 = df_fly_final[df_fly_final$flightless == "Struthioniformes",]
df1$russian_fly = 'Летающие птицы'
df2$russian_fly = 'Пингвинообразные'
df3$russian_fly = 'Кивиобразные'
df4$russian_fly = 'Журавлеобразные'
df5$russian_fly = 'Казуарообразные'
df6$russian_fly = 'Тинамуобразные'
df7$russian_fly = 'Голубеобразные'
df8$russian_fly = 'Нандуобразные'
df9$russian_fly = 'Отряд Кагу и солнечной цапли'
df10$russian_fly = 'Попугаеобразные'
df11$russian_fly = 'Страусообразные'
rm(df_russian_fly)
df_russian_fly = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_fly, aes(x = russian_fly, y = GhAhSkew))+
geom_point()+
xlim(c('Летающие птицы', "Тинамуобразные", "Кивиобразные", "Казуарообразные", "Страусообразные", "Нандуобразные",
"Попугаеобразные", "Голубеобразные", "Отряд Кагу и солнечной цапли", "Журавлеобразные", "Пингвинообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Летающие птицы и отряды нелетающих птиц")
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_jitter()+
xlab('Способность к дайвингу')
ggplot(df_dive_final, aes(x = diving, y = ThChSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_jitter()
ggplot(df_dive_final, aes(x = diving, y = ThChSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_dive_final$russian_dive = ''
unique(df_dive_final$diving)
df1 = df_dive_final[df_dive_final$diving == "0",]
df2 = df_dive_final[df_dive_final$diving == "Charadriiformes",]
df3 = df_dive_final[df_dive_final$diving == "Anseriformes",]
df4 = df_dive_final[df_dive_final$diving == "Coraciiformes",]
df5 = df_dive_final[df_dive_final$diving == "Suliformes",]
df6 = df_dive_final[df_dive_final$diving == "Sphenisciformes",]
df7 = df_dive_final[df_dive_final$diving == "Passeriformes",]
df8 = df_dive_final[df_dive_final$diving == "Procellariiformes",]
df9 = df_dive_final[df_dive_final$diving == "Gruiformes",]
df10 = df_dive_final[df_dive_final$diving == "Gaviiformes",]
df11 = df_dive_final[df_dive_final$diving == "Podicipediformes",]
df1$russian_dive = 'Птицы, не способные к дайвингу'
df2$russian_dive = 'Ржанкообразные'
df3$russian_dive = 'Гусеобразные'
df4$russian_dive = 'Ракшеобразные'
df5$russian_dive = 'Олушеобразные'
df6$russian_dive = 'Пингвинообразные'
df7$russian_dive = 'Воробьинообразные'
df8$russian_dive = 'Буревестникообразные'
df9$russian_dive = 'Журавлеобразные'
df10$russian_dive = 'Гагарообразные'
df11$russian_dive = 'Поганкообразные'
rm(df_russian_dive)
df_russian_dive = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
ggplot(df_russian_dive, aes(x = russian_dive, y = GhAhSkew))+
geom_point()+
xlim(c('Птицы, не способные к дайвингу', "Гусеобразные", "Пингвинообразные", "Поганкообразные", "Гагарообразные", "Олушеобразные",
"Ракшеобразные", "Воробьинообразные", "Журавлеобразные", "Ржанкообразные", "Буревестникообразные"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Птицы, не способные к дайвингу, и отряды птиц - дайверов")
rm(list = ls(all=TRUE))
