xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,5:6],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,7:8],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,9:10],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
a = as.data.frame(temp_birds_pca$S)
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,11:12],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,13:14],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
#SET ALMOST EVERYTHING TO LOG10
temp_birds_pca<-phyl.pca(temp_tree,df_temp_fly[,c(13:14)])
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(temp_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,13:14],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
#only non-flying
df_nf = df_temp_fly[df_temp_fly$ability_to_fly != 'Flying',]
View(df_nf)
not_fly_species = setdiff(df_temp_fly$species_name, df_nfr$species_name)
not_fly_species = setdiff(df_temp_fly$species_name, df_nf$species_name)
correct_not_fly_species = setdiff(df_temp_fly$species_name, not_fly_species)
not_fly_tree<-keep.tip(temp_tree,correct_not_fly_species)
not_fly_tree
write.tree(not_fly_tree ,file="non-flying_birds_tree.tre")
#not_fly_species = setdiff(df_temp_fly$species_name, df_nf$species_name)
#correct_not_fly_species = setdiff(df_temp_fly$species_name, not_fly_species)
#not_fly_tree<-keep.tip(temp_tree,correct_not_fly_species)
#not_fly_tree
write.tree(not_fly_tree ,file="non_flying_birds_tree.tre")
nf_tree = read.tree('non_flying_and_temp.tre')
nf_tree = read.tree('non_flying_birds_tree.tre')
nf_birds_pca<-phyl.pca(nf_tree,df_nf[,c(2:11)])
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(nf_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
legend(x="bottomright",legend=levels(eco),cex=0.6,pch=21,
pt.bg=rainbow(n=length(levels(eco))),pt.cex=1.5)
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
legend(x="bottomright",legend=levels(eco),cex=0.6,pch=21,
pt.bg=rainbow(n=length(levels(eco))),pt.cex=1.5)
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,3:4],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC3",
ylab="PC4")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,5:6],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC5",
ylab="PC6")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,7:8],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC7",
ylab="PC8")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,9:10],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC9",
ylab="PC10")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
nf_birds_pca<-phyl.pca(nf_tree,df_nf[,c(2:16)])
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(nf_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(nf_tree,
scores(nf_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_nf$ability_to_fly = as.factor(df_nf$ability_to_fly)
df_nf$species_name = as.factor(df_nf$species_name)
df_nf$realm = as.factor(df_nf$realm)
eco<-setNames(df_nf[,17],rownames(df_nf))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[nf_tree$tip.label,],cex=0.3)
View(df_temp_fly)
#SET ALMOST EVERYTHING TO LOG10
temp_birds_pca<-phyl.pca(temp_tree,df_temp_fly[,c(2:16)])
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(temp_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
#color legend!!!! do later
df_temp_fly$ability_to_fly = as.factor(df_temp_fly$ability_to_fly)
df_temp_fly$species_name = as.factor(df_temp_fly$species_name)
df_temp_fly$realm = as.factor(df_temp_fly$realm)
eco<-setNames(df_temp_fly[,17],rownames(df_temp_fly))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[temp_tree$tip.label,],cex=0.3)
#SET ALMOST EVERYTHING TO LOG10
temp_birds_pca<-phyl.pca(temp_tree,df_temp_fly[,c(2:11)])
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(temp_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
rm(list = ls(all=TRUE))
<<<<<<< HEAD
rm(list = ls(all=TRUE))
library(ape)
library(phangorn)
library(phytools)
library(geiger)
=======
#new PGLS for birds
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
corBM
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying)
#add temp
df_temp = read.csv('Birds_temperature_table.csv')
View(df_temp)
#add temp
df_temp = read.csv('birds_metrics.csv')
View(df_temp)
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_flight_names = read.csv('flight_and_gene.csv')
View(df_flight_names)
#add temp
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_flight_names = read.csv('flight_and_gene.csv')
df_flight_names = df_flight_names[,c(2:3)]
df_flight_names = merge(df_flight_names, df_realms)
rownames(df_flight_names) = df_flight_names$species_name
#new PGLS for birds
rm(list = ls(all=TRUE))
#add temp
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_realms = unique(df_mtdna[,c('species_name', 'realm')])
df_realms$species_name = gsub(' ', '_', df_realms$species_name)
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_flight_names = read.csv('flight_and_gene.csv')
df_flight_names = df_flight_names[,c(2:3)]
df_flight_names = merge(df_flight_names, df_realms)
rownames(df_flight_names) = df_flight_names$species_name
df_temp_fly = df_temp_fly[,c(2:17)]
df_temp_fly = merge(df_temp_fly, df_flight_names)
rownames(df_temp_fly) = df_temp_fly$species_name
View(df_temp_fly)
temp_tree = read.tree('temperature_birds_tree.tre')
name.check(temp_tree, df_temp_fly)
temp_tree = read.tree('flight_and_temp.tre')
name.check(temp_tree, df_temp_fly)
spp = rownames(df_temp_fly)
corBM = corBrownian(phy=temp_tree,form=~spp)
#new PGLS for birds
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying)
#new PGLS for birds
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
spp = rownames(df_flight)
flying_tree
View(flying_tree)
View(df_flight)
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' & df_flight$ability_to_fly =='Sphenisciformes',]
View(df_fly_peng)
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
View(df_fly_not)
not_fly_species = setdiff(df_flight$species_name, df_fly_peng$species_name)
correct_not_fly_species = setdiff(df_flight$species_name, not_fly_species)
not_fly_tree<-keep.tip(flying_tree,correct_not_fly_species)
not_fly_tree
write.tree(not_fly_tree, 'flying_and_peng.tre')
not_fly_species = setdiff(df_flight$species_name, df_fly_not$species_name)
correct_not_fly_species = setdiff(df_flight$species_name, not_fly_species)
not_fly_tree<-keep.tip(flying_tree,correct_not_fly_species)
not_fly_tree
write.tree(not_fly_tree, 'flying_and_no_peng.tre')
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
View(df_fly_peng)
spp = rownames(df_fly_peng)
corBM = corBrownian(phy=peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng,correlation=corBM)
summary(pgls_flying)
anova(pgls_flying)
spp = rownames(df_fly_not)
corBM = corBrownian(phy=no_peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corBM)
summary(pgls_flying)
#mutspec PGLS
df_mutspec = read.csv('C:\Users\User\Desktop\expected_mutations.tsv')
#mutspec PGLS
df_mutspec = read.csv('C:/Users/User/Desktop/expected_mutations.tsv')
View(df_mutspec)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/expected_mutations.tsv')
View(df_mutspec)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/expected_mutations.tsv', header = TRUE, fill = TRUE)
View(df_mutspec)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
View(df_mutspec)
df_ff = df_mutspec[df_mutspec$Label == 'ff',]
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
View(df_ff)
df_ff = mut_data_syn[!grepl('Node', df_ff$AltNode),]
df_ff = df_ff[!grepl('Node', df_ff$AltNode),]
View(df_ff)
df_ff = df_ff[,c(1,5,7)]
df_ff1 = reshape(data = df_ff, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
df_ff1 = reshape(data = df_ff, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
View(df_ff1)
names(df_ff1) = c('species_name', 'T>G', 'T>C', 'T>A', 'G>T', 'G>C', 'G>A', 'C>T', 'C>G', 'C>A', 'A>T', 'A>G', 'A>C')
df_fly_peng = merge(df_fly_peng, df_ff1)
View(df_fly_peng)
#new PGLS for birds
rm(list = ls(all=TRUE))
>>>>>>> e634a1ed6830f3ffcaf961a7508139671dadf5c8
#new PGLS for birds
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
spp = rownames(df_fly_peng)
corBM = corBrownian(phy=peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng,correlation=corBM)
summary(pgls_flying)
anova(pgls_flying)
spp = rownames(df_fly_not)
corBM = corBrownian(phy=no_peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corBM)
summary(pgls_flying)
anova(pgls_flying)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv', header = TRUE, fill = TRUE)
df_ff = df_mutspec[df_mutspec$Label == 'ff',]
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_ff = df_ff[!grepl('Node', df_ff$AltNode),]
df_ff = df_ff[,c(1,5,7)]
df_ff1 = reshape(data = df_ff, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_ff1) = c('species_name', 'T>G', 'T>C', 'T>A', 'G>T', 'G>C', 'G>A', 'C>T', 'C>G', 'C>A', 'A>T', 'A>G', 'A>C')
View(df_ff1)
df_fly_peng = merge(df_fly_peng, df_ff1)
View(df_fly_peng)
View(df_flight)
View(df_fly_peng)
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_peng1 = merge(df_fly_peng, df_ff1)
need_species = setdiff(df_fly_peng$species_name, df_fly_peng1$species_name)
correct_need_species = setdiff(df_fly_peng$species_name, need_species)
peng_fly_tree1<-keep.tip(peng_fly_tree,correct_need_species)
peng_fly_tree1
spp = rownames(df_fly_peng1)
corBM = corBrownian(phy=peng_fly_tree1,form=~spp)
View(df_fly_peng1)
pgls_mt_peng = gls(A>G~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
pgls_mt_peng = gls(`A>G`~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
pgls_mt_peng = gls(df_fly_peng1$`A>G`~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
df_fly_peng1$`A>G` = as.numeric(as.character(df_fly_peng1$`A>G`))
pgls_mt_peng = gls(df_fly_peng1$`A>G`~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
pgls_mt_peng = gls(df_fly_peng1$`A>G`~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
names(df_ff1) = c('species_name', 'Mutation_T>G', 'Mutation_T>C', 'Mutation_T>A', 'Mutation_G>T', 'Mutation_G>C',
'Mutation_G>A', 'Mutation_C>T', 'Mutation_C>G', 'Mutation_C>A', 'Mutation_A>T', 'Mutation_A>G', 'Mutation_A>C')
View(df_ff1)
df_fly_peng1 = merge(df_fly_peng, df_ff1)
View(df_fly_peng1)
need_species = setdiff(df_fly_peng$species_name, df_fly_peng1$species_name)
correct_need_species = setdiff(df_fly_peng$species_name, need_species)
peng_fly_tree1<-keep.tip(peng_fly_tree,correct_need_species)
spp = rownames(df_fly_peng1)
corBM = corBrownian(phy=peng_fly_tree1,form=~spp)
names(df_ff1) = c('species_name', 'Mutation_TG', 'Mutation_TC', 'Mutation_TA', 'Mutation_GT', 'Mutation_GC',
'Mutation_GA', 'Mutation_CT', 'Mutation_CG', 'Mutation_CA', 'Mutation_AT', 'Mutation_AG', 'Mutation_AC')
df_fly_peng1 = merge(df_fly_peng, df_ff1)
need_species = setdiff(df_fly_peng$species_name, df_fly_peng1$species_name)
correct_need_species = setdiff(df_fly_peng$species_name, need_species)
peng_fly_tree1<-keep.tip(peng_fly_tree,correct_need_species)
spp = rownames(df_fly_peng1)
corBM = corBrownian(phy=peng_fly_tree1,form=~spp)
df_fly_peng1$Mutation_AG = as.numeric(as.character(df_fly_peng1$Mutation_AG))
pgls_mt_peng = gls(Mutation_AG~ability_to_fly,
data=df_fly_peng1,correlation=corBM)
typeof(df_fly_peng1$Mutation_AG)
df_fly_peng1$Mutation_AG = as.numeric(as.character(df_fly_peng1$Mutation_AG))
typeof(df_fly_peng1$Mutation_AG)
df_fly_peng1$Mutation_AG = as.numeric(as.character(df_fly_peng1$Mutation_AG))
typeof(df_fly_peng1$Mutation_AG)
df_fly_peng1$Mutation_AG = as.numeric(df_fly_peng1$Mutation_AG)
typeof(df_fly_peng1$Mutation_AG)
#new PGLS for birds
rm(list = ls(all=TRUE))
