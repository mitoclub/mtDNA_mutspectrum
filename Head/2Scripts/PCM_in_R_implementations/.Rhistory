eco<-setNames(df_dive_names[,4],rownames(df_dive_names))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[dive_tree$tip.label,],cex=0.3)
legend(x="center",legend=levels(eco),cex=0.8,pch=21,
pt.bg=rainbow(n=length(levels(eco))),pt.cex=1.5)
#birds phyloPCA
rm(list = ls(all=TRUE))
library(phytools)
df_mtdna = read.csv('Birds_dataset_paper.csv')
flight_tree = read.tree('flying_birds_tree.tre')
diving_tree = read.tree('diving_birds_tree.tre')
flight_tree
diving_tree
library(nlme)
df_eco = read.csv('flying_birds.csv')
View(df_eco)
df_eco = df_eco[,c(2,3,4)]
View(df_mtdna)
df_genestats = df_mtdna[,c('ghahSkew', 'fAn', 'fGn')]
View(df_genestats)
df_genestats = df_mtdna[,c('species_name', 'ghahSkew', 'fAn', 'fGn')]
View(df_genestats)
View(df_eco)
df_flight= df_eco[,c(1,2)]
df_eco = na.omit(df_eco)
df_eco = df_eco[df_eco1$species_name != "Agapornis_pullarius",]
df_eco = df_eco[df_eco$species_name != "Agapornis_pullarius",]
df_eco = read.csv('flying_birds.csv')
df_eco = df_eco[,c(2,3,4)]
df_eco = na.omit(df_eco)
df_eco = df_eco[df_eco$species_name != "Agapornis pullarius",]
df_eco = read.csv('flying_birds.csv')
df_eco = df_eco[,c(2,3,4)]
df_eco = na.omit(df_eco)
df_eco = df_eco[df_eco$x != "Agapornis pullarius",]
df_eco = df_eco[df_eco$x != "Mergus squamatus",]
View(df_genestats)
df_correct_genestats = data.frame()
for (i in unique(df_genestats$species_name))
{
a = df_genestats[df_genestats$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_correct_genestats = rbind(df_need, ab)
}
df_correct_genestats = data.frame()
for (i in unique(df_genestats$species_name))
{
a = df_genestats[df_genestats$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_correct_genestats = rbind(df_correct_genestats, ab)
}
View(df_correct_genestats)
df_correct_genestats = data.frame()
for (i in unique(df_genestats$species_name))
{
a = df_genestats[df_genestats$species_name == i,]
b = sum(a$ghahSkew)/12
c = sum(a$fAn)/12
d = sum(a$fGn)/12
ab = c(i,b,c,d)
df_correct_genestats = rbind(df_correct_genestats, ab)
}
View(df_correct_genestats)
names(df_correct_genestats) =c('species_name', 'GhAhSkew', 'fAn', 'fGn')
View(df_flight)
df_flight = df_flight[df_flight$x != 'Galliformes']
df_flight = df_flight[df_flight$x != 'Galliformes',]
View(df_flight)
#new PGLS for birds
rm(list = ls(all=TRUE))
df_mtdna = read.csv('Birds_dataset_paper.csv')
flight_tree = read.tree('flying_birds_tree.tre')
diving_tree = read.tree('diving_birds_tree.tre')
df_eco = read.csv('flying_birds.csv')
df_eco = df_eco[,c(2,3,4)]
df_eco = na.omit(df_eco)
df_eco = df_eco[df_eco$x != "Agapornis pullarius",]
df_eco = df_eco[df_eco$x != "Mergus squamatus",]
df_genestats = df_mtdna[,c('species_name', 'ghahSkew', 'fAn', 'fGn')]
df_correct_genestats = data.frame()
for (i in unique(df_genestats$species_name))
{
a = df_genestats[df_genestats$species_name == i,]
b = sum(a$ghahSkew)/12
c = sum(a$fAn)/12
d = sum(a$fGn)/12
ab = c(i,b,c,d)
df_correct_genestats = rbind(df_correct_genestats, ab)
}
names(df_correct_genestats) =c('species_name', 'GhAhSkew', 'fAn', 'fGn')
df_flight= df_eco[,c(1,2)]
df_flight = df_flight[df_flight$x != 'Galliformes',]
View(df_flight)
df_flight = df_flight[df_flight$Flightless != 'Galliformes',]
df_flight = df_flight[df_flight$Flightless != 'Flightless',]
df_flight = df_flight[df_flight$Flightless != 'Almost_flightless',]
unique(df_flight$Flightless)
df_flight[df_flight$Flightless == '0',]$Flightless = 'Flying'
names(df_flight) = c('species_name', 'ability_to_fly')
df_flight_metrics = merge(df_flight, df_correct_genestats)
View(df_flight_metrics)
write.csv(df_flight_metrics, 'flight_and_gene.csv')
View(df_flight_metrics)
df_flight_metrics$species_name = gsub(' ', '_', df_flight_metrics$species_name)
rownames(df_flight_metrics) = df_flight_metrics$species_name
write.csv(df_flight_metrics, 'flight_and_gene.csv')
df_dive= df_eco[,c(1,3)]
View(df_eco)
View(df_dive)
df_dive = df_dive[df_dive$Diving != 'waterbird',]
unique(df_dive$Diving)
df_dive = df_dive[df_dive$Diving != "Sphenisciformes",]
df_dive[df_dive$Diving == '0',]$Diving = 'Non-diving'
names(df_dive) = c('species_name', 'ability_to_dive')
df_divet_metrics = merge(df_dive, df_correct_genestats)
df_dive_metrics = merge(df_dive, df_correct_genestats)
df_dive= df_eco[,c(1,3)]
unique(df_dive$Diving)
df_dive = df_dive[df_dive$Diving != 'waterbird',]
df_dive[df_dive$Diving == '0',]$Diving = 'Non-diving'
names(df_dive) = c('species_name', 'ability_to_dive')
df_dive_metrics = merge(df_dive, df_correct_genestats)
df_dive_metrics$species_name = gsub(' ', '_', df_flight_metrics$species_name)
df_dive_metrics$species_name = gsub(' ', '_', df_dive_metrics$species_name)
View(df_dive_metrics)
rownames(df_dive_metrics) = df_dive_metrics$species_name
View(df_dive_metrics)
write.csv(df_dive_metrics, 'dive_and_gene.csv')
library(nlme)
#new PGLS for birds
rm(list = ls(all=TRUE))
df_flight = read.csv('flight_and_gene.csv')
View(df_flight)
df_flight = df_flight[,c(2,3,4,5,6)]
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
corBM
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying)
corLambda = corPagel(value=1,phy=flying_tree,form=~spp)
View(pgls_flying)
corLambda
pgls_flying_lambda = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corLambda)
anova(pgls_flying)
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying']$flight_num = 1
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
#new PGLS for birds
rm(list = ls(all=TRUE))
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
corBM
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying)
pgls_flying_1 = gls(GhAhSkew~flight_num),
pgls_flying_1 = gls(GhAhSkew~flight_num,
data=df_flight,correlation=corBM)
summary(pgls_flying_1)
pgls_flying_1 = gls(flight_num~GhAhSkew,
data=df_flight,correlation=corBM)
summary(pgls_flying_1)
pgls_flying_1 = gls(GhAhSkew~flight_num,
data=df_flight,correlation=corBM)
summary(pgls_flying_1)
library(geiger)
name.check(flying_tree, df_flight)
anova(pgls_flying_1)
anova(pgls_flying)
pgls_flying_2 = gls(fGn~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying_2)
anova(pgls_flying_2)
pgls_flying_3 = gls(fGn~flight_num,
data=df_flight,correlation=corBM)
summary(pgls_flying_3)
anova(pgls_flying_3)
pgls_flying_4 = gls(fGn~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying_4)
pgls_flying_4 = gls(fAn~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying_4)
anova(pgls_flying_4)
pgls_flying_4 = gls(fAn~flight_num,
data=df_flight,correlation=corBM)
summary(pgls_flying_4)
anova(pgls_flying_4)
#diving birds
df_dive = read.csv('dive_and_gene.csv')
View(df_dive)
df_dive = df_dive[,c(2,3,4,5,6)]
df_dive$dive_num = 0
df_dive[df_dive$ability_to_dive != 'Non-diving',]$dive_num = 1
rownames(df_dive) = df_dive$species_name
diving_tree = read.tree('diving_birds_tree.tre')
name.check(diving_tree, df_dive)
View(df_dive)
df_eco = read.csv('flying_birds.csv')
View(df_eco)
rm(df_eco)
df_tree = read.tree('anc_kg.treefile')
library(phytools)
df_tree$tip.label
not_dive_species = setdiff(df_dive$species_name, df_tree$tip.label)
not_dive_species = setdiff(df_dive$species_name, c(df_tree$tip.label))
a = as.data.frame(df_tree$tip.label)
View(a)
names(a) = 'species_name'
not_dive_species = setdiff(df_dive$species_name, a$species_name)
rm(not_dive_species)
not_dive_species = setdiff(df_dive$species_name, a$species_name)
typeof(df_dive$species_name)
typeof(a$species_name)
b = name.check(df_tree, df_dive)
View(b)
b$data_not_tree
b$tree_not_data
b = name.check(diving_tree, df_dive)
b$tree_not_data
b$data_not_tree
not_dive_species = setdiff(df_dive$species_name, b$data_not_tree)
dive_tree_one<-keep.tip(birds_tree,df_dive$species_name)
dive_tree_one<-keep.tip(df_tree,df_dive$species_name)
dive_tree
dive_tree_one
write.tree(dive_tree_one ,file="diving_birds_tree.tre")
diving_tree = read.tree('diving_birds_tree.tre')
name.check(diving_tree, df_dive)
spp = rownames(df_dive)
corBM = corBrownian(phy=diving_tree,form=~spp)
corBM
pgls_dive_1 = gls(GhAhSkew~dive_num,
data=df_dive,correlation=corBM)
summary(pgls_dive_1)
pgls_dive = gls(GhAhSkew~ability_to_dive,
data=df_dive,correlation=corBM)
summary(pgls_dive)
diving_tree
anova(pgls_dive)
View(pgls_dive_1)
#new PGLS for birds
rm(list = ls(all=TRUE))
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$ability_to_fly))
View(df_flight)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
spp = rownames(df_flight)
corBM = corBrownian(phy=flying_tree,form=~spp)
corBM
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying)
anova(pgls_flying)
pgls_flying_1 = gls(GhAhSkew~flight_num,
data=df_flight,correlation=corBM)
summary(pgls_flying_1)
anova(pgls_flying_1)
pgls_flying_2 = gls(fGn~ability_to_fly,
data=df_flight,correlation=corBM)
summary(pgls_flying_2)
#diving birds
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2,3,4,5,6)]
df_dive$dive_num = 0
df_dive[df_dive$ability_to_dive != 'Non-diving',]$dive_num = 1
rownames(df_dive) = df_dive$species_name
diving_tree = read.tree('diving_birds_tree.tre')
diving_tree
name.check(diving_tree, df_dive)
df_dive$ability_to_dive = as.character(df_dive$ability_to_dive)
df_dive$GhAhSkew = as.numeric(as.character(df_dive$GhAhSkew))
df_dive$fAn = as.numeric(as.character(df_dive$fAn))
df_dive$fGn = as.numeric(as.character(df_dive$fGn))
df_dive$dive_num = as.numeric(as.character(df_dive$dive_num))
spp = rownames(df_dive)
corBM = corBrownian(phy=diving_tree,form=~spp)
corBM
pgls_dive = gls(GhAhSkew~ability_to_dive,
data=df_dive,correlation=corBM)
summary(pgls_dive)
View(pgls_dive)
cs <- as.data.frame(summary(pgls_dive)$tTable)
cs
View(cs)
#new PGLS for birds
rm(list = ls(all=TRUE))
library(ape)
library(phangorn)
library(phytools)
library(geiger)
birds_tree<-read.tree(file="../../2Scripts/PCM_in_R_implementations/anc_kg.treefile")
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_eco = read.csv('flying_birds.csv')
df_temp = read.csv('Birds_temperature_table.csv')
View(df_temp)
View(df_mtdna)
View(df_eco)
names(df_mtdna)
df_char1= df_mtdna[,c("Beak_length_Culmen", "Beak_length_Nares", "Beak_width", "Beak_depth", "Tarsus_length", "Wing_length", "Kipps_distance", "Hand_wing_index", "Tail_length", "Mass" )]
View(birds_tree)
View(df_char1)
df_char1= unique(df_mtdna[,c("Beak_length_Culmen", "Beak_length_Nares", "Beak_width", "Beak_depth", "Tarsus_length", "Wing_length", "Kipps_distance", "Hand_wing_index", "Tail_length", "Mass" )])
View(df_temp)
names(df_temp)
df_char2 = df_temp[,c('Species.name', "Latitude", "AnnualTemp", "TempRange", "AnnualPrecip", "PrecipRange")]
View(df_char2)
names(df_char2)= c('species_name', "Latitude", "AnnualTemp", "TempRange", "AnnualPrecip", "PrecipRange")
View(df_char2)
View(df_char1)
df_char1= unique(df_mtdna[,c('species_name',"Beak_length_Culmen", "Beak_length_Nares", "Beak_width", "Beak_depth", "Tarsus_length", "Wing_length", "Kipps_distance", "Hand_wing_index", "Tail_length", "Mass" )])
df_char3 = merge(df_char1, df_char2)
View(df_char3)
df_char1 = df_char1[df_char1$species_name != "Agapornis pullarius",]
df_char1 = df_char1[df_char1$species_name != "Mergus squamatus",]
rm(df_char3)
df_char3 = merge(df_char1, df_char2)
need_species = setdiff(df_char1$species_name, df_char3$species_name)
correct_need_species = setdiff(df_char1$species_name, need_species)
temp_tree<-keep.tip(birds_tree,correct_need_species)
df_char1$species_name = gsub(' ', '_', df_char1$species_name)
df_char3$species_name = gsub(' ', '_', df_char3$species_name)
need_species = setdiff(df_char1$species_name, df_char3$species_name)
correct_need_species = setdiff(df_char1$species_name, need_species)
temp_tree<-keep.tip(birds_tree,correct_need_species)
temp_tree
write.tree(temp_tree ,file="temperature_birds_tree.tre")
View(df_char3)
write.csv(df_char3, 'birds_metrics.csv')
View(df_char3)
#df_char1 = df_char1[df_char1$species_name != "Mergus squamatus",]
#df_char3 = merge(df_char1, df_char2)
#df_char1$species_name = gsub(' ', '_', df_char1$species_name)
#df_char3$species_name = gsub(' ', '_', df_char3$species_name)
#need_species = setdiff(df_char1$species_name, df_char3$species_name)
#correct_need_species = setdiff(df_char1$species_name, need_species)
#temp_tree<-keep.tip(birds_tree,correct_need_species)
#temp_tree
#write.tree(temp_tree ,file="temperature_birds_tree.tre")
#write.csv(df_char3, 'birds_metrics.csv')
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
View(df_temp_fly)
df_temp_fly = df_temp_fly[,c(3:17)]
temp_tree = read.tree('temperature_birds_tree.tre')
name.check(temp_tree, df_temp_fly)
for (i in names(df_temp_fly))
{
df_temp_fly$i = as.numeric(as.character(df_temp_fly$i))
}
df_temp_fly$i
flying_birds_pca<-phyl.pca(temp_tree,df_temp_fly)
df_temp_fly$Beak_length_Culmen = as.numeric(as.character(df_temp_fly$Beak_length_Culmen))
names(df_temp_fly)
df_temp_fly = na.omit(df_temp_fly)
#df_mtdna = read.csv('Birds_dataset_paper.csv')
#df_temp = read.csv('Birds_temperature_table.csv')
#df_char1= unique(df_mtdna[,c('species_name',"Beak_length_Culmen", "Beak_length_Nares", "Beak_width", "Beak_depth", "Tarsus_length", "Wing_length", "Kipps_distance", "Hand_wing_index", "Tail_length", "Mass" )])
#df_char2 = df_temp[,c('Species.name', "Latitude", "AnnualTemp", "TempRange", "AnnualPrecip", "PrecipRange")]
#names(df_char2)= c('species_name', "Latitude", "AnnualTemp", "TempRange", "AnnualPrecip", "PrecipRange")
#df_char1 = df_char1[df_char1$species_name != "Agapornis pullarius",]
#df_char1 = df_char1[df_char1$species_name != "Mergus squamatus",]
#df_char3 = merge(df_char1, df_char2)
#df_char1$species_name = gsub(' ', '_', df_char1$species_name)
#df_char3$species_name = gsub(' ', '_', df_char3$species_name)
df_char3 = na.omit(df_char3)
need_species = setdiff(df_char1$species_name, df_char3$species_name)
correct_need_species = setdiff(df_char1$species_name, need_species)
temp_tree<-keep.tip(birds_tree,correct_need_species)
temp_tree
write.tree(temp_tree ,file="temperature_birds_tree.tre")
write.csv(df_char3, 'birds_metrics.csv')
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_temp_fly = df_temp_fly[,c(3:17)]
temp_tree = read.tree('temperature_birds_tree.tre')
df_temp_fly$Beak_length_Culmen = as.numeric(as.character(df_temp_fly$Beak_length_Culmen))
df_temp_fly$Beak_length_Naresn = as.numeric(as.character(df_temp_fly$Beak_length_Nares))
df_temp_fly$Beak_width = as.numeric(as.character(df_temp_fly$Beak_width))
df_temp_fly$Beak_depth = as.numeric(as.character(df_temp_fly$Beak_depth))
df_temp_fly$Tarsus_length = as.numeric(as.character(df_temp_fly$Tarsus_length))
df_temp_fly$Wing_length = as.numeric(as.character(df_temp_fly$Wing_length))
df_temp_fly$Kipps_distance = as.numeric(as.character(df_temp_fly$Kipps_distance))
df_temp_fly$Hand_wing_index = as.numeric(as.character(df_temp_fly$Hand_wing_index))
df_temp_fly$Tail_length = as.numeric(as.character(df_temp_fly$Tail_length))
df_temp_fly$Mass = as.numeric(as.character(df_temp_fly$Mass))
df_temp_fly$Latitude = as.numeric(as.character(df_temp_fly$Latitude))
df_temp_fly$AnnualTemp = as.numeric(as.character(df_temp_fly$AnnualTemp))
View(df_temp_fly)
#df_char3 = merge(df_char1, df_char2)
#df_char1$species_name = gsub(' ', '_', df_char1$species_name)
#df_char3$species_name = gsub(' ', '_', df_char3$species_name)
#df_char3 = na.omit(df_char3)
#need_species = setdiff(df_char1$species_name, df_char3$species_name)
#correct_need_species = setdiff(df_char1$species_name, need_species)
#temp_tree<-keep.tip(birds_tree,correct_need_species)
#temp_tree
#write.tree(temp_tree ,file="temperature_birds_tree.tre")
#write.csv(df_char3, 'birds_metrics.csv')
df_temp_fly = read.csv('birds_metrics.csv')
View(df_temp_fly)
df_temp_fly$Latitude = as.numeric(as.character(df_temp_fly$Latitude))
#df_char3 = merge(df_char1, df_char2)
#df_char1$species_name = gsub(' ', '_', df_char1$species_name)
#df_char3$species_name = gsub(' ', '_', df_char3$species_name)
#df_char3 = na.omit(df_char3)
#need_species = setdiff(df_char1$species_name, df_char3$species_name)
#correct_need_species = setdiff(df_char1$species_name, need_species)
#temp_tree<-keep.tip(birds_tree,correct_need_species)
#temp_tree
#write.tree(temp_tree ,file="temperature_birds_tree.tre")
#write.csv(df_char3, 'birds_metrics.csv')
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_temp_fly = df_temp_fly[,c(3:17)]
temp_tree = read.tree('temperature_birds_tree.tre')
df_temp_fly$AnnualTemp = gsub(',', '.', df_temp_fly$AnnualTemp)
df_temp_fly$TempRange = gsub(',', '.', df_temp_fly$TempRange)
df_temp_fly$AnnualPrecip = gsub(',', '.', df_temp_fly$AnnualPrecip)
df_temp_fly$PrecipRange= gsub(',', '.', df_temp_fly$PrecipRange)
df_temp_fly$Beak_length_Culmen = as.numeric(as.character(df_temp_fly$Beak_length_Culmen))
df_temp_fly$Beak_length_Naresn = as.numeric(as.character(df_temp_fly$Beak_length_Nares))
df_temp_fly$Beak_width = as.numeric(as.character(df_temp_fly$Beak_width))
df_temp_fly$Beak_depth = as.numeric(as.character(df_temp_fly$Beak_depth))
df_temp_fly$Tarsus_length = as.numeric(as.character(df_temp_fly$Tarsus_length))
df_temp_fly$Wing_length = as.numeric(as.character(df_temp_fly$Wing_length))
df_temp_fly$Kipps_distance = as.numeric(as.character(df_temp_fly$Kipps_distance))
df_temp_fly$Hand_wing_index = as.numeric(as.character(df_temp_fly$Hand_wing_index))
df_temp_fly$Tail_length = as.numeric(as.character(df_temp_fly$Tail_length))
df_temp_fly$Mass = as.numeric(as.character(df_temp_fly$Mass))
df_temp_fly$Latitude = as.numeric(as.character(df_temp_fly$Latitude))
#df_char3 = merge(df_char1, df_char2)
#df_char1$species_name = gsub(' ', '_', df_char1$species_name)
#df_char3$species_name = gsub(' ', '_', df_char3$species_name)
#df_char3 = na.omit(df_char3)
#need_species = setdiff(df_char1$species_name, df_char3$species_name)
#correct_need_species = setdiff(df_char1$species_name, need_species)
#temp_tree<-keep.tip(birds_tree,correct_need_species)
#temp_tree
#write.tree(temp_tree ,file="temperature_birds_tree.tre")
#write.csv(df_char3, 'birds_metrics.csv')
df_temp_fly = read.csv('birds_metrics.csv')
rownames(df_temp_fly) = df_temp_fly$species_name
df_temp_fly = df_temp_fly[,c(3:17)]
temp_tree = read.tree('temperature_birds_tree.tre')
df_temp_fly$Latitude = gsub(',', '.', df_temp_fly$Latitude)
df_temp_fly$AnnualTemp = gsub(',', '.', df_temp_fly$AnnualTemp)
df_temp_fly$TempRange = gsub(',', '.', df_temp_fly$TempRange)
df_temp_fly$AnnualPrecip = gsub(',', '.', df_temp_fly$AnnualPrecip)
df_temp_fly$PrecipRange= gsub(',', '.', df_temp_fly$PrecipRange)
df_temp_fly$Beak_length_Culmen = as.numeric(as.character(df_temp_fly$Beak_length_Culmen))
df_temp_fly$Beak_length_Naresn = as.numeric(as.character(df_temp_fly$Beak_length_Nares))
df_temp_fly$Beak_width = as.numeric(as.character(df_temp_fly$Beak_width))
df_temp_fly$Beak_depth = as.numeric(as.character(df_temp_fly$Beak_depth))
df_temp_fly$Tarsus_length = as.numeric(as.character(df_temp_fly$Tarsus_length))
df_temp_fly$Wing_length = as.numeric(as.character(df_temp_fly$Wing_length))
df_temp_fly$Kipps_distance = as.numeric(as.character(df_temp_fly$Kipps_distance))
df_temp_fly$Hand_wing_index = as.numeric(as.character(df_temp_fly$Hand_wing_index))
df_temp_fly$Tail_length = as.numeric(as.character(df_temp_fly$Tail_length))
df_temp_fly$Mass = as.numeric(as.character(df_temp_fly$Mass))
df_temp_fly$Latitude = as.numeric(as.character(df_temp_fly$Latitude))
df_temp_fly$AnnualTemp = as.numeric(as.character(df_temp_fly$AnnualTemp))
df_temp_fly$TempRange = as.numeric(as.character(df_temp_fly$TempRange))
df_temp_fly$AnnualPrecip = as.numeric(as.character(df_temp_fly$AnnualPrecip))
df_temp_fly$PrecipRange = as.numeric(as.character(df_temp_fly$PrecipRange))
flying_birds_pca<-phyl.pca(temp_tree,df_temp_fly)
temp_birds_pca<-phyl.pca(temp_tree,df_temp_fly)
temp_birds_pca
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(flying_birds_pca,main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(temp_tree,
scores(temp_birds_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1",
ylab="PC2")
rm(list = ls(all=TRUE))
