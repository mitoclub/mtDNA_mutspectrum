df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
df_bon = df[df$p_adj_bon < 0.05,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.1,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.2,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.5,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
rnow = read.csv('../../Body/3Results/Birds_mtDna_data.csv')
rnow$trophic_niche
rnow$species_name[rnow$trophic_niche = 'Aquatic predators',]
rnow$species_name[rnow$trophic_niche == 'Aquatic predator',]
rnow[rnow$trophic_niche == 'Aquatic predator',]
a = rnow[rnow$trophic_niche == 'Aquatic predator',]
View(a)
df_bon = df[df$p_adj_bon < 0.8,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
View(df_disc)
df_disc1 = df_disc[df_disc$p_value < 0.001,]
View(df_disc1)
df_disc2 = df_disc[df_disc$p_value < 0.01,]
View(df_disc2)
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
df_bon = df[df$p_adj_bon < 0.8,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
rnow = read.csv('../../Body/3Results/Birds_mtDna_data.csv')
a = rnow[rnow$trophic_niche == 'Aquatic predator',]
df_disc1 = df_disc[df_disc$p_value < 0.001,] #save table
df_disc2 = df_disc[df_disc$p_value < 0.01,] #save table
View(df_disc)
write.csv(df_disc, 'PGLS_005_lesser.csv')
write.csv(df_disc1, 'PGLS_0001_lesser.csv')
write.csv(df_disc2, 'PGLS_001_lesser.csv')
View(df_disc1)
View(df_disc2)
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
#drawing volcano plot
install.packages("manhattanly")
library(manhattanly)
View(df)
vol_df = df[c(1,2,3),]
View(vol_df)
vol_df = df[,c(1,2,3)]
vol_df = df[,c(1,2,3,4,5)]
volcanoly(vo_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df$log = (-(log10(vol_df$p_value)))
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
unique(vol_df$Ecology1)
unique(vol_df$Ecology2)
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
unique(vol_df$Ecology2)
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
names(vol_df) = c('Ecology1', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
volcanorObj = volcanor(vol_df)
names(vol_df) = c('Ecology1', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanorObj = volcanor(vol_df)
View(volcanorObj)
volcanorObj = volcanor(vol_df, snp = 'Ecology1', gene = 'Ecology2')
View(volcanorObj)
volcanoly(volcanorObj)
rm(list = ls(all=TRUE))
library(ggplot2)
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
#drawing volcano plot
#install.packages("manhattanly")
library(manhattanly)
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
View(vol_df)
vol_df$eff_normalize = ' '
vol_df$eff_normalize = (sign(vol_df$effect_size))*(log2((abs(vol_df$effect_size)+1)))
vol_df_norm = vol_df[,c(1,2,3,5,6)]
View(vol_df_norm)
names(vol_df_norm) = c('Ecology1', 'Ecology2', 'P', 'LOG10P', 'EFFECTSIZE')
volcanorObj = volcanor(vol_df_norm, snp = 'Ecology1', gene = 'Ecology2')
volcanoly(volcanorObj)
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
rm(list=ls(all=T))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Sac = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
library(dplyr)
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_G', 'med_T')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length','Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
library(ggbiplot)
library(ggplot2)
library(ggpubr)
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f1 = f1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f2 = f2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f3 = f3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f4 = f4 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5
cox1 = subset(df_mtdna, df_mtdna$gene_name == 'COX1',)
cox2 = subset(df_mtdna, df_mtdna$gene_name == 'COX2',)
cox3 = subset(df_mtdna, df_mtdna$gene_name == 'COX3',)
atp8 = subset(df_mtdna, df_mtdna$gene_name == 'ATP8',)
atp6 = subset(df_mtdna, df_mtdna$gene_name == 'ATP6',)
nd2 = subset(df_mtdna, df_mtdna$gene_name == 'ND2',)
nd3 = subset(df_mtdna, df_mtdna$gene_name == 'ND3',)
nd4l = subset(df_mtdna, df_mtdna$gene_name == 'ND4L',)
nd4 = subset(df_mtdna, df_mtdna$gene_name == 'ND4',)
nd5 = subset(df_mtdna, df_mtdna$gene_name == 'ND5',)
cytb = subset(df_mtdna, df_mtdna$gene_name == 'CYTB',)
nd6 = subset(df_mtdna, df_mtdna$gene_name == 'ND6',)
nd1 = subset(df_mtdna, df_mtdna$gene_name == 'ND1',)
skew_all = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
skew_all = skew_all + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
skew_all
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot()
skew_eco = skew_eco + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco
stg_all = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot()
stg_all = stg_all + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
stg_all
skew_all = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()+
xlab('Gene names')+
ylab('GhAhSkew')
skew_all = skew_all + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
skew_all
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot()+
xlab('Birds realms')+
ylab('GhAhSkew')
skew_eco = skew_eco + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco
skew_eco = skew_eco + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco
stg_all = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot()+
xlab('Gene names')+
ylab('Stg-Sac')
stg_all = stg_all + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
stg_all
stg_eco = ggplot(data = df_mtdna, aes(x = realm, y = Stg_Sac))+
geom_boxplot()+
xlab('Birds realm')+
ylab('Stg-Sac')
stg_eco = ggplot(data = df_mtdna, aes(x = realm, y = Stg_Sac))+
geom_boxplot()+
xlab('Birds realm')+
ylab('Stg-Sac')
stg_eco = stg_all + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
stg_eco = ggplot(data = df_mtdna, aes(x = realm, y = Stg_Sac))+
geom_boxplot()+
xlab('Birds realm')+
ylab('Stg-Sac')
stg_eco = stg_eco + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
stg_eco = stg_eco + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
stg_eco
skew_eco1 = ggplot(data = df_mtdna, aes(x = trophic_level, y = ghahSkew))+
geom_boxplot()+
xlab('Birds realms')+
ylab('GhAhSkew')
#skew_eco1 = skew_eco1 + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco1 = skew_eco1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco1
skew_eco1 = ggplot(data = df_mtdna, aes(x = trophic_level, y = ghahSkew))+
geom_boxplot()+
xlab('Birds realms')+
ylab('GhAhSkew')
skew_eco1
View(df_mtdna)
skew_eco1 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = ghahSkew))+
geom_boxplot()+
xlab('Birds realms')+
ylab('GhAhSkew')
#skew_eco1 = skew_eco1 + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco1 = skew_eco1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco1
stg_eco1 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = Stg_Sac))+
geom_boxplot()+
xlab('Birds realm')+
ylab('Stg-Sac')
stg_eco1 = stg_eco + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
stg_eco1 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = Stg_Sac))+
geom_boxplot()+
xlab('Birds realm')+
ylab('Stg-Sac')
#stg_eco1 = stg_eco + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
stg_eco1 = stg_eco1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
stg_eco1
