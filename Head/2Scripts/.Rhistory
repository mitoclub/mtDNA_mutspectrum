new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot()
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot()+
xlab('Gene name')+
ylab('Neutral T')
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_G, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')
new_b_and_m3 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral A')
new_b_and_m4 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m4
View(new_b_and_m4)
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')
new_b_and_m3 = new_b_and_m3 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral A')
new_b_and_m4 = new_b_and_m4 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m4
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')
new_b_and_m3 = new_b_and_m3 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral A')
new_b_and_m4 = new_b_and_m4 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m4
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')+
ylim(0, 200)
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')+
ylim(0, 200)
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')+
ylim(0, 200)
new_b_and_m3 = new_b_and_m3 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m3
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral A')+
ylim(0, 200)
new_b_and_m4 = new_b_and_m4 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m4
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f1 = f1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')+
ylim(0, 0.7)
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f1 = f1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')+
ylim(0, 0.7)
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f2 = f2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')+
ylim(0, 0.7)
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f3 = f3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')+
ylim(0, 0.7)
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f4 = f4 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f5 = ggarrange(f1, f3, f2, f4,
ncol = 2, nrow = 2)
f5
f51 = ggarrange(f1,f2,
ncol = 1, nrow = 2)
f51
f5
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')+
ylim(0, 200)
new_b_and_m1 = new_b_and_m1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m1 = new_b_and_m1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
new_b_and_m1
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral C')+
ylim(0, 200)
new_b_and_m2 = new_b_and_m2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m2 = new_b_and_m2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')+
ylim(0, 200)
new_b_and_m3 = new_b_and_m3 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m3 = new_b_and_m3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral A')+
ylim(0, 200)
new_b_and_m4 = new_b_and_m4 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m4 = new_b_and_m4 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f10 = ggarrange(new_b_and_m1, new_b_and_m3, new_b_and_m2, new_b_and_m4,
ncol = 2, nrow = 2)
f10
View(SynNuc)
rm(list=ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_shift = read.csv('../../Head/2Scripts/Aminoacids_shift_birds.csv')
library(reshape2)
df_shift = df_shift[,c(2:67)]
df_shift1 <- melt(df_shift ,  id.vars = 'gene_name', variable.name = 'gene')
df_shift2 = df_shift[,c(2:66)]
df_shift3 = melt(df_shift2, id.vars = 'gene_name')
View(df_shift)
View(df_shift2)
#preparing df for drawing
nd1 = df_shift2[df_shift2$gene_name == 'ND1',]
View(nd1)
#preparing df for drawing
nd1 = df_shift2[df_shift2$gene_name == 'ND1',]
nd2 = df_shift2[df_shift2$gene_name == 'ND2',]
nd3 = df_shift2[df_shift2$gene_name == 'ND3',]
nd4 = df_shift2[df_shift2$gene_name == 'ND4',]
nd4l = df_shift2[df_shift2$gene_name == 'ND4L',]
nd5 = df_shift2[df_shift2$gene_name == 'ND5',]
atp6 = df_shift2[df_shift2$gene_name == 'ATP6',]
atp8 = df_shift2[df_shift2$gene_name == 'ATP8',]
cox1 = df_shift2[df_shift2$gene_name == 'COX1',]
cox2 = df_shift2[df_shift2$gene_name == 'COX2',]
cox3 = df_shift2[df_shift2$gene_name == 'COX3',]
cytb = df_shift2[df_shift2$gene_name == 'CYTB',]
View(cytb)
try1 = (colSums(nd1[,1]))/766
try1 = (colSums(nd1[,-1]))/766
try1
try1 =  data.frame((colSums(nd1[,-1]))/766)
View(try1)
try1 =  data.frame(c((colSums(nd1[,-1]))/766))
View(try1)
a = ((colSums(nd1[,-1]))/766)
a
data.frame(a)
rm(a)
try1$codon = rownames(try1)
names(try1) = c('value', 'codon')
nd1 = data.frame((colSums(nd1[,-1]))/766)
View(nd1)
names(nd1) = c('value')
nd1$codon = rownames(nd1)
nd1$gene_name = 'ND1'
#preparing df for drawing
gene_vector = c('ND1', 'ND2', 'ND3', 'ND4', 'ND4L', 'ND5', 'ATP6', 'ATP8', 'COX1', 'COX2', 'COX3', 'CYTB')
codons_for_graph = data.frame()
for (i in gene_vector)
{
df = df_shift2[df_shift2$gene_name == i,]
df = data.frame((colSums(df[,-1]))/766)
names(df) = c('value')
df$codon = rownames(df)
df$gene_name = i
codons_for_graph = rbind(codons_for_graph, df)
df = data.frame()
}
View(codons_for_graph)
View(codons_for_graph)
View(df_shift)
View(codons_for_graph)
codons_for_graph[codons_for_graph]
codons_for_graph[codons_for_graph$gene_name == 'ND1',]
length(codons_for_graph[codons_for_graph$gene_name == 'ND1',])
rm(list=ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_shift = read.csv('../../Head/2Scripts/Aminoacids_shift_birds.csv')
#preparing df for drawing
gene_vector = c('ND1', 'ND2', 'ND3', 'ND4', 'ND4L', 'ND5', 'ATP6', 'ATP8', 'COX1', 'COX2', 'COX3', 'CYTB')
codons_for_graph = data.frame()
for (i in gene_vector)
{
df = df_shift2[df_shift2$gene_name == i,]
df = data.frame((colSums(df[,-1]))/766)
names(df) = c('value')
df$codon = rownames(df)
df$gene_name = i
codons_for_graph = rbind(codons_for_graph, df)
df = data.frame()
}
library(reshape2)
df_shift = df_shift[,c(2:67)]
df_shift1 <- melt(df_shift ,  id.vars = 'gene_name', variable.name = 'gene')
df_shift2 = df_shift[,c(2:66)]
df_shift3 = melt(df_shift2, id.vars = 'gene_name')
for (i in gene_vector)
{
df = df_shift2[df_shift2$gene_name == i,]
df = data.frame((colSums(df[,-1]))/766)
names(df) = c('value')
df$codon = rownames(df)
df$gene_name = i
codons_for_graph = rbind(codons_for_graph, df)
df = data.frame()
}
View(codons_for_graph)
length(codons_for_graph$value)
for (i in gene_vector)
{
df = df_shift2[df_shift2$gene_name == i,]
df = data.frame((colSums(df[,-1]))/766)
names(df) = c('value')
df$codon = rownames(df)
df$gene_name = i
codons_for_graph = rbind(codons_for_graph, df)
print(length(df$codon))
df = data.frame()
}
View(df_shift2)
df1 = df_shift2[df_shift2$gene_name == 'ND1',]
View(df1)
df1 = data.frame((colSums(df1[,-1]))/766)
View(df1)
rm(df1)
View(codons_for_graph)
#preparing df for drawing
gene_vector = c('ND1', 'ND2', 'ND3', 'ND4', 'ND4L', 'ND5', 'ATP6', 'ATP8', 'COX1', 'COX2', 'COX3', 'CYTB')
codons_for_graph = data.frame()
for (i in gene_vector)
{
df = df_shift2[df_shift2$gene_name == i,]
df = data.frame((colSums(df[,-1]))/766)
names(df) = c('value')
df$codon = rownames(df)
df$gene_name = i
codons_for_graph = rbind(codons_for_graph, df)
df = data.frame()
}
View(codons_for_graph)
ggplot(codons_for_graph, aes(x = gene_name, y = value))+
geom_point()
ggplot(codons_for_graph, aes(x = gene_name, y = value))+
geom_line()+
geom_point()
ggplot(codons_for_graph, aes(x = gene_name, y = value))+
geom_line()
ggplot(codons_for_graph, aes(x = gene_name, y = value, group = codon))+
geom_line(aes(linetype = codon))+
geom_point()
#trying 3d
library(plotly)
plot_ly(data = codons_for_graph, type = 'surface', x = ~gene_name, y = ~codon, z = ~value)
plot_ly(data = codons_for_graph, x = ~gene_name, y = ~codon, z = ~value)
rm(list=ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
View(mut_data)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
unique(mut_data$RefNode)
unique(mut_data$AltNode)
df = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/expected_mutations.tsv", header = TRUE, fill = TRUE)
View(df)
unique(df$Node)
View(df_mtdna)
rm(df)
mut_data_ff = mut_data[mut_data$Label == 'ff',]
View(mut_data_ff)
mut_data_ff = mut_data[,c(1,2,3,4,5,7,8)]
ecozone_data = df_mtdna[,c('species_name', 'ecozone')]
ecozone_data = df_mtdna[,c('species_name', 'realm')]
View(ecozone_data)
ecozone_data = unique(ecozone_data)
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff = mut_data_ff[,c(1,2,3,4,5,7,8)]
mut_data_ff = merge(mut_data_ff, ecozone_data)
View(mut_data_ff)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_ff = merge(mut_data_ff, ecozone_data)
View(mut_data_ff)
mut_data_ff[!grepl('Node', mut_data_ff$AltNode)]
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode)]
mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
mut_data_ff$AltNode = mut_data_ff$species_name
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff = mut_data_ff[,c(1,2,3,4,5,7,8)]
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
names(mut_data_ff$AltNode) = c('species_name')
names(mut_data_ff) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_ff = merge(mut_data_ff, ecozone_data)
mut_data_ff = merge(mut_data_ff, ecozone_data, by = 'species_name')
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff = mut_data_ff[,c(1,2,3,4,5,7,8)]
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
names(mut_data_ff) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_ff = merge(mut_data_ff, ecozone_data, by = 'species_name')
ecozone_data = df_mtdna[,c('species_name', 'realm', 'trophic_niche')]
View(df_mtdna)
ecozone_data = df_mtdna[,c('species_name', 'realm', 'Trophic_niche')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
unique(mut_data$AltNode)
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff = mut_data_ff[,c(1,2,3,4,5,7,8)]
ecozone_data = df_mtdna[,c('species_name', 'realm', 'Trophic_niche')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
names(mut_data_ff) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_ff = merge(mut_data_ff, ecozone_data, by = 'species_name')
library('ggplot2')
library(ggplot2)
ggplot(mut_data_ff, aex(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(mut_data_ff, axis(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(mut_data_ff, axis(x = 'Mut', y = 'MutSpec'))+
geom_boxplot()
ggplot(mut_data_ff, aes(x = 'Mut', y = 'MutSpec'))+
geom_boxplot()
ggplot(mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()
gc()
f1 = ggplot(mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()
f1
View(mut_data_ff)
unique(mut_data_ff$Mut)
ex1 = mut_data_ff[mut_data_ff$species_name == 'Acanthisitta_chloris',]
View(ex1)
ggplot(ex1, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0, 1)
ggplot(mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0, 0.9)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0, 0.9)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0.0, 0.9)
typeof(mut_data_ff$RawMutSpec)
is.na(mut_data_ff$RawMutSpec)
View(mut_data)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = FALSE)
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff[mut_data_ff$RefNode == 'Lonchura_hunsteini']
mut_data_ff[mut_data_ff$RefNode == 'Lonchura_hunsteini',]
typeof(6.7)
typeof(mut_data_ff$RawMutSpec)
min(mut_data_ff$RawMutSpec)
max(mut_data_ff$RawMutSpec)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0.0, 0.5)
mut_data_ff$MutSpec =  as.numeric(mut_data_ff$MutSpec)
typeof(mut_data_ff$RawMutSpec)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()+
ylim(0.0, 0.5)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = realm))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = 'realm'))+
geom_boxplot()
rm(list=ls(all=TRUE))
library(ggplot2)
#four-fold mutations
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
unique(mut_data$AltNode)
mut_data_ff = mut_data[mut_data$Label == 'ff',]
mut_data_ff = mut_data_ff[,c(1,2,3,4,5,7,8)]
ecozone_data = df_mtdna[,c('species_name', 'realm', 'Trophic_niche')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_ff = mut_data_ff[!grepl('Node', mut_data_ff$AltNode),]
names(mut_data_ff) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_ff = merge(mut_data_ff, ecozone_data, by = 'species_name')
mut_data_ff$MutSpec =  as.numeric(mut_data_ff$MutSpec)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = 'realm'))+
geom_boxplot()
View(mut_data_ff)
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, color = 'realm'))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = realm))+
geom_boxplot()
library(plotly)
plot_ly(
data = mut_data_ff,
y = ~MutSpec,
x = ~Mut,
type = "box",
color = ~realm,
)
plot_ly(
data = mut_data_ff,
y = ~MutSpec,
x = ~Mut,
type = "box",
color = ~realm
)
fig <- plot_ly(ggplot2::mut_data_ff, x = ~Mut, y = ~MutSpec, color = ~realm, type = "box")
fig <- plot_ly(mut_data_ff, x = ~Mut, y = ~MutSpec, color = ~realm, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = realm))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, , fill = realm))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = realm))+
geom_boxplot()
ggplot(data = mut_data_ff, aes(x = Mut, y = MutSpec, fill = Trophic_niche))+
geom_boxplot()
fig <- plot_ly(mut_data_ff, x = ~Mut, y = ~MutSpec, type = "box")
fig
fig <- plot_ly(mut_data_ff, x = ~Mut, y = ~MutSpec, color = ~Trophic_niche, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
