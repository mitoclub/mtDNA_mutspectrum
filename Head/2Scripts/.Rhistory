grafA
#comparing neutral nucleotides in genes
grafA = ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralA))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
grafA
grafA + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
grafG = ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralG))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
grafG + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
#neutralC graph
grafC = ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralC))+
geom_boxplot(aes(fill = TrophicLevel),notch = TRUE)
grafC + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
#neutralT graph
grafT = ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralT))+
geom_boxplot(aes(fill = TrophicLevel),notch = TRUE)
grafT + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
#GhAhSkew for birds with different trophic niche
GhAhgrafTN = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = TrophicNiche), notch = TRUE)
library('ggplot2')
#GhAhSkew for birds with different trophic niche
GhAhgrafTN = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = TrophicNiche), notch = TRUE)
GhAhgrafTN + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
#GhAhSkew for birds with different foraging niche
GhAhgrafFN = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = ForagingNiche), notch = TRUE)
GhAhgrafFN + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
#GhAhSkew for birds with different realm
GhAhgrafR = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = Realm), notch = TRUE)
GhAhgrafR + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
library('ggplot2')
GhAhgraf = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
GhAhgraf + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
View(brds_clsup)
GhAhgraf = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
GhAhgraf
GhAhgraf + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]"))
GhAhgraf + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#GhAhSkew for birds with different trophic niche
GhAhgrafTN = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = TrophicNiche), notch = TRUE)
GhAhgrafTN + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#GhAhSkew for birds with different foraging niche
GhAhgrafFN = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = ForagingNiche), notch = TRUE)
GhAhgrafFN + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#GhAhSkew for birds with different realm
GhAhgrafR = ggplot(data = brds_clsup, aes(x = Gene.name, y = GhAhSkew))+
geom_boxplot(aes(fill = Realm), notch = TRUE)
GhAhgrafR + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#Stg-Sac
brds_clsup$frneuA = brds_clsup$neutralA/brds_clsup$Neutral.count
brds_clsup$frneuG = brds_clsup$neutralG/brds_clsup$Neutral.count
brds_clsup$frneuC = brds_clsup$neutralC/brds_clsup$Neutral.count
brds_clsup$frneuT = brds_clsup$neutralT/brds_clsup$Neutral.count
brds_clsup$Stg = ((brds_clsup$frneuA + brds_clsup$frneuC)-(brds_clsup$frneuG+brds_clsup$frneuT))
library('ggplot2')
Stlgraph = ggplot(dfta = brds_clsup, aes(x = Gene.name, y = Stg))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
Stlgraph = ggplot(data = brds_clsup, aes(x = Gene.name, y = Stg))+
geom_boxplot(aes(fill = TrophicLevel), notch = TRUE)
Stlgraph
Stlgraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#trophicniche
Stngraph = ggplot(data = brds_clsup, aes(x = Gene.name, y = Stg))+
geom_boxplot(aes(fill = TrophicNiche), notch = TRUE)
Stngraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#foragingniche
Sfngraph = ggplot(data = brds_clsup, aes(x = Gene.name, y = Stg))+
geom_boxplot(aes(fill = ForagingNiche), notch = TRUE)
Sfngraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#realm
Srgraph = ggplot(data = brds_clsup, aes(x = Gene.name, y = Stg))+
geom_boxplot(aes(fill = Realm), notch = TRUE)
Srgraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot()
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y')
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y', dotsize = 0.1)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y', binwidth = 0.1)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y', binwidth = 1)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y', binwidth = 0.001)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001)
#lines
brds_clsup$neutralF = brds_clsup$Neutral.count/brds_clsup$mtDNA.length
ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralF))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001)
Stlgraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Stngraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Sfngraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Srgraph + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
library('ggplot2')
ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralF))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001)
ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralF))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001, fill = (TrophicLevel))
ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralF))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001, fill = TrophicLevel)
ggplot(data = brds_clsup, aes(x = Gene.name, y = neutralF))+
geom_dotplot(binaxis = 'y', binwidth = 0.0001, aes(fill = TrophicLevel))
ggplot(data = brds_clsup)+
geom_point(mapping = aes(x = Gene.name, y = neutralF))
ggplot(data = brds_clsup)+
geom_point(mapping = aes(x = Gene.name, y = neutralF))
View(brds_clsup)
library('ggplot2')
#lines
ggplot(data = brds_clsup, x = Gene.name, y = frneuA)+
geom_point()
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_point()
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_point(fill = TrophicLevel)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_point(fill = brds_clsup$TrophicLevel)
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_point(aes(fill = brds_clsup$TrophicLevel))
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_point(aes(fill = TrophicLevel))
#lines
ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_boxplot(aes(fill = TrophicLevel))
#lines
A = ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_boxplot(aes(fill = TrophicLevel))
A = A + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
A
#lines
Atl = ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuA))+
geom_boxplot()
Atl = Atl + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Gtl = ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuG))+
geom_boxplot()
Gtl = Gtl + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Ctl = ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuC))+
geom_boxplot()
Ctl = Ctl + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
Ttl = ggplot(data = brds_clsup, aes(x = Gene.name, y = frneuT))+
geom_boxplot()
Ttl = Ttl + xlim(c("[COX1]","[COX2]","[ATP8]","[ATP6]","[COX3]", "[ND3]", "[ND4L]","[ND4]","[ND5]","[CYTB]","[ND6]","[ND1]","[ND2]"))
ggarrange(Atl, Gtl, Ctl, Ttl ,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
install.packages('ggpubr')
ggarrange(Atl, Gtl, Ctl, Ttl,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
library('ggpubr')
ggarrange(Atl, Gtl, Ctl, Ttl,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
View(brds_clsup)
View(brds_clsup)
brds_clsup$temp = 1
View(brds)
df2 = aggregate(brds_clsup$temp,by = list(brds_clsup$Species.name), FUN = sum)
View(df2)
brds_clsup$Species.name = 'Paradoxornis heudei'
sup = read.table("../../Body/3Results/Birds supplementary materials - DatabaseS1.csv", header = TRUE, sep = ',') #supplements materials
gold = read.table("../../Body/3Results/Golden birds dataset.csv", header = TRUE, sep = ',') #reading golden dataset
clsup = data.frame(sup$Binomial, sup$Realm, sup$TrophicLevel, sup$TrophicNiche, sup$ForagingNiche) #get rid of PC
names(clsup) = c('Species.name','Realm', 'TrophicLevel', 'TrophicNiche', 'ForagingNiche')
clsup$Species.name = gsub("_", " ", clsup$Species.name)
names(brds) = c('Species.name')
brds_clsup = merge(clsup, gold) #merge golden dataset and supplements materials
View(brds_clsup)
brds_clsup[brds_clsup$Species.name == 'Paradoxornis heudei',]
df3 = brds_clsup[brds_clsup$Species.name == 'Paradoxornis heudei',]
View(df3)
View(df2)
df3 = brds_clsup[brds_clsup$Species.name == 'Sarothrura ayresi',]
View(df3)
View(sup)
View(brds_clsup)
write.csv(brds_clsup, "birds_list.csv")
df
View(df)
View(brds_clsup)
rm(list = ls(all.names = TRUE))
gc()
library('ggplot2')
library('ggpubr')
sup = read.table("../../Body/3Results/Birds supplementary materials - DatabaseS1.csv", header = TRUE, sep = ',') #supplements materials
gold = read.table("../../Body/3Results/Golden birds dataset.csv", header = TRUE, sep = ',') #reading golden dataset
clsup = data.frame(sup$Binomial, sup$Realm, sup$TrophicLevel, sup$TrophicNiche, sup$ForagingNiche) #get rid of PC
names(clsup) = c('Species.name','Realm', 'TrophicLevel', 'TrophicNiche', 'ForagingNiche')
clsup$Species.name = gsub("_", " ", clsup$Species.name)
gold = read.table("../../Body/3Results/birds_list.csv", header = TRUE, sep = ',') #reading golden dataset
View(gold)
clsup$Species.name = gsub("_", " ", clsup$Species.name)
brds_clsup = merge(clsup, gold) #merge golden dataset and supplements materials
brds_clsup$temp = 1
df2 = aggregate(brds_clsup$temp,by = list(brds_clsup$Species.name), FUN = sum)
View(df2)
df3 = brds_clsup[brds_clsup$Species.name == 'Sarothrura ayresi',]
View(df3)
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Sarothrura ayresi)',]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Sarothrura ayresi'),]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Psittacus erithacus'),]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Prioniturus luconensis'),]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Podiceps cristatus'),]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Pluvialis fulva'),]
brds_clsup = brds_clsup[!(brds_clsup$Species.name == 'Paradoxornis heudei'),]
write.csv(brds_clsup, "final_birds_list_with_no_mistakes.csv")
tree = read.csv("Tree-skeleton.csv")
tree = read.csv("../../Body/3Results/Tree-skeleton.csv")
View(tree)
View(brds_clsup)
View(brds_clsup)
tree = read.csv("../../Body/3Results/skeleton.csv")
View(tree)
names(tree) = c('Species.name')
View(tree)
tree$Species.name = gsub("_", " ", tree$Species.name)
brd_tree = merge(brds_clsup, tree)
View(brd_tree)
View(brds_clsup)
View(brds_clsup)
View(brds_clsup)
#birds realm
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('For_Bogdan.csv')
df = read.csv('../Body/3Results/For_Bogdan.csv')
df = read.csv('./Body/3Results/For_Bogdan.csv')
df = read.csv('../../Body/3Results/For_Bogdan.csv')
df = df[df$gene_name != 'ND6',]
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)]
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a', 'realm')
View(final)
write.csv(final, 'birds_med_and_realm.csv')
library(dplyr)
library(ggplot2)
ggplot(final, aes(x = realm, y = med_c)) +
geom_violin()
ggplot(final, aes(x = realm, y = med_a)) +
geom_violin()
violin_c = ggplot(final, aes(x = realm, y = med_c)) +
geom_violin()
violin_a = ggplot(final, aes(x = realm, y = med_a)) +
geom_violin()
View(violin_a)
violin_a
box_c = ggplot(final, aes(x = realm, y = med_c)) +
geom_boxplot()
vox_c
box_c
box_a = ggplot(final, aes(x = realm, y = med_a)) +
geom_boxplot()
box_a
#experiment
final_test = data.frame()
#experiment
final_test = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(AAG, AGG, ATG, ACG, GAG, GGG, GTG, GCG,
TAG, TGG, TTG, TCG, CAG, CGG, CTG, CCG)
vec_of_a = sp_r %>% select(AAT, AGT, ACT, GAT, GGT, GTT, GCT,
TAT, TGT, TTT, CAT, CGT, CTT, CCT)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final_test = rbind(final,sp_out)
}
View(df_try)
violin_c
violin_a
box_c
box_a
#changing data and PGLS analysis
#1 - arctic 0 -
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
names(df$realm)
df$realm
df_aa = df[df$realm = c('antarctic', 'afrotropic')]
df_aa = df[df$realm = c('antarctic', 'afrotropic'),]
df_aa = df[df$realm == c('antarctic', 'afrotropic'),]
View(df_aa)
df_aa = df[df$realm == c('Antarctic', 'Afrotropic'),]
View(df_aa)
487/13
df_aa = df[df$realm == 'Antarctic']
df_aa = df[df$realm == 'Antarctic',]
View(df_aa)
104/13
df_af = df[df$realm == 'Afrotropic',]
858/13
df_all = df_aa + df_af
df_all = rbind(df_aa, df_af)
print(i)
for (i in nrow(df_all))
{
print(i)
}
for (i in 1:nrow(df_all))
{
print(i)
}
View(df_all)
df_all$realm_num = 0
print(df$species_name[i],)
for (i in 1:nrow(df_all))
{
print(df$species_name[i],)
}
rownames(df_all) = 1:nrow(df_all)
for (i in 1:nrow(df_all))
{
print(df$species_name[i],)
}
#changing data and PGLS analysis
#1 - antarctic 0 - afrotropic
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df_aa = df[df$realm == 'Antarctic',]
df_af = df[df$realm == 'Afrotropic',]
df_all = rbind(df_aa, df_af)
df_all$realm_num = 0
rownames(df_all) = 1:nrow(df_all)
for (i in 1:nrow(df_all))
{
if (df_all[df_all$realm == 'Antarctic',]){
df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df_all$realm == 'Antarctic'){
print(i)
#df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df_all$realm == 'Antarctic',){
print(i)
#df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df_all$realm == 'Antarctic',)
{
print(i)
#df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df[df_all$realm == 'Antarctic',])
{
print(i)
#df_all[df_all$realm_num == 1,]
}
}
if (df_all'[df_all$realm == 'Antarctic',])
{
print(i)
#df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df_all[df_all$realm == 'Antarctic',])
{
print(i)
#df_all[df_all$realm_num == 1,]
}
}
for (i in 1:nrow(df_all))
{
if (df_all[i][df_all$realm == 'Antarctic',])
{
print(i)
#df_all[df_all$realm_num == 1,]
}
}
df_all[1]
df_all[2]
df_all[1,]
df_all[1,][df$realm]
df_all[1,][df$realm,]
df_all[1,][df$realm = 'Antarctic',]
df_all[1,][df$realm == 'Antarctic',]
df_all[1,][df_all$realm == 'Antarctic',]
df_all[df_all$realm == 'Antarctic',]
for (i in 1:nrow(df_all))
{
if (df_all[df_all$realm == 'Antarctic',])
{
df[df_all$realm_num == 1,]
}
}
df_aa$realm_num = 1
df_af = df[df$realm == 'Afrotropic',]
df_af$realm_num = 0
df_all = rbind(df_aa, df_af)
rownames(df_all) = 1:nrow(df_all)
View(df_all)
library(ape)
library(geiger)
library(nlme)
library(phytools)
df_tree = read.tree('../../Body/3Results/phylo.treefile')
plot(df_tree)
name.check(df_all_df_tree)
name.check(df_all,df_tree)
pglsModel <- gls(Antarctic ~ neutral_c, correlation = corBrownian(phy = df_tree),
data = df_all, method = "ML")
pglsModel <- gls(realm_num ~ neutral_c, correlation = corBrownian(phy = df_tree),
data = df_all, method = "ML")
summary(pglsModel)
#trying smth else
df_na = df[df$realm != 'Antarctic',]
9958-9854
df_final = rbind(df_na, df_aa)
df_na$realm_num = 0
df_final = rbind(df_na, df_aa)
pglsModel <- gls(realm_num ~ neutral_c, correlation = corBrownian(phy = df_tree),
data = df_final, method = "ML")
