xlab('Частота Аденина')
g1
#course work grafs
g1 = ggplot(data = brds_clsup, aes(x = gene_name, y = A_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Аденина')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1
#course work grafs
extradf = brds_clsup
extradf$nA_fraction = extradf$neutral_A/extradf$neutral_amount
View(extradf)
g1 = ggplot(data = extradf, aes(x = gene_name, y = nA_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Аденина')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1
extradf$nG_fraction = extradf$neutral_g/extradf$neutral_amount
extradf$nC_fraction = extradf$neutral_c/extradf$neutral_amount
extradf$nT_fraction = extradf$neutral_T/extradf$neutral_amount
g2 = ggplot(data = extradf, aes(x = gene_name, y = nG_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Гуанина')
g2 = g2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2
g3 = ggplot(data = extradf, aes(x = gene_name, y = nC_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Цитозина')
g3 = g3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2
g3
g4 = ggplot(data = extradf, aes(x = gene_name, y = nT_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Тимина')
g4 = g4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g4
g5 = ggarrange(g1, g2, g3, g4,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
g5
п1
g1
g2
g3
g4
ecology = read.csv("../../Head/1Raw/Avonet_data")
ecology = read.csv("../../Body/1Raw/Avonet_data")
ecology = read.csv("../../Body/1Raw/Avonet_data.csv")
View(ecology)
ecology = ecology[c(1,28,29,30)]
ecology = read.csv("../../Body/1Raw/Avonet_data.csv")
ecology = ecology[c(1,28,29,30)]
ecology = sup = read.table("../../Body/3Results/Birds supplementary materials - DatabaseS1.csv", header = TRUE, sep = ',')
ecology = ecology[c(1,15,16)]
names(ecology) = c('species_name', 'Экозона', "Трофический уровень" )
extradf = merge(extradf, ecology, by = 'species_name')
names(ecology) = c('species_name', 'Realm', "Trophic level" )
#course work grafs
extradf = brds_clsup
extradf$nA_fraction = extradf$neutral_A/extradf$neutral_amount
extradf$nG_fraction = extradf$neutral_g/extradf$neutral_amount
extradf$nC_fraction = extradf$neutral_c/extradf$neutral_amount
extradf$nT_fraction = extradf$neutral_T/extradf$neutral_amount
g1 = ggplot(data = extradf, aes(x = gene_name, y = nA_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Аденина')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1
g2 = ggplot(data = extradf, aes(x = gene_name, y = nG_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Гуанина')
g2 = g2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2
g3 = ggplot(data = extradf, aes(x = gene_name, y = nC_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Цитозина')
g3 = g3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g3
g4 = ggplot(data = extradf, aes(x = gene_name, y = nT_fraction))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Тимина')
g4 = g4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g4
g5 = ggarrange(g1, g2, g3, g4,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
g5
ecology = sup = read.table("../../Body/3Results/Birds supplementary materials - DatabaseS1.csv", header = TRUE, sep = ',')
ecology = ecology[c(1,15,16)]
names(ecology) = c('species_name', 'Realm', "Trophic level" )
extradf = merge(extradf, ecology, by = 'species_name')
#course work grafs
extradf = brds_clsup
extradf$nA_fraction = extradf$neutral_A/extradf$neutral_amount
extradf$nG_fraction = extradf$neutral_g/extradf$neutral_amount
extradf$nC_fraction = extradf$neutral_c/extradf$neutral_amount
extradf$nT_fraction = extradf$neutral_T/extradf$neutral_amount
extradf1 = merge(extradf, ecology, by = 'species_name')
View(extradf1)
extradf$species_name = gsub('_','', extradf$species_name)
extradf$species_name = gsub(' ','_', extradf$species_name)
extradf = merge(extradf, ecology, by = 'species_name')
rm(extradf1)
extradf$GhAhSkew = (extradf$neutral_c - extradf$neutral_T)/(extradf$neutral_c + extradf$neutral_T)
extradf$Stg_ac = (extradf$A_fraction + extradf$C_fraction) - (extradf$T_fraction + extradf$G_fraction)
g6 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = 'Экозона'))
g6
g6 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = Экозона))
g6
#course work grafs
extradf = brds_clsup
extradf$nA_fraction = extradf$neutral_A/extradf$neutral_amount
extradf$nG_fraction = extradf$neutral_g/extradf$neutral_amount
extradf$nC_fraction = extradf$neutral_c/extradf$neutral_amount
extradf$nT_fraction = extradf$neutral_T/extradf$neutral_amount
ecology = sup = read.table("../../Body/3Results/Birds supplementary materials - DatabaseS1.csv", header = TRUE, sep = ',')
ecology = ecology[c(1,15,16)]
names(ecology) = c('species_name', 'Realm', "Trophic_level" )
extradf$species_name = gsub(' ','_', extradf$species_name)
extradf = merge(extradf, ecology, by = 'species_name')
extradf$GhAhSkew = (extradf$neutral_c - extradf$neutral_T)/(extradf$neutral_c + extradf$neutral_T)
extradf$Stg_ac = (extradf$A_fraction + extradf$C_fraction) - (extradf$T_fraction + extradf$G_fraction)
g6 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = Realm))
g6
g6 = g6 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g6
g6 = g6 + labs(colour = 'Экозона')
g6
g6 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = Realm))+
xlab('Митохондриальные гены')+
ylab('Скос аденина и гуанина')
g6 = g6 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g6 = g6 + labs(colour = 'Экозона')
g6
g6 = g6 + labs(colour = 'Zone')
g6
g6 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = Realm))+
xlab('Митохондриальные гены')+
ylab('Скос аденина и гуанина')
g6 = g6 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g6
g7 = ggplot(data = extradf, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Митохондриальные гены')+
ylab('Скос аденина и гуанина')
g7 = g7 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g7
g8 = ggplot(data = extradf, aes(x = gene_name, y = Stg_ac))+
geom_boxplot(aes(fill = Realm))+
xlab('Митохондриальные гены')+
ylab('Stg - Sac')
g8 = g8 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g8
extradf$Stg_ac = (extradf$nA_fraction + extradf$nC_fraction) - (extradf$nT_fraction + extradf$nG_fraction)
g8 = ggplot(data = extradf, aes(x = gene_name, y = Stg_ac))+
geom_boxplot(aes(fill = Realm))+
xlab('Митохондриальные гены')+
ylab('Stg - Sac')
g8 = g8 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g8
g9 = ggplot(data = extradf, aes(x = gene_name, y = Stg_ac))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Митохондриальные гены')+
ylab('Stg - Sac')
g9 = g9 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g9
#final math
rm(list = ls(all.names = TRUE))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv')
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
View(df_try)
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
View(final)
names(final) = c('species_name', 'med_c', 'med_a', 'realm')
#course work
g1 = ggplot(data = final, aes(x = realm, y = med_a))+
geom_violin()
g1
#course work
g1 = ggplot(data = final, aes(x = realm, y = med_a))+
geom_violin()+
xlab("Экозона")+
ylab('Медиана Аденина')
g1
g2 = ggplot(data = final, aes(x = realm, y = med_с))+
geom_violin()+
xlab("Экозона")+
ylab('Медиана Цитозина')
g2
g2 = ggplot(data = final, aes(x = realm, y = med_c))+
geom_violin()+
xlab("Экозона")+
ylab('Медиана Цитозина')
g2
g3 = ggplot(data = final, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab("Экозона")+
ylab('Медиана Аденина')
g3
g4 = ggplot(data = final, aes(x = realm, y = med_c))+
geom_violin()+
xlab("Экозона")+
ylab('Медиана Цитозина')
g4
g4 = ggplot(data = final, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab("Экозона")+
ylab('Медиана Цитозина')
g4
View(codon_norm)
View(df_eco)
View(df_codons_realm)
View(df_sgc)
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm, trophic_niche, trophic_level, all_of(vec_all))
View(df_codons_realm)
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
View(final)
View(sp_r)
View(df_codons_realm)
View(codon_norm)
View(df_codons_realm)
df_eco = df_codons_realm[,c(1,3,4,5)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm, sp_r$trophic_level, sp_r$trophic_niche)
final = rbind(final,sp_out)
}
View(final)
names(final) = c('species_name', 'med_c', 'med_a', 'realm', 'trophic_level', 'trophic_niche')
g5 = ggplot(data = final, aes(x = trophic_level, y = med_a))+
geom_violin()+
xlab("Трофический уровень")+
ylab('Медиана Аденина')
g5
g5 = ggplot(data = final, aes(x = trophic_level, y = med_a))+
geom_violin()+
xlab("Трофический уровень")+
ylab('Медиана Аденина')
g5
g5 = ggplot(data = final, aes(x = trophic_level, y = med_a))+
geom_violin()+
xlab("Трофический уровень")+
ylab('Медиана Аденина')
library(dplyr)
library(ggplot2)
g5 = ggplot(data = final, aes(x = trophic_level, y = med_a))+
geom_violin()+
xlab("Трофический уровень")+
ylab('Медиана Аденина')
g5
#work here
g6 = ggplot(data = final, aes(x = trophic_level, y = med_c))+
geom_violin()+
xlab("Экозона")+
ylab('Медиана Цитозина')
g6
#work here
g6 = ggplot(data = final, aes(x = trophic_level, y = med_c))+
geom_violin()+
xlab("Трофический уровень")+
ylab('Медиана Цитозина')
g6
g7 = ggplot(data = final, aes(x = trophic_level, y = med_a))+
geom_boxplot()+
xlab("Трофический уровень")+
ylab('Медиана Аденина')
g7
g8 = ggplot(data = final, aes(x = trophic_level, y = med_c))+
geom_boxplot()+
xlab("Трофический уровень")+
ylab('Медиана Цитозина')
g8
rm(list=ls(all=T))
rm(list=ls(all=T))
#Dima's analysis
install.packages('devtools')
library(devtools)
library(ggbiplot)
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try)){
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('Species', 'med_c', 'med_a', 'realm')
View(final)
final = final[,c(1,2,3)]
#Genetics
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
GhAh = df[,c(1,8,29,30,31,32,33)]
GhAh$frA = GhAh$neutral_A/GhAh$neutral_amount
GhAh$frG = GhAh$neutral_g/GhAh$neutral_amount
GhAh$frC = GhAh$neutral_c/GhAh$neutral_amount
GhAh$frT = GhAh$neutral_T/GhAh$neutral_amount
GhAh$Skew = (GhAh$neutral_c-GhAh$neutral_T)/(GhAh$neutral_c+GhAh$neutral_T)
GhAh$Stg_Sac = (GhAh$frA+GhAh$frC)-(GhAh$frT+GhAh$frG)
GhAh = GhAh[GhAh$gene_name != 'ND6',]
gene_vector = c('frA', 'frG', 'frC', 'frT', 'Skew', 'Stg_Sac')
gene_stats = data.frame(unique(GhAh$species_name))
for ( char in gene_vector){
stats1 = aggregate(GhAh[,char], by = list(GhAh$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('Species', gene_vector)
final_stats = merge(final, gene_stats, by = 'Species')
View(final_stats)
#PCA analysis + biplot
install.packages('devtools')
rownames(final_stats) = final_stats$Species
final_stats = final_stats[,c(2:9)]
final_stats.pca = prcomp(final_stats, center = TRUE, scale. = TRUE)
summary(final_stats.pca)
str(final_stats.pca)
ggbiplot(final_stats.pca)
