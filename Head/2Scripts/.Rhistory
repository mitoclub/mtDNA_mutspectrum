'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
View(df_sgc)
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
#final math
rm(list = ls(all.names = TRUE))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv')
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a', 'realm')
df_antarctic = final[final$realm == 'Antarctic',]
df_afrotropic = final[final$realm == 'Afrotropic',]
#Alya's PGLS
library(ape)
library(geiger)
library(caper)
df = read.csv('../../Body/3Results/For_Bogdan.csv')
tree <- read.tree('../../Body/1Raw/phylo.treelife')
tree <- read.tree('../../Body/3Results/phylo.treelife')
tree <- read.tree('../../Body/3Results/phylo.treefile')
View(df)
#changing data and PGLS analysis
#1 - antarctic 0 - afrotropic
rm(list=ls(all=T))
ibrary(dplyr)
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a', 'realm')
View(final)
df_antarctic = final[final$realm = 'Antarctic',]
df_antarctic = final[final$realm == 'Antarctic',]
View(df_antarctic)
df_every = final[final$realm != 'Antarctic', ]
df_antarctic$point = 1
df_every$point = 1
df_every$point = 0
View(df_every)
df_all = rbind(df_antarctic, df_all)
df_all = data.frame()
df_all = rbind(df_antarctic, df_all)
df_all = rbind(df_antarctic, every)
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
View(df_all)
#PGLS
library(ape)
read.tree('../../Body/3Results/phylo.treefile')
tree = read.tree('../../Body/3Results/phylo.treefile')
library(nlme)
mat = vcv(tree, corr = TRUE)
View(mat)
fit = gls(med_c ~ point, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), data = df_every)
fit = gls(med_c ~ point, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), weights = varFixed(~tip.heights), data = df_every)
tip.heights <- diag(mat)
fit = gls(med_c ~ point, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), weights = varFixed(~tip.heights), data = df_every)
fit = gls(point ~ med_c, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), weights = varFixed(~tip.heights), data = df_every)
fitPagel0 <- gls(point ~ med_c, correlation = corPagel(value = 0, phy = tree, fixed = TRUE), data = df_all)
tree
names(tree)
l = df(tree)
l = data.frame(tree)
fit = gls(med_a ~ med_c, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), weights = varFixed(~tip.heights), data = df_every)
tree = read.tree('../../Body/3Results/phylo.treefile')
mat = vcv(tree, corr = TRUE)
tip.heights <- diag(mat)
fit = gls(med_a ~ med_c, correlation = corSymm(mat[lower.tri(mat)], fixed = TRUE), weights = varFixed(~tip.heights), data = df_every)
fitPagel0 <- gls(med_a ~ med_c, correlation = corPagel(value = 0, phy = tree, fixed = TRUE), data = df_all)
#changing data and PGLS analysis
#1 - antarctic 0 - afrotropic
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all)
{
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen))
{
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2))
{
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try))
{
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a', 'realm')
df_antarctic = final[final$realm == 'Antarctic',]
df_every = final[final$realm != 'Antarctic', ]
df_antarctic$point = 1
df_every$point = 0
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
#Alya's script
library(ape)
library(geiger)
library(caper)
tree <- read.tree("../../Body/3Results/phylo.treefile")
tree_w = treedata(tree, df_all, sort = T, warnings = T)
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
View(tree_w)
View(df)
data = as.data.frame(treedata(tree_w, df_all, sort = T, warnings = T)$data)
View(data)
View(tree)
tree[["tip.label"]]
View(df_all)
df_all$species_name = gsub('','_', df_all$species_name)
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
df_all$species_name = gsub(' ','_', df_all$species_name)
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_all, sort = T, warnings = T)$data)
tree_w = treedata(tree, df_all, sort = T, warnings = F)$phy
data = as.data.frame(treedata(tree_w, df_all, sort = T, warnings = F)$data)
View(tree_w)
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
View(tree_w)
tree_w[["edge"]]
typeof(df_all$species_name)
View(tree)
df_ex = df_all[df$species_name == 'Lonchura_grandis',]
View(df_ex)
df_ex = df_all[df$species_name == 'Australian',]
df_ex = df_all[df$realm == 'Australian',]
df_ex = df_all[df$species_name == 'Lonchura_grandis',]
df_all$species_name = as.character(df_all$species_name)
df_ex = df_all[df$species_name == 'Lonchura_grandis',]
df_ex = df_all[df_all$species_name == 'Lonchura_grandis',]
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_all, sort = T, warnings = F)$data)
tree_w = treedata(tree, df_ex, sort = T, warnings = T)$phy
View(df_ex)
data = as.data.frame(treedata(tree_w, df_ex, sort = T, warnings = F)$data)
df_ex = df_all[df_all$species_name == 'Lonchura_grandis',]
tree_w = treedata(tree, df_ex, sort = T, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_ex, sort = T, warnings = F)$data)
df_ex = df_all[df_all$species_name == 'Lonchura_grandis',]
tree_w = treedata(tree, df_ex, sort = F, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_ex, sort = F, warnings = F)$data)
View(data)
rm(df_ex)
c1 = c(df_all$species_name)
View(tree)
c2 = c(tree[["tip.label"]])
c1 == c2
c2 %in% c1
intersect(c1,c2)
tree_w = treedata(tree, df_all, sort = F, warnings = T)$phy
df_noi = df_all(,c(1,2,3,4,5))
df_noi = df_all[,c(1,2,3,4,5)]
View(df_noi)
rm(df_noi)
row.names(df_all) = NULL
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
tree <- read.tree("../../Body/3Results/phylo.treefile")
df_all$species_name = gsub(' ','_', df_all$species_name)
df_all$species_name = as.character(df_all$species_name)
row.names(df_all) = NULL
tree_w = treedata(tree, df_all, sort = F, warnings = T)$phy
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_all, sort = F, warnings = F)$data)
View(tree_w)
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
#Alya's script
library(ape)
library(geiger)
library(caper)
tree <- read.tree("../../Body/3Results/phylo.treefile")
df_all$species_name = gsub(' ','_', df_all$species_name)
df_all$species_name = as.character(df_all$species_name)
row.names(df_all) = NULL
tree_w = treedata(tree, df_all, sort = T, warnings = T)$phy
df_all$species_name
df_animal = as.data.frame(df_all$species_name)
View(df_animal)
tree_w = treedata(tree, df_animal, sort = T, warnings = T)$phy
data = as.data.frame(treedata(tree_w, df_animal, sort = T, warnings = T)$data)
View(data)
rm(df_animal)
df_all$species_name %in% tree$tip.label
tree
#Alya's script
library(ape)
library(geiger)
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try)){
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('Species', 'med_c', 'med_a', 'realm')
df_antarctic = final[final$realm == 'Antarctic',]
df_every = final[final$realm != 'Antarctic', ]
df_antarctic$point = 1
df_every$point = 0
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
df_all$Species = gsub(' ','_', df_all$Species)
df_all$Species = as.character(df_all$Species)
#Alya's script
library(ape)
library(geiger)
library(caper)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
row.names(df_all) = df_all$Species
View(df_all)
tree_w = treedata(tree, df_all, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_w, df_all, sort=T, warnings=T)$data)
data$med_c = as.numeric(as.character(data$med_c))
data$med_a = as.numeric(as.character(data$med_a))
data$point= as.numeric(as.character(data$point))
data$realm= as.character(data$realm)
table(data$point)
MutComp = comparative.data(tree_w, data, Species, vcv=TRUE)
model = pgls(point ~ med_a + med_c, MutComp, lambda="ML")
summary(model)
View(tree_w)
#new birds data
avonet = read.csv("../../Body/1Raw/AVONET Supplementary dataset 1.xlsx")
#new birds data
avonet = read.csv("../../Body/1Raw/AVONET Supplementary dataset 1.xlsx", sep = ",")
View(avonet)
#new birds data
avonet = read.csv("../../Body/1Raw/Avonet_data.xlsx", sep = ",")
View(avonet)
#new birds data
avonet = read.csv("../../Body/1Raw/Avonet_data_ready.csv", sep = ",")
#new birds data
avonet = read.csv("../../Body/1Raw/Avonet_data_ready.csv", header = header, sep = ",")
#new birds data
avonet = read.csv("../../Body/1Raw/Avonet_data_ready.csv", header = TRUE, sep = ",")
#new birds data
avonet = read.csv2("../../Body/1Raw/Avonet_data_ready.csv", header = TRUE, sep = ",")
#new birds data
avonet = read.csv2("../../Body/1Raw/Avonet_data.csv", header = TRUE, sep = ",")
View(avonet)
View(df_all)
names(avonet) = c('Species', 'Family', 'Order', 'Total_individuals', 'Female', 'Male', 'Unknown', 'Complete_measures',
'Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Secondary1', 'Hand_wing_index', 'Tail_length', 'Mass', 'Mass_source', 'Mass_refs_other',
'Inference', 'Treits_inferred', 'Reference_species', 'Habitat', 'Habitat_density', 'Migration', 'Trophic_level,
Trophic_niche', 'Primary_lifestyle', 'Min_latitude', 'Max_latitude', 'Centroid_latitude', 'Centroid_longitude',
'Range_size', 'Species_status')
names(avonet) = c('Species', 'Family', 'Order', 'Total_individuals', 'Female', 'Male', 'Unknown', 'Complete_measures',
'Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Secondary1', 'Hand_wing_index', 'Tail_length', 'Mass', 'Mass_source', 'Mass_refs_other',
'Inference', 'Treits_inferred', 'Reference_species', 'Habitat', 'Habitat_density', 'Migration', 'Trophic_level',
'Trophic_niche', 'Primary_lifestyle', 'Min_latitude', 'Max_latitude', 'Centroid_latitude', 'Centroid_longitude',
'Range_size', 'Species_status')
df_all = merge(df_all, avonet, by = 'Species')
View(df_all)
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
df_all$Species = gsub(' ','_', df_all$Species)
df_all$Species = as.character(df_all$Species)
typeof(avonet$Species)
df_all1 = merge(df_all, avonet, by = 'Species')
View(df_all1)
View(avonet)
avonet$Species = gsub(' ','_', avonet$Species)
df_all1 = merge(df_all, avonet, by = 'Species')
View(df_all1)
row.names(df_all1) = df_all1$Species
tree_w1 = treedata(tree, df_all1, sort=T, warnings=T)$phy
data1<-as.data.frame(treedata(tree_w1, df_all1, sort=T, warnings=T)$data)
View(data1)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
row.names(df_all) = df_all$Species
tree_w = treedata(tree, df_all, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_w, df_all, sort=T, warnings=T)$data)
data1$Beak_width = as.numeric(as.character(data1$Beak_width))
