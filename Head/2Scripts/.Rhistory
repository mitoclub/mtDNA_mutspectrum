scatter3D(x, y, z, theta = 15, phi = 20)
scatter3D(x, y, z, col = x, theta = 15, phi = 20)
scatter3D(x, y, z, col = y, theta = 15, phi = 20)
scatter3D(x, y, z, colvar = y, theta = 15, phi = 20)
stats_pca_big = prcomp(b_3d[c(2:20)], center = TRUE, scale. = TRUE)
summary(stats_pca_big)
b_3d_bipl = ggbiplot(stats_pca_big)
b_3d_bipl
b_3d_bipl = ggbiplot(stats_pca_big, groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl
ggplotly(b_3d_bipl)
View(gene_stats)
stats_pca_big = prcomp(b_3d[c(2:11)], center = TRUE, scale. = TRUE)
summary(stats_pca_big)
b_3d_bipl = ggbiplot(stats_pca_big(), groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl = ggbiplot(stats_pca_big, groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl
ggplotly(b_3d_bipl)
b_3d_bipl2 = ggbiplot(stats_pca_big, groups = b_3d$realm, labels = b_3d$species_name, labels.size = 2)
ggplotly(b_3d_bipl2)
#checking packages
library(ape)
library(geiger)
library(caper)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Alya's dataset
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
View(SynNuc)
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
names(SynNuc)
View(SynNuc)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
new_mam = SynNuc[c('Species', 'Gene', 'shahSkew')]
new_mam = SynNuc[c('Species', 'Gene', 'shahSkew'),]
View(new_mam)
new_mam = SynNuc[,c('Species', 'Gene', 'shahSkew')]
new_mam = SynNuc[, c('Species', 'Gene', 'shahSkew')]
View(new_mam)
new_mam = SynNuc[, c(1, 2, 79)]
new_mam = new_mam[new_mam$Gene != 'ND6']
new_mam = new_mam[new_mam$Gene != 'ND6',]
View(df_mtdna)
new_bird = df_mtdna[, c('species_name', 'ghahSkew')]
View(new_bird)
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4)]
View(new_mam)
new_bird$class = 'Aves'
View(new_mam)
View(new_bird)
View(SynNuc)
SynNuc$thchSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
View(new_mam)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
View(SynNuc)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_mam$Species = gsub('', '_', new_mam$Species)
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_mam$Species = gsub(' ', '_', new_mam$Species)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
names(new_mam) = c('species_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
View(new_big)
library(ggplot2)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_bird = df_mtdna[, c('species_name', 'gene_name' 'ghahSkew','chthSkew')]
new_bird = df_mtdna[, c('species_name', 'gene_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
names(new_mam) = c('species_name', 'gene_name' 'ghahSkew', 'chthSkew', 'class')
names(new_mam) = c('species_name', 'gene_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m
new_b_and_m = new_b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
new_b_and_m
View(SynNuc)
new_birds$gene_name[new_bird$gene_name == 'CYTB'] = 'CytB'
new_bird$gene_name[new_bird$gene_name == 'CYTB'] = 'CytB'
names(new_mam) = c('species_name', 'gene_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m = new_b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m
new_b_and_m_one = ggplot(new_big, aes(x = gene_name, y = chthSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m_one = new_b_and_m_one + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m_one
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Work with Valya's data
valya_data = read.table('../../Head/2Scripts/bird_phenotypes.ods')
View(valya_data)
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/Valyadata.csv')
View(valya_data)
valya_data = valya_data[valya_data$species_name != ' ',]
valya_data = valya_data[valya_data$species_name != '',]
#Work with Valya's data
valya_data = na.omit(valya_data)
View(df_mtdna)
gene_data = c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
View(gene_data)
gene_data = gsub(' ', '_', gene_data$species_name)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
View(valya_data)
valya_gene = merge(gene_data, valya_data, by = 'species_name')
View(valya_gene)
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
View(gene_stats)
gene_stats$species_name = gsub(' ', '_', gene_stats$species_name)
View(valya_data)
gene_stats = merge(gene_stats, valya_data, by = 'species_name')
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
library(ggbiplot)
bipl = ggbiplot(stats_pca, groups = gene_stats$flying, labels = gene_stats$species_name, labels.size = 2)
bipl
unique(gene_stats$flying)
ggplotly(bipl)
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
library(plotly)
library(dplyr)
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/Valyadata2.csv')
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
valya_data = na.omit(valya_data)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
valya_data["species_name"][valya_data["species_name"] == "Strigops_habroptilus"] = "Strigops_habroptila"
valya_gene = merge(gene_data, valya_data, by = 'species_name')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
View(valya_data)
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = gsub(' ', '_', gene_stats$species_name)
gene_stats = merge(gene_stats, valya_data, by = 'species_name')
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
View(gene_stats)
bipl = ggbiplot(stats_pca, groups = gene_stats$far_migration, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$wintering, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$diving, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$only_forest, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
library(plotly)
library(dplyr)
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/valyadata_final.csv')
View(valya_data)
valya_data = na.omit(valya_data)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
valya_data["species_name"][valya_data["species_name"] == "Strigops_habroptilus"] = "Strigops_habroptila"
valya_gene = merge(gene_data, valya_data, by = 'species_name')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = gsub(' ', '_', gene_stats$species_name)
gene_stats = merge(gene_stats, valya_data, by = 'species_name')
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$only_forest, labels = gene_stats$species_name, labels.size = 2)
bipl
View(gene_stats)
bipl = ggbiplot(stats_pca, groups = gene_stats$only_forest, labels = gene_stats$can_not_fly, labels.size = 2)
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$can_not_fly, labels = gene_stats$species_name, labels.size = 2)
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$only_forest, labels = gene_stats$species_name, labels.size = 2)
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$can_not_fly, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$divers, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$high_alt, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$far_migrtion, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$wintering_num, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$high_alt2, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$reference2, labels = gene_stats$species_name, labels.size = 2)
bipl
ggplotly(bipl)
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
library(ggpubr)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
library(plotly)
library(dplyr)
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/valyadata_final.csv')
valya_data = na.omit(valya_data)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
valya_data["species_name"][valya_data["species_name"] == "Strigops_habroptilus"] = "Strigops_habroptila"
valya_gene = merge(gene_data, valya_data, by = 'species_name')
View(valya_gene)
#Valya's data boxplots
fly_box = ggplot(valya_gene, aes(x = flying, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('GhAhSkew')
fly_box
fly_box2 = ggplot(valya_gene, aes(x = wintering, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('GhAhSkew')
fly_box2
fly_box3 = ggplot(valya_gene, aes(x = diving, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('GhAhSkew')
fly_box3 = ggplot(valya_gene, aes(x = diving, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Diving')+
ylab('GhAhSkew')
fly_box3
fly_box4 = ggplot(valya_gene, aes(x = far_migration, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Diving')+
ylab('GhAhSkew')
fly_box4 = ggplot(valya_gene, aes(x = far_migration, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far_migration')+
ylab('GhAhSkew')
fly_box4
fly_box5 = ggplot(valya_gene, aes(x = flying, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('ChThSkew')
fly_box5
fly_box6 = ggplot(valya_gene, aes(x = wintering, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('ChThSkew')
fly_box6
fly_box7 = ggplot(valya_gene, aes(x = diving, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Diving')+
ylab('ChThSkew')
fly_box7
fly_box8 = ggplot(valya_gene, aes(x = far_migration, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far_migration')+
ylab('ChThSkew')
fly_box8
#Valya's data boxplots
fly_box1 = ggplot(valya_gene, aes(x = flying, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('GhAhSkew')
fly_box1
fly_box2 = ggplot(valya_gene, aes(x = wintering, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('GhAhSkew')
fly_box2
fly_box3 = ggplot(valya_gene, aes(x = diving, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Diving')+
ylab('GhAhSkew')
fly_box3
fly_box4 = ggplot(valya_gene, aes(x = far_migration, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far_migration')+
ylab('GhAhSkew')
fly_box4
fly_box5 = ggplot(valya_gene, aes(x = flying, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('ChThSkew')
fly_box5
fly_box6 = ggplot(valya_gene, aes(x = wintering, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('ChThSkew')
fly_box6
fly_box7 = ggplot(valya_gene, aes(x = diving, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Diving')+
ylab('ChThSkew')
fly_box7
fly_box8 = ggplot(valya_gene, aes(x = far_migration, y = chthSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far_migration')+
ylab('ChThSkew')
fly_box8
install.packages("ggbiplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
install.packages('plotly')
install.packages('dplyr')
install.packages('dplyr')
install.packages("dplyr")
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/valyadata_final.csv')
valya_data = na.omit(valya_data)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
valya_data["species_name"][valya_data["species_name"] == "Strigops_habroptilus"] = "Strigops_habroptila"
valya_gene = merge(gene_data, valya_data, by = 'species_name')
View(valya_gene)
med1 = ggplot(valya_gene, aes(x = flying, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_G')
library(ggplot2)
med1 = ggplot(valya_gene, aes(x = flying, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_G')
med1
med2 = ggplot(valya_gene, aes(x = wintering, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('med_G')
med2
med3 = ggplot(valya_gene, aes(x = divers, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Divers')+
ylab('med_G')
med3
med3 = ggplot(valya_gene, aes(x = diving, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Divers')+
ylab('med_G')
med3
med4 = ggplot(valya_gene, aes(x = far_migration, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far migration')+
ylab('med_G')
med4
med5 = ggplot(valya_gene, aes(x = flying, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_T')
med5
med6 = ggplot(valya_gene, aes(x = wintering, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('med_T')
med6
med7 = ggplot(valya_gene, aes(x = diving, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Divers')+
ylab('med_T')
med7
med8 = ggplot(valya_gene, aes(x = far_migration, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far migration')+
ylab('med_T')
med8
med7
med1 = ggplot(valya_gene, aes(x = flying, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_G')
med1
med2 = ggplot(valya_gene, aes(x = wintering, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('med_G')
med2
med3 = ggplot(valya_gene, aes(x = diving, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Divers')+
ylab('med_G')
med3
med4 = ggplot(valya_gene, aes(x = far_migration, y = med_G))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far migration')+
ylab('med_G')
med4
med5 = ggplot(valya_gene, aes(x = flying, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_T')
med5
med5 = ggplot(valya_gene, aes(x = flying, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Ability to fly')+
ylab('med_T')
med5
med6 = ggplot(valya_gene, aes(x = wintering, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Wintering')+
ylab('med_T')
med6
med7 = ggplot(valya_gene, aes(x = diving, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Divers')+
ylab('med_T')
med7
med8 = ggplot(valya_gene, aes(x = far_migration, y = med_T))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Far migration')+
ylab('med_T')
med8
