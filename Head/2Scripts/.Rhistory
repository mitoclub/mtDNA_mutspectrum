count(df_mammals, 'Species') > 12
a = (count(df_mammals, 'Species') > 12)
View(a)
a = (count(df_mammals, 'Species') >= 12)
a = (count(df_mammals, 'Species') >= 11)
a = (count(df_mammals, 'Species') == 11)
a = (count(df_mammals, 'Species') >= 12)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Dima's dat
df_all = read.table('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
unique(df_all$Class)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
library(plyr)
a = (count(df_mammals, 'Species') >= 12)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
library(dplyr)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
a = (count(df_mammals, 'Species') >= 12)
View(a)
library(plyr)
install.packages('plyr')
View(df_mammals)
df_mammals$ghahSkew = ((df_mammals$FrC - df_mammals$FrT))/((df_mammals$FrC + df_mammals$FrT))
library(ggplot2)
ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box = ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box = mam_box + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
mam_box
View(df_mtdna)
bird_only = df_mtdna[c('species_name', 'gene_name', 'ghahSkew')]
View(bird_only)
mam_only = df_mammals[c('Species', 'Gene', 'ghahSkew')]
View(mam_only)
bird_only$class = 'Aves'
names(mam_only) = c('species_name', 'gene_name', 'ghahSkew')
mam_only$class = 'Mammalia'
mam_and_birds = rbind(bird_only, mam_only)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(fill = mam_and_birds$class)
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(color = mam_and_birds$class)
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
b_and_m
mam_box
mam_box = ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box
mam_box = mam_box + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
mam_box
bird_only = bird_only[bird_only$gene_name != 'ND5']
bird_only = bird_only[bird_only$gene_name != 'ND5',]
bird_only[bird_only$gene_name == 'CYTB',]
bird_only$gene_name[bird_only$gene_name == 'CYTB',]
bird_only$gene_name == 'CYTB'
replace(bird_only$gene_name, bird_only$gene_name == 'CYTB', 'CytB')
bird_only = replace(bird_only$gene_name, bird_only$gene_name == 'CYTB', 'CytB')
bird_only = df_mtdna[c('species_name', 'gene_name', 'ghahSkew')]
bird_only$class = 'Aves'
bird_only = bird_only[bird_only$gene_name != 'ND5',]
bird_only$gene_name[bird_only$gene_name == 'CYTB'] = 'CytB'
unique(bird_only$gene_name)
mam_and_birds = rbind(bird_only, mam_only)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot()
b_and_m
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.fill =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.fill = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.size = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.colour =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.colour = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.color = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape= FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
mam_and_birds$gene_name == CytB
mam_and_birds$gene_name == 'CytB'
bird_only$ghahSkew[bird_only$gene_name == 'CytB',]
bird_only[bird_only$gene_name == 'CytB',]
bird_only[bird_only$gene_name == 'CytB',]$ghahSkew
bird_only[bird_only$gene_name == 'CytB',]
count(bird_only[bird_only$gene_name == 'CytB',])
bird_only[bird_only$gene_name == 'CytB',]$ghahSkew
df_stats = data.frame()
View(df_stats)
View(mam_only)
a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
View(a)
a
a$statistic
a$parameter
a$p.value
a$null.value
a$alternative
a$method
a$data.name
View(a)
a$p.value
typeof(a$p.value)
typeof(numeric(a$p.value))
for (i in c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
{
a = wilcox.test(bird_only[bird_only$gene_name == i,]$ghahSkew, mam_only[mam_only$gene_name == i,]$ghahSkew)
b = c(i, a$p.value)
df_stats = rbind(df_stats, b)
}
View(df_stats)
names(df_stats) = c('gene_name', 'p_value')
#a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
write.csv(df_stats, file = 'ghahSkew_Aves_against_Mammalia_p_values')
#a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
write.csv(df_stats, file = 'ghahSkew_Aves_against_Mammalia_p_values.csv')
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
#row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
View(gene_stats)
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats[gene_stats$realm == 'Antarctic',])
library(ggbiplot)
bipl = ggbiplot(stats_pca, groups = gene_stats[gene_stats$realm == 'Antarctic',])
bipl = ggbiplot(stats_pca)
bipl
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
#row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
#PCA coloring
library('ggbiplot')
install.packages("ggbiplot")
install.packages('devtools')
install_github("vqv/ggbiplot")
library(devtools)
library('devtools')
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
library(ggbiplot)
#PCA coloring
library('ggbiplot')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
View(df_realm)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl_niche = ggbiplot(stats_pca, groups = gene_stats$Trophic_niche, labels = gene_stats$species_name, labels.size = 2)
bipl_niche
bipl_niche = ggbiplot(stats_pca, groups = gene_stats$Trophic_niche, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name='Origin', values = c('black', 'black', 'black', 'red', 'black','black', 'black', 'black', 'black', 'black'))
bipl_niche
ggplotly(bipl_niche)
View(df_mtdna)
#Birds sizes
bm = df_mtdna[c(108,109,110,111,112,113,114,115,116,117)]
View(bm)
#Birds sizes
bm = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew' 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T', 108,109,110,111,112,113,114,115,116,117)]
#Birds sizes
bm = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T', 108,109,110,111,112,113,114,115,116,117)]
#Birds sizes
bm = df_mtdna[c(108,109,110,111,112,113,114,115,116,117)]
bg = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T')]
View(bg)
#Birds sizes
bm = df_mtdna[c(2,108,109,110,111,112,113,114,115,116,117)]
bg = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T')]
bg = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T', 'realm')]
#Birds sizes + 3D
install.packages("plot3D")
library("plot3D")
bm = df_mtdna[c(2,108,109,110,111,112,113,114,115,116,117)]
bg = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T', 'realm', 'Trophic_niche')]
b_3d = merge(bm, bg, by = species_name)
b_3d = merge(bm, bg, by = "species_name")
View(b_3d)
View(bm)
View(bg)
b_3d = cbind(bm, bg)
View(b_3d)
View(gene_stats)
View(df_pca)
View(gene_stats)
#b_3d = cbind(bm, bg)
b_3d_vec = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
View(gene_stats)
bm = df_mtdna[c(2,108,109,110,111,112,113,114,115,116,117)]
bm = unique(df_mtdna[c(2,108,109,110,111,112,113,114,115,116,117)])
#bg = df_mtdna[c('species_name', 'ghahSkew', 'chthSkew', 'fCn', 'fTn', 'fGn', 'fAn', 'med_G', 'med_T', 'realm', 'Trophic_niche')]
b_3d = merge(bm, gene_stats, by = 'species_name')
View(b_3d)
rm(bg)
x = b_3d$Mass
y = b_3d$fAn
z = b_3d$fGn
scatter3D(x, y, z)
scatter3D(x, y, z, theta = 15, phi = 20)
scatter3D(x, y, z, col = x, theta = 15, phi = 20)
scatter3D(x, y, z, col = y, theta = 15, phi = 20)
scatter3D(x, y, z, colvar = y, theta = 15, phi = 20)
stats_pca_big = prcomp(b_3d[c(2:20)], center = TRUE, scale. = TRUE)
summary(stats_pca_big)
b_3d_bipl = ggbiplot(stats_pca_big)
b_3d_bipl
b_3d_bipl = ggbiplot(stats_pca_big, groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl
ggplotly(b_3d_bipl)
View(gene_stats)
stats_pca_big = prcomp(b_3d[c(2:11)], center = TRUE, scale. = TRUE)
summary(stats_pca_big)
b_3d_bipl = ggbiplot(stats_pca_big(), groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl = ggbiplot(stats_pca_big, groups = b_3d$Trophic_niche, labels = b_3d$species_name, labels.size = 2)
b_3d_bipl
ggplotly(b_3d_bipl)
b_3d_bipl2 = ggbiplot(stats_pca_big, groups = b_3d$realm, labels = b_3d$species_name, labels.size = 2)
ggplotly(b_3d_bipl2)
#checking packages
library(ape)
library(geiger)
library(caper)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Alya's dataset
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
View(SynNuc)
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
names(SynNuc)
View(SynNuc)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
new_mam = SynNuc[c('Species', 'Gene', 'shahSkew')]
new_mam = SynNuc[c('Species', 'Gene', 'shahSkew'),]
View(new_mam)
new_mam = SynNuc[,c('Species', 'Gene', 'shahSkew')]
new_mam = SynNuc[, c('Species', 'Gene', 'shahSkew')]
View(new_mam)
new_mam = SynNuc[, c(1, 2, 79)]
new_mam = new_mam[new_mam$Gene != 'ND6']
new_mam = new_mam[new_mam$Gene != 'ND6',]
View(df_mtdna)
new_bird = df_mtdna[, c('species_name', 'ghahSkew')]
View(new_bird)
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4)]
View(new_mam)
new_bird$class = 'Aves'
View(new_mam)
View(new_bird)
View(SynNuc)
SynNuc$thchSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
View(new_mam)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
View(SynNuc)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_mam$Species = gsub('', '_', new_mam$Species)
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_mam$Species = gsub(' ', '_', new_mam$Species)
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_mam = new_mam[, c(1,3,4,5)]
new_bird = df_mtdna[, c('species_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
names(new_mam) = c('species_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
View(new_big)
library(ggplot2)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m
new_mam = SynNuc[, c(1, 2, 79, 81)]
new_mam = new_mam[new_mam$Gene != 'ND6',]
new_mam$class = 'Mammalia'
new_bird = df_mtdna[, c('species_name', 'gene_name' 'ghahSkew','chthSkew')]
new_bird = df_mtdna[, c('species_name', 'gene_name', 'ghahSkew','chthSkew')]
new_bird$class = 'Aves'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
names(new_mam) = c('species_name', 'gene_name' 'ghahSkew', 'chthSkew', 'class')
names(new_mam) = c('species_name', 'gene_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m
new_b_and_m = new_b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
new_b_and_m
View(SynNuc)
new_birds$gene_name[new_bird$gene_name == 'CYTB'] = 'CytB'
new_bird$gene_name[new_bird$gene_name == 'CYTB'] = 'CytB'
names(new_mam) = c('species_name', 'gene_name', 'ghahSkew', 'chthSkew', 'class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m = new_b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m
new_b_and_m_one = ggplot(new_big, aes(x = gene_name, y = chthSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
new_b_and_m_one = new_b_and_m_one + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CytB","ND1","ND2"))
new_b_and_m_one
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Work with Valya's data
valya_data = read.table('../../Head/2Scripts/bird_phenotypes.ods')
View(valya_data)
#Work with Valya's data
valya_data = read.csv('../../Head/2Scripts/Valyadata.csv')
View(valya_data)
valya_data = valya_data[valya_data$species_name != ' ',]
valya_data = valya_data[valya_data$species_name != '',]
#Work with Valya's data
valya_data = na.omit(valya_data)
View(df_mtdna)
gene_data = c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
View(gene_data)
gene_data = gsub(' ', '_', gene_data$species_name)
gene_data = df_mtdna[,c('species_name', 'ghahSkew', 'chthSkew', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac', 'med_G', 'med_T')]
gene_data$species_name = gsub(' ', '_', gene_data$species_name)
View(valya_data)
valya_gene = merge(gene_data, valya_data, by = 'species_name')
View(valya_gene)
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
View(gene_stats)
gene_stats$species_name = gsub(' ', '_', gene_stats$species_name)
View(valya_data)
gene_stats = merge(gene_stats, valya_data, by = 'species_name')
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
library(ggbiplot)
bipl = ggbiplot(stats_pca, groups = gene_stats$flying, labels = gene_stats$species_name, labels.size = 2)
bipl
unique(gene_stats$flying)
ggplotly(bipl)
