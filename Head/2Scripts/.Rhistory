guides(fill = guide_legend(title = "Trophic level"))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
h1
h2
h5
h1 = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
guides(fill = guide_legend(title = "Realm"))
h1 = h1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('Stg-Sac')+
guides(fill = guide_legend(title = "Realm"))
h2 = h2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h3 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry ')+
guides(fill = guide_legend(title = "Realm"))
h4 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry ')+
guides(fill = guide_legend(title = "Realm"))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
h3 = ggplot(data = df_mtdna, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry ')+
guides(fill = guide_legend(title = "Realm"))
h4 = ggplot(data = df_mtdna, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry ')+
guides(fill = guide_legend(title = "Realm"))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
df_mtdna$realm
unique(df_mtdna$realm)
h3 = h3 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo-Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h3 = ggplot(data = df_mtdna, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
unique(df_mtdna$realm)
h3 = h3 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo-Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h4 = ggplot(data = df_mtdna, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h4 = h4 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo-Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
h3 = ggplot(data = df_mtdna, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h3 = h3 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h4 = ggplot(data = df_mtdna, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h4 = h4 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
h1
h5
h5
library(devtools)
library(ggbiplot)
h1 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
guides(fill = guide_legend(title = "Realm"))
h1 = h1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('Stg-Sac')+
guides(fill = guide_legend(title = "Realm"))
h2 = h2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h3 = ggplot(data = df_mtdna, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h3 = h3 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h4 = ggplot(data = df_mtdna, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h4 = h4 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
df_pca = df_mtdna[c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
View(df_pca)
df_pca = df_mtdna[c('species_name', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
row.names(df_mtdna) = df_pca$species_name
stats_pca = prcomp(df_pca, center = TRUE, scale. = TRUE)
df_pca = df_mtdna[c('species_name','gene_name', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
stats_pca = stats_pca[stats_pca$gene_name != 'ND6',]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
View(gene_stats)
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
View(gene_stats)
stats_pca = prcomp(gene_stats, center = TRUE, scale. = TRUE)
names(gene_stats) = gene_stats$species_name
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(df_mtdna)]
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
df_pca = df_mtdna[c('species_name','gene_name', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats, center = TRUE, scale. = TRUE)
summary(stats_pca)
ggbiplot(stats_pca)
ggbiplot(stats_pca)
stats_pca = prcomp(gene_stats, circle = TRUE, center = TRUE, scale. = TRUE)
ggbiplot(stats_pca, circle = TRUE)
ggbiplot(stats_pca, circle = TRUE, col = 'red)
ggbiplot(stats_pca, obs.scale = 1)
bipl = ggbiplot(stats_pca, obs.scale = 1)
bipl
bipl
library(ggbiplot)
bipl = ggbiplot(stats_pca, obs.scale = 1)
bipl
bipl = ggbiplot(stats_pca, var.scale = 1)
bipl
bipl = ggbiplot(stats_pca, alpha = 1)
bipl
bipl = ggbiplot(stats_pca, show_guide = FALSE)
bipl
bipl = ggbiplot(stats_pca,labels = row.names(gene_stats))
bipl
df_pca = df_mtdna[c('species_name','gene_name', 'realm', 'Trophic_level', 'fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('realm', 'Trophic_level')]
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
View(eco)
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
row.names(gene_stats) = gene_stats$species_name
gene_stats = unique(gene_stats)
View(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
View(gene_stats)
stats_pca = prcomp(gene_stats[1,2,3,4,5,6,7,8], center = TRUE, scale. = TRUE)
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
bipl = ggbiplot(stats_pca)
bipl
bipl = ggbiplot(stats_pca, ellipse = TRUE, groups = gene_stats$Trophic_level)
bipl
bipl = ggbiplot(stats_pca, ellipse = TRUE, groups = gene_stats$realm)
bipl
bipl = ggbiplot(stats_pca, labels = row.names(gene_stats), ellipse = TRUE, groups = gene_stats$realm)
bipl
bipl = ggbiplot(stats_pca, ellipse = TRUE, groups = gene_stats$realm)
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)
bipl
library(ape)
library(geiger)
library(caper)
tree = read.tree("../../Body/3Results/phylo.treefile")
phy=multi2di(tree)
rm(list=ls(all=T))
library(dplyr)
library(ggplot2)
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = read.csv('../../Body/3Results/For_Bogdan.csv') #reading file
df = read.csv('../../Body/3Results/Birds_mtDNA_data.csv') #reading file
View(df)
df = df[df$gene_name != 'ND6',] #deleting ND6
df_sgc = df[,c(1,2,3,4,5,8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97)] #getting codon usage
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
df_codons_realm = df_sgc %>% select(species_name, gene_name, realm,all_of(vec_all))
sp_sum_gen = data.frame(unique(df_codons_realm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_codons_realm[ ,codon], by = list(df_codons_realm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
df_eco = df_codons_realm[,c(1,3)]
codon_norm = merge(codon_norm, df_eco)
df_try = data.frame(unique(codon_norm))
final = data.frame()
for (org in 1:nrow(df_try)){
sp_r = df_try[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a, sp_r$realm)
final = rbind(final,sp_out)
}
names(final) = c('Species', 'med_c', 'med_a', 'realm')
#Making points with realms
df_antarctic = final[final$realm == 'Antarctic' | final$realm == 'Nearctic' | final$realm == 'Palearctic',]
df_every = final[final$realm != 'Antarctic' & final$realm != 'Nearctic' & final$realm != 'Palearctic',]
df_antarctic$point = 1
df_every$point = 0
df_all = data.frame()
df_all = rbind(df_antarctic, df_every)
df_all$Species = gsub(' ','_', df_all$Species)
df_all$Species = as.character(df_all$Species)
#Alya's script
library(ape)
library(geiger)
library(caper)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
row.names(df_all) = df_all$Species
tree_w = treedata(tree, df_all, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_w, df_all, sort=T, warnings=T)$data)
data$med_c = as.numeric(as.character(data$med_c))
data$med_a = as.numeric(as.character(data$med_a))
data$point= as.numeric(as.character(data$point))
data$realm= as.character(data$realm)
table(data$point)
#Bogdan tree
tree1 = read.tree("../../Body/3Results/phylo.treefile")
tree_w3 = treedata(tree1, df_all, sort=T, warnings=T)$phy
data3 = as.data.frame(treedata(tree_w3, df_all, sort=T, warnings=T)$data)
MutComp3 = comparative.data(tree_w3, data3, Species, vcv = TRUE)
View(df_all)
#new birds data
avonet = read.csv2("../../Body/1Raw/Avonet_data.csv", header = TRUE, sep = ",")
names(avonet) = c('Species', 'Family', 'Order', 'Total_individuals', 'Female', 'Male', 'Unknown', 'Complete_measures',
'Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Secondary1', 'Hand_wing_index', 'Tail_length', 'Mass', 'Mass_source', 'Mass_refs_other',
'Inference', 'Treits_inferred', 'Reference_species', 'Habitat', 'Habitat_density', 'Migration', 'Trophic_level',
'Trophic_niche', 'Primary_lifestyle', 'Min_latitude', 'Max_latitude', 'Centroid_latitude', 'Centroid_longitude',
'Range_size', 'Species_status')
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(dplyr)
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5
library(ggpubr)
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
guides(fill = guide_legend(title = "Trophic level"))
g1 = g1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Mitochondrial genes')+
ylab('Stg-Sac')+
guides(fill = guide_legend(title = "Trophic level"))
g2 = g2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g3 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = med_a))+
geom_boxplot()+
xlab('Trophic level')+
ylab('Thymine asymmetry ')+
guides(fill = guide_legend(title = "Trophic level"))
g4 = ggplot(data = df_mtdna, aes(x = Trophic_level, y = med_c))+
geom_boxplot()+
xlab('Trophic level')+
ylab('Guanine asymmetry ')+
guides(fill = guide_legend(title = "Trophic level"))
g5 = ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
g5 = ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
g5
h1 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
guides(fill = guide_legend(title = "Realm"))
h1 = h1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Mitochondrial genes')+
ylab('Stg-Sac')+
guides(fill = guide_legend(title = "Realm"))
h3 = ggplot(data = df_mtdna, aes(x = realm, y = med_a))+
geom_boxplot()+
xlab('Realm')+
ylab('Thymine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h3 = h3 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h4 = h4 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h4 = ggplot(data = df_mtdna, aes(x = realm, y = med_c))+
geom_boxplot()+
xlab('Realm')+
ylab('Guanine asymmetry')+
guides(fill = guide_legend(title = "Realm"))
h4 = h4 + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5 = ggarrange(h1, h2, h3, h4,
ncol = 2, nrow = 2)
h5
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)
bipl
