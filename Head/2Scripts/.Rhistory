}
View(df_check)
for (i in vec_m)
{
for (j in vec_err)
{
skip_to_next = FALSE
a = tryCatch(pgls(as.numeric(as.character(MutComp_all$data[,i])) ~ as.numeric(as.character(MutComp_all$data[,j])),  MutComp_all, lambda = 'ML'), error = function(e) { skip_to_next <<- TRUE})
if (skip_to_next == FALSE)
{
b = as.numeric(summary(a)$coefficients[,4][2])
c = as.numeric(summary(a)$r.squared)
d = as.numeric(summary(a)$coefficients[,1][2])
df_check = rbind(df_check, c(i,j,b,c,d))
}
if (skip_to_next == TRUE)
{
b = NA
c = NA
d = NA
df_check = rbind(df_check, c(i,j,b,c,d))
}
}
}
skip_to_next = FALSE
df_check = data.frame()
vec_m = c('med_a')
vec_err = c('med_c', 'insessorial1')
for (i in vec_m)
{
for (j in vec_err)
{
skip_to_next = FALSE
a = tryCatch(pgls(as.numeric(as.character(MutComp_all$data[,i])) ~ as.numeric(as.character(MutComp_all$data[,j])),  MutComp_all, lambda = 'ML'), error = function(e) { skip_to_next <<- TRUE})
if (skip_to_next == FALSE)
{
b = as.numeric(summary(a)$coefficients[,4][2])
c = as.numeric(summary(a)$r.squared)
d = as.numeric(summary(a)$coefficients[,1][2])
df_check = rbind(df_check, c(i,j,b,c,d))
}
if (skip_to_next == TRUE)
{
b = NA
c = NA
d = NA
df_check = rbind(df_check, c(i,j,b,c,d))
}
}
}
View(df_check)
a = pgls(as.numeric(as.character(MutComp_all$data[,'med_a'])) ~ as.numeric(as.character(MutComp_all$data[,'med_c'])),  MutComp_all, lambda = 'ML')
b = as.numeric(summary(a)$coefficients[,4][2])
c = summary(a)$r.squared
d = as.numeric(summary(a)$coefficients[,1][2])
b
c
d
tree = read.tree("../../Body/3Results/phylo.treefile")
phy=multi2di(tree)
df_pgls = df_mtdna[c(1,2,5,26,27,28,29,30)]
#96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,120:158)]
df_pgls = df_pgls[df_pgls$gene_name != 'ND6',]
vecn = c('neutral_A', 'neutral_g', 'neutral_c', 'neutral_T', 'neutral_amount')
sp_sum_nucl = data.frame(unique(df_pgls$species_name))
for (i in vecn){
sum_of_nucl = aggregate(df_pgls[ ,i], by = list(df_pgls$species_name), FUN = 'sum')[2]
sp_sum_nucl = cbind(sp_sum_nucl, sum_of_nucl)
}
names(sp_sum_nucl) = c('species_name', vecn)
sp_sum_nucl$fTn = (sp_sum_nucl$neutral_A)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fCn = (sp_sum_nucl$neutral_g)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fAn = (sp_sum_nucl$neutral_T)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fGn = (sp_sum_nucl$neutral_c)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$ghahSkew = (sp_sum_nucl$neutral_c - sp_sum_nucl$neutral_T)/(sp_sum_nucl$neutral_c + sp_sum_nucl$neutral_T)
sp_sum_nucl$Stg_Sac = (sp_sum_nucl$fTn+sp_sum_nucl$fGn)-(sp_sum_nucl$fAn+sp_sum_nucl$fCn)
df_pgls1 = unique(df_mtdna[c(1,2,104,105,106,107,108,109,110,111,112,113,114,115,120:158)])
df_finale = merge(df_pgls1, sp_sum_nucl)
df_finale$realm = NA
df_finale$neutral_A = NA
df_finale$neutral_c = NA
df_finale$neutral_g = NA
df_finale$neutral_T = NA
df_finale$neutral_amount = NA
df_finale = df_finale[, colSums(is.na(df_finale)) < nrow(df_finale)]
df_finale$species_name = gsub(" ", "_", df_finale$species_name)
row.names(df_finale) = df_finale$species_name
#all ecology
tree_all = treedata(phy, df_finale, sort = T, warnings = T)$phy
all_pgls = as.data.frame(treedata(tree_all, df_finale, sort = T, warnings = T)$data)
MutComp_all = comparative.data(tree_all, all_pgls, species_name, vcv = TRUE)
vec1 = names(all_pgls)
vec1 = vec1[2:58]
vec2 = names(all_pgls)
vec2 = vec2[2:58]
pgls_finale = data.frame()
skip_to_next = FALSE
df_check = data.frame()
vec_m = c('med_a')
vec_err = c('med_c', 'insessorial1', "Beak_length_Culmen")
for (i in vec_m)
{
for (j in vec_err)
{
skip_to_next = FALSE
a = tryCatch(pgls(as.numeric(as.character(MutComp_all$data[,i])) ~ as.numeric(as.character(MutComp_all$data[,j])),  MutComp_all, lambda = 'ML'), error = function(e) { skip_to_next <<- TRUE})
if (skip_to_next == FALSE)
{
b = as.numeric(summary(a)$coefficients[,4][2])
c = as.numeric(summary(a)$r.squared)
d = as.numeric(summary(a)$coefficients[,1][2])
df_check = rbind(df_check, c(i,j,b,c,d))
}
if (skip_to_next == TRUE)
{
b = NA
c = NA
d = NA
df_check = rbind(df_check, c(i,j,b,c,d))
}
}
}
skip_to_next = FALSE
View(pgls_finale)
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
library(dplyr)
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length','Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
unique(df_mtdna$Habitat)
df_mtdna$forest1 = 0
df_mtdna$grassland1 = 0
df_mtdna$human1 = 0
df_mtdna$wetland1 = 0
df_mtdna$shrubland1 = 0
df_mtdna$woodland1 = 0
df_mtdna$marine1 = 0
df_mtdna$riverline1 = 0
df_mtdna$coastal1 = 0
df_mtdna$rock1 = 0
df_mtdna$desert1 = 0
df1 = subset(df_mtdna, df_mtdna$Habitat == 'Forest',)
df2 = subset(df_mtdna, df_mtdna$Habitat == 'Grassland',)
df3 = subset(df_mtdna, df_mtdna$Habitat == 'Human Modified',)
df4 = subset(df_mtdna, df_mtdna$Habitat == 'Wetland',)
df5 = subset(df_mtdna, df_mtdna$Habitat == 'Shrubland',)
df6 = subset(df_mtdna, df_mtdna$Habitat == 'Woodland',)
df7 = subset(df_mtdna, df_mtdna$Habitat == 'Marine',)
df8 = subset(df_mtdna, df_mtdna$Habitat == 'Riverine',)
df9 = subset(df_mtdna, df_mtdna$Habitat == 'Coastal',)
df10 = subset(df_mtdna, df_mtdna$Habitat == 'Rock',)
df11 = subset(df_mtdna, df_mtdna$Habitat == 'Desert',)
df1$forest1 = 1
df2$grassland1 = 1
df3$human1 = 1
df4$wetland1 = 1
df5$shrubland1 = 1
df6$woodland1 = 1
df7$marine1 = 1
df8$riverline1 = 1
df9$coastal1 = 1
df10$rock1 = 1
df11$desert1 = 1
df_mtdna = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11)
unique(df_mtdna$Trophic_level)
df_mtdna$carnivore1 = 0
df_mtdna$herbivore1 = 0
df_mtdna$omnivore1 = 0
df_mtdna$scavenger1 = 0
df1 = subset(df_mtdna, df_mtdna$Trophic_level == 'Carnivore',)
df2 = subset(df_mtdna, df_mtdna$Trophic_level == 'Herbivore',)
df3 = subset(df_mtdna, df_mtdna$Trophic_level == 'Omnivore',)
df4 = subset(df_mtdna, df_mtdna$Trophic_level == 'Scavenger',)
df1$carnivore1 = 1
df2$herbivore1 = 1
df3$omnivore1 = 1
df4$scavenger1 = 1
df_mtdna = rbind(df1, df2, df3, df4)
unique(df_mtdna$realm)
df_mtdna$australian1 = 0
df_mtdna$palearctic1 = 0
df_mtdna$indo_malay1 = 0
df_mtdna$madagascar1 = 0
df_mtdna$neotropic1 = 0
df_mtdna$nearctic1 = 0
df_mtdna$afrotropic1 = 0
df_mtdna$oceania1 = 0
df_mtdna$antarctic1 = 0
df1 = subset(df_mtdna, df_mtdna$realm == 'Australian',)
df2 = subset(df_mtdna, df_mtdna$realm == 'Palearctic',)
df3 = subset(df_mtdna, df_mtdna$realm == 'Indo_Malay',)
df4 = subset(df_mtdna, df_mtdna$realm == 'Madagascar',)
df5 = subset(df_mtdna, df_mtdna$realm == 'Neotropic',)
df6 = subset(df_mtdna, df_mtdna$realm == 'Nearctic',)
df7 = subset(df_mtdna, df_mtdna$realm == 'Afrotropic',)
df8 = subset(df_mtdna, df_mtdna$realm == 'Oceania',)
df9 = subset(df_mtdna, df_mtdna$realm == 'Antarctic',)
df1$australian1 = 1
df2$palearctic1 = 1
df3$indo_malay1 = 1
df4$madagascar1 = 1
df5$neotropic1 = 1
df6$nearctic1 = 1
df7$afrotropic1 = 1
df8$oceania1 = 1
df9$antarctic1 = 1
df_mtdna = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9)
unique(df_mtdna$Trophic_niche)
df_mtdna$invertivore1 = 0
df_mtdna$vertivore1 = 0
df_mtdna$aquatic_predator1 = 0
df_mtdna$omnivoretn1 = 0
df_mtdna$granivore1 = 0
df_mtdna$frugivore1 = 0
df_mtdna$nectarivore1 = 0
df_mtdna$herbivore_aquatic1 = 0
df_mtdna$herbivore_terrestrial1 = 0
df_mtdna$scavengertn1 = 0
df1 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Invertivore',)
df2 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Vertivore',)
df3 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Aquatic predator',)
df4 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Omnivore',)
df5 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Granivore',)
df6 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Frugivore',)
df7 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Nectarivore',)
df8 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Herbivore aquatic',)
df9 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Herbivore terrestrial',)
df10 = subset(df_mtdna, df_mtdna$Trophic_niche == 'Scavenger',)
df1$invertivore1 = 1
df2$vertivore1 = 1
df3$aquatic_predator1 = 1
df4$omnivoretn1 = 1
df5$granivore1 = 1
df6$frugivore1 = 1
df7$nectarivore1 = 1
df8$herbivore_aquatic1 = 1
df9$herbivore_terrestrial1 = 1
df10$scavengertn1 = 1
df_mtdna = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
unique(df_mtdna$Primary_lifestyle)
df_mtdna$insessorial1 = 0
df_mtdna$terrestrial1 = 0
df_mtdna$generalist1 = 0
df_mtdna$aerial1 = 0
df_mtdna$aquatic1 = 0
df1 = subset(df_mtdna, df_mtdna$Primary_lifestyle == 'Insessorial',)
df2 = subset(df_mtdna, df_mtdna$Primary_lifestyle == 'Terrestrial',)
df3 = subset(df_mtdna, df_mtdna$Primary_lifestyle == 'Generalist',)
df4 = subset(df_mtdna, df_mtdna$Primary_lifestyle == 'Aerial',)
df5 = subset(df_mtdna, df_mtdna$Primary_lifestyle == 'Aquatic',)
df1$insessorial1 = 1
df2$terrestrial1 = 1
df3$generalist1 = 1
df4$aerial1 = 1
df5$aquatic1 = 1
df_mtdna = rbind(df1, df2, df3, df4, df5)
write.csv(df_mtdna, file = 'Table_for_PGLS', sep = ',')
write.csv(df_mtdna, file = 'Table_for_PGLS', sep = ,)
write.csv(df_mtdna, file = 'Table_for_PGLS')
df_pgls1 = unique(df_mtdna[c(1,2,104,105,106,107,108,109,110,111,112,113,114,115,120:158)])
df_finale = merge(df_pgls1, sp_sum_nucl)
df_finale$realm = NA
df_finale$neutral_A = NA
df_finale$neutral_c = NA
df_finale$neutral_g = NA
df_finale$neutral_T = NA
df_finale$neutral_amount = NA
df_pgls = df_mtdna[c(1,2,5,26,27,28,29,30)]
df_pgls = df_pgls[df_pgls$gene_name != 'ND6',]
vecn = c('neutral_A', 'neutral_g', 'neutral_c', 'neutral_T', 'neutral_amount')
sp_sum_nucl = data.frame(unique(df_pgls$species_name))
for (i in vecn){
sum_of_nucl = aggregate(df_pgls[ ,i], by = list(df_pgls$species_name), FUN = 'sum')[2]
sp_sum_nucl = cbind(sp_sum_nucl, sum_of_nucl)
}
names(sp_sum_nucl) = c('species_name', vecn)
sp_sum_nucl$fTn = (sp_sum_nucl$neutral_A)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fCn = (sp_sum_nucl$neutral_g)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fAn = (sp_sum_nucl$neutral_T)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$fGn = (sp_sum_nucl$neutral_c)/(sp_sum_nucl$neutral_amount)
sp_sum_nucl$ghahSkew = (sp_sum_nucl$neutral_c - sp_sum_nucl$neutral_T)/(sp_sum_nucl$neutral_c + sp_sum_nucl$neutral_T)
sp_sum_nucl$Stg_Sac = (sp_sum_nucl$fTn+sp_sum_nucl$fGn)-(sp_sum_nucl$fAn+sp_sum_nucl$fCn)
df_pgls1 = unique(df_mtdna[c(1,2,104,105,106,107,108,109,110,111,112,113,114,115,120:158)])
df_finale = merge(df_pgls1, sp_sum_nucl)
df_finale$realm = NA
df_finale$neutral_A = NA
df_finale$neutral_c = NA
df_finale$neutral_g = NA
df_finale$neutral_T = NA
df_finale$neutral_amount = NA
df_finale = df_finale[, colSums(is.na(df_finale)) < nrow(df_finale)]
df_finale$species_name = gsub(" ", "_", df_finale$species_name)
row.names(df_finale) = df_finale$species_name
View(df_finale)
write.csv2(df_finale, file = 'Table_for_PGLS')
a = read.csv('../../Head/2Scripts/Table_for_PGLS.csv')
write.table(df_finale, file = 'Table_for_PGLS')
write.csv(df_finale, file = 'Table_for_PGLS.csv')
write.csv(df_finale, file = 'Table_for_PGLS.csv', sep = ",")
write.csv(df_finale, file = 'Table_for_PGLS.csv')
a = read.csv("../../Head/2Scripts/Table_for_Pgls.csv")
View(a)
write.csv(df_finale, file = 'Table_for_PGLS.csv', row.names = FALSE)
a = read.csv("../../Head/2Scripts/Table_for_Pgls.csv")
View(a)
a = read.csv("../../Head/2Scripts/Table_for_PGLS.csv")
View(a)
rm(list = ls(all=TRUE))
install.packages('ape')
install.packages('geiger')
install.packages('caper')
library(ape)
library(geiger)
library(caper)
tree = read.tree("../../Body/3Results/phylo.treefile")
df_all = read.csv('../../Head/2Scripts/Table_for_PGLS.csv')
tree = read.tree("../../Body/3Results/phylo.treefile")
phy=multi2di(tree)
View(df_all)
row.names(df_all) = df_all$species_name
#preparing files for PGLS
tree_all = treedata(phy, df_all, sort = T, warnings = T)$phy
all_pgls = as.data.frame(treedata(tree_all, df_all, sort = T, warnings = T)$data)
View(all_pgls)
MutComp_all = comparative.data(tree_all, all_pgls, species_name, vcv = TRUE)
vec1 = names(all_pgls)
vec1 = vec1[2:58]
vec2 = names(all_pgls)
vec2 = vec2[2:58]
pgls_finale = data.frame()
for (i in a)
{
print(i)
}
a = c('a', 'b', 'c')
for (i in a)
{
print(i)
}
rm(a)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
View(df_mtdna)
cox1 = subset(df_mtdna, df_mtdna$gene_name == 'COX1',)
library(ggplot2)
ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
skew_all = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
skew_all = skew_all + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
skew_all
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot()
skew_eco
skew_eco = skew_eco + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Oceania', 'Australian' ))
skew_eco
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot()
skew_eco = skew_eco + xlim(c('Antarctic', 'Palearctic', 'Nearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot()
skew_eco = skew_eco + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco
#you must always run command below for R to work properly
rm(list = ls(all=TRUE))
#checking packages
library(ape)
library(geiger)
library(caper)
#reading tree, birds table, doing some shenanigans
df_all = read.csv('../../Head/2Scripts/Table_for_PGLS.csv')
tree = read.tree("../../Body/3Results/phylo.treefile")
phy=multi2di(tree)
row.names(df_all) = df_all$species_name
#preparing files for PGLS
tree_all = treedata(phy, df_all, sort = T, warnings = T)$phy
all_pgls = as.data.frame(treedata(tree_all, df_all, sort = T, warnings = T)$data)
MutComp_all = comparative.data(tree_all, all_pgls, species_name, vcv = TRUE)
View(all_pgls)
vec1 = names(all_pgls)
vec1 = vec1[48:58]
#you must always run command below for R to work properly
rm(list = ls(all=TRUE))
df1 = read.csv('../../Head/2Scripts/Birds_PGLS.csv')
View(df1)
df2 = read.csv('../../Head/2Scripts/Birds_PGLS2.csv')
View(df2)
View(df1)
names(df1) = c('Number', 'Ecology1', 'Ecology2', 'p_value', 'mult_r_squared', 'effect_size')
names(df2) = c('Number', 'Ecology1', 'Ecology2', 'p_value', 'mult_r_squared', 'effect_size')
df1 = df1[df1$Ecology1 != 'insessorial1',]
to_save = rbind(df1, df2)
View(df1)
unique(df1$Ecology1)
df1 = read.csv('../../Head/2Scripts/Birds_PGLS.csv')
df2 = read.csv('../../Head/2Scripts/Birds_PGLS2.csv')
names(df1) = c('Number', 'Ecology1', 'Ecology2', 'p_value', 'mult_r_squared', 'effect_size')
names(df2) = c('Number', 'Ecology1', 'Ecology2', 'p_value', 'mult_r_squared', 'effect_size')
df1 = df1[df1$Ecology1 != 'insessorial1',]
to_save = rbind(df1, df2)
View(to_save)
to_save$Number = NA
to_save = to_save[, colSums(is.na(to_save)) < nrow(to_save)]
write.csv(to_save, file = 'Birds_all_PGLS')
write.csv(to_save, file = 'Birds_all_PGLS.csv')
write.csv(to_save, file = 'Birds_all_PGLS.csv', col.names = FALSE)
write.csv(to_save, file = 'Birds_all_PGLS.csv', row.names = FALSE)
mtcars
library(ggplot2)
library(heatmaply)
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_pgls.csv')
#discarding p-values
df_disc = df[is.na(df$p_value) == FALSE,]
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_pgls.csv')
#discarding p-values
df_disc = df[is.na(df$p_value) == FALSE,]
df_disc = df_disc[df_disc$p_value <= 0.05,]
df_disc = df_disc[df_disc$p_value != 0,]
#adjusting p-values
df_disc$p_adj_bon = p.adjust(df_disc$p_value, method = 'bonferroni')
df_disc$p_adj_holm = p.adjust(df_disc$p_value, method = 'holm')
df_disc$p_adj_hochberg = p.adjust(df_disc$p_value, method = 'hochberg')
df_disc$p_adj_hommel = p.adjust(df_disc$p_value, method = 'hommel')
df_disc$p_adj_bh = p.adjust(df_disc$p_value, method = 'BH')
df_disc$p_adj_fdr = p.adjust(df_disc$p_value, method = 'fdr')
df_disc$p_adj_by = p.adjust(df_disc$p_value, method = 'BY')
df_disc$p_adj_none = p.adjust(df_disc$p_value, method = 'none')
View(df_disc)
df_p = df_disc[c(1:3)]
View(df_p)
row.names(df_p) = df_p$Ecology1
heatmaply(df_p)
