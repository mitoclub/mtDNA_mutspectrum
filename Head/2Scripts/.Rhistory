df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
View(df)
#discarding p-values
df_disc = df_disc[df_disc$p_value <= 0.05,]
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
View(df_disc)
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
df_disc = df_disc[df_disc$p_value != 0,]
View(df_disc)
#genetics df
df_genetic = df_disc[df_disc$Ecology1 == c('ghahSkew', 'Stg_Sac', 'med_c', 'med_a')]
#genetics df
df_genetic = df_disc[df_disc$Ecology1 == c('ghahSkew', 'Stg_Sac', 'med_c', 'med_a'),]
View(df_genetic)
#genetics df
df_1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
View(df_1)
df_2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df_3 = df_disc[df_disc$Ecology1 =='med_c',]
df_4 = df_disc[df_disc$Ecology1 =='med_a',]
df_genetic = rbind(df1, df2, df3, df_4, by = 'Ecology1')
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
df_disc = df_disc[df_disc$p_value != 0,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df_genetic = rbind(df1, df2, df3, df4, by = 'Ecology1')
View(df_genetic)
df_genetic = rbind(df1, df2, df3, df4)
df_disc$Ecology1
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[df_disc != df_genetic]
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_lifestyles$Ecology1,]
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
View(df_lifestyles)
#drawing graphs
#genetic
ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = mult_r_squared))+
geom_tile()
#drawing graphs
#genetic
ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = effect_size))+
geom_tile()
ggplot(df_genetic, aes(x = Ecology1, y = p_value))+
geom_tile(fill = Ecology2)
ggplot(df_genetic, aes(x = Ecology1, y = p_value, fill = Ecology2))+
geom_tile()
ggplot(df_genetic, aes(x = Ecology1, y = p_value, fill = Ecology2))+
geom_point()
ggplot(df_genetic, aes(x = Ecology1, y = p_value))+
geom_point(fill = Ecology2)
ggplot(df_genetic, aes(x = Ecology1, y = p_value))+
geom_point(fill = df_genetic$Ecology2)
ggplot(df_genetic, aes(x = Ecology1, y = p_value, fill = Ecology2))+
geom_point()
ggplot(df_genetic, aes(x = Ecology1, y = p_value, color = Ecology2))+
geom_point()
ggplot(df_genetic, aes(x = Ecology1, y = p_value, color = Ecology2))+
geom_point()+
geom_text(
label=df_genetic$Ecology2,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
ggplot(df_genetic, aes(x = Ecology1, y = p_value))+
geom_text(
label=df_genetic$Ecology2,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
ggplot(df_genetic, aes(x = Ecology1, y = p_value, color = Ecology2))+
geom_point()
ggplot(df_genetic, aes(x = Ecology1, y = p_value2))+
geom_text(
label=Ecology2,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
ggplot(df_genetic, aes(x = Ecology1, y = p_value2))+
geom_text(
label=df_genetic$Ecology2,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
ggplot(df_genetic, aes(x = Ecology1, y = p_value))+
geom_text(
label=df_genetic$Ecology2,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
#measurements
ggplot(df_measurements, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
#drawing graphs
#genetic
g1 = ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
g1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#drawing graphs
#genetic
g1 = ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
g1 = g1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
g1
g2 = ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = mult_r_squared))+
geom_tile()
g2 = g2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
g2
g3 = ggplot(df_genetic, aes(x = Ecology1, y = Ecology2, fill = effect_size))+
geom_tile()
g3 = g3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
g3
#measurements
m1 = ggplot(df_measurements, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
m1 = m1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
m1
m2 = ggplot(df_measurements, aes(x = Ecology1, y = Ecology2, fill = mult_r_squared))+
geom_tile()
m2 = m2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
m2
m3 = ggplot(df_measurements, aes(x = Ecology1, y = Ecology2, fill = effect_size))+
geom_tile()
m3 = m3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
m3
View(df_measurements)
#lifestyles
l1 = ggplot(df_lifestyles, aes(x = Ecology1, y = Ecology2, fill = p_value))+
geom_tile()
l1 = l1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
l1
l2 = ggplot(df_lifestyles, aes(x = Ecology1, y = Ecology2, fill = mult_r_squared))+
geom_tile()
l2 = l2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
l2
l3 = ggplot(df_lifestyles, aes(x = Ecology1, y = Ecology2, fill = effect_size))+
geom_tile()
l3 = l3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
l3
rm(list = ls(all=TRUE))
library(ggplot2)
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
df_disc = df_disc[df_disc$p_value != 0,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
View(df_disc)
View(df)
df_bon = df[df$p_adj_bon < 0.05,]
View(df_bon)
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
summary(df$effect_size)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
View(df_mtdna)
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
df_bon = df[df$p_adj_bon < 0.05,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.1,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.2,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
df_bon = df[df$p_adj_bon < 0.5,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
rnow = read.csv('../../Body/3Results/Birds_mtDna_data.csv')
rnow$trophic_niche
rnow$species_name[rnow$trophic_niche = 'Aquatic predators',]
rnow$species_name[rnow$trophic_niche == 'Aquatic predator',]
rnow[rnow$trophic_niche == 'Aquatic predator',]
a = rnow[rnow$trophic_niche == 'Aquatic predator',]
View(a)
df_bon = df[df$p_adj_bon < 0.8,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
View(df_disc)
df_disc1 = df_disc[df_disc$p_value < 0.001,]
View(df_disc1)
df_disc2 = df_disc[df_disc$p_value < 0.01,]
View(df_disc2)
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
df_bon = df[df$p_adj_bon < 0.8,]
df_bon = df_bon[is.na(df_bon$p_adj_bon) == FALSE,]
rnow = read.csv('../../Body/3Results/Birds_mtDna_data.csv')
a = rnow[rnow$trophic_niche == 'Aquatic predator',]
df_disc1 = df_disc[df_disc$p_value < 0.001,] #save table
df_disc2 = df_disc[df_disc$p_value < 0.01,] #save table
View(df_disc)
write.csv(df_disc, 'PGLS_005_lesser.csv')
write.csv(df_disc1, 'PGLS_0001_lesser.csv')
write.csv(df_disc2, 'PGLS_001_lesser.csv')
View(df_disc1)
View(df_disc2)
rm(list = ls(all=TRUE))
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
#drawing volcano plot
install.packages("manhattanly")
library(manhattanly)
View(df)
vol_df = df[c(1,2,3),]
View(vol_df)
vol_df = df[,c(1,2,3)]
vol_df = df[,c(1,2,3,4,5)]
volcanoly(vo_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df$log = (-(log10(vol_df$p_value)))
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = df[,c(1,2,3,5)]
vol_df$log = (-(log10(vol_df$p_value)))
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
unique(vol_df$Ecology1)
unique(vol_df$Ecology2)
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
unique(vol_df$Ecology2)
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
names(vol_df) = c('Ecology', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
names(vol_df) = c('Ecology1', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanoly(vol_df, Ecology1 = 'Eco1', Ecology2 = 'Eco2')
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
volcanorObj = volcanor(vol_df)
names(vol_df) = c('Ecology1', 'Ecology2', 'P', 'EFFECTSIZE', 'LOG10P')
volcanorObj = volcanor(vol_df)
View(volcanorObj)
volcanorObj = volcanor(vol_df, snp = 'Ecology1', gene = 'Ecology2')
View(volcanorObj)
volcanoly(volcanorObj)
rm(list = ls(all=TRUE))
library(ggplot2)
#reading table
df = read.csv('../../Head/2Scripts/Birds_all_PGLS.csv')
#adjusting p-values
df$p_adj_bon = p.adjust(df$p_value, method = 'bonferroni')
df$p_adj_holm = p.adjust(df$p_value, method = 'holm')
df$p_adj_hochberg = p.adjust(df$p_value, method = 'hochberg')
df$p_adj_hommel = p.adjust(df$p_value, method = 'hommel')
df$p_adj_bh = p.adjust(df$p_value, method = 'BH')
df$p_adj_fdr = p.adjust(df$p_value, method = 'fdr')
df$p_adj_by = p.adjust(df$p_value, method = 'BY')
df$p_adj_none = p.adjust(df$p_value, method = 'none')
#discarding p-values
df_disc = df[df$p_value <= 0.05,]
df_disc = df_disc[is.na(df_disc$p_value) == FALSE,]
#genetics df
df1 = df_disc[df_disc$Ecology1 =='ghahSkew',]
df2 = df_disc[df_disc$Ecology1 =='Stg_Sac',]
df3 = df_disc[df_disc$Ecology1 =='med_c',]
df4 = df_disc[df_disc$Ecology1 =='med_a',]
df5 = df_disc[df_disc$Ecology1 =='fTn',]
df6 = df_disc[df_disc$Ecology1 =='fCn',]
df7 = df_disc[df_disc$Ecology1 =='fAn',]
df8 = df_disc[df_disc$Ecology1 =='fGn',]
df_genetic = rbind(df1, df2, df3, df4, df5, df6, df7, df8)
#birds measurements df
df1 = df_disc[df_disc$Ecology1 =='Beak_length_Culmen',]
df2 = df_disc[df_disc$Ecology1 =='Beak_length_Nares',]
df3 = df_disc[df_disc$Ecology1 =='Beak_width',]
df4 = df_disc[df_disc$Ecology1 =='Beak_depth',]
df5 = df_disc[df_disc$Ecology1 =='Tarsus_length',]
df6 = df_disc[df_disc$Ecology1 =='Wing_length',]
df7 = df_disc[df_disc$Ecology1 =='Kipps_distance',]
df8 = df_disc[df_disc$Ecology1 =='Hand_wing_index',]
df9 = df_disc[df_disc$Ecology1 =='Tail_length',]
df10 = df_disc[df_disc$Ecology1 =='Mass',]
df_measurements = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10)
#birds_lifestyles df
df_lifestyles = df_disc[!df_disc$Ecology1 %in% df_genetic$Ecology1,]
df_lifestyles = df_lifestyles[!df_lifestyles$Ecology1 %in% df_measurements$Ecology1,]
#drawing volcano plot
#install.packages("manhattanly")
library(manhattanly)
vol_df = df[,c(1,2,3,5)]
vol_df$log = log10(vol_df$p_value)
vol_df[vol_df$Ecology1 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
vol_df[vol_df$Ecology2 == 'Mass',] = NA
vol_df = vol_df[is.na(vol_df$p_value) == FALSE,]
View(vol_df)
vol_df$eff_normalize = ' '
vol_df$eff_normalize = (sign(vol_df$effect_size))*(log2((abs(vol_df$effect_size)+1)))
vol_df_norm = vol_df[,c(1,2,3,5,6)]
View(vol_df_norm)
names(vol_df_norm) = c('Ecology1', 'Ecology2', 'P', 'LOG10P', 'EFFECTSIZE')
volcanorObj = volcanor(vol_df_norm, snp = 'Ecology1', gene = 'Ecology2')
volcanoly(volcanorObj)
