geom_point(data = gene_stats, aes(PC1, PC2, color = realm, alpha = 0.5),size = 3)
pca_plot
pca_plot = autoplot(stats_pca, data = gene_stats, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 5, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black')+
geom_point(data = gene_stats, aes(PC1, PC2, color = realm, alpha = 0.5),size = 3)
pca_plot
g1 = ggplot(gene_stats, aes(x=PC1, color=realm)) +
geom_density(size = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (44.02%)')
g1
g2 = ggplot(gene_stats, aes(x=PC2, color=realm)) +
geom_density(size = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC2 (35.28%)')
g2
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Phylo PCA
tree = read.tree("../../Body/3Results/phylo.treefile")
#Phylo PCA
library(ape)
library(geiger)
library(caper)
tree = read.tree("../../Body/3Results/phylo.treefile")
phy=multi2di(tree)
View(df_mtdna)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_tree = df_mtdna[c(2:121)]
View(df_tree)
row.names(df_tree) = df_tree$species_name
df_tree = read.csv('../../Head/2Scripts/Table_for_PGLS.csv')
View(df_tree)
row.names(df_tree) = df_tree$species_name
phy=multi2di(tree)
name.check(phy, df_tree)
df_tree = df_tree[df_tree$species_name != "Agapornis_pullarius",]
df_tree = df_tree[df_tree$species_name != "Mergus_squamatus",]
name.check(phy, df_tree)
df_gene_realms = df_tree[,c(1:3,53:58)]
View(df_gene_realms)
View(df_mtdna)
df_realm = as.data.frame(,df_mtdna(c('species_name', 'realm')))
df_realm = as.data.frame(df_mtdna[c('species_name', 'realm')])
View(df_realm)
df_realm = unique(as.data.frame(df_mtdna[c('species_name', 'realm')]))
df_realm = df_realm[df_realm$species_name != "Agapornis_pullarius",]
df_realm = df_realm[df_realm$species_name != "Mergus_squamatus",]
df_realm = unique(as.data.frame(df_mtdna[c('species_name', 'realm')]))
df_realm = df_realm[df_realm$species_name != "Agapornis_pullarius",]
df_realm = df_realm[df_realm$species_name != "Mergus_squamatus",]
df_tree = merge(df_tree, df_realm, by = 'species-name')
df_tree = merge(df_tree, df_realm, by = 'species_name')
View(df_tree)
df_tree = df_tree[df_tree$species_name != "Agapornis_pullarius",]
df_tree = df_tree[df_tree$species_name != "Mergus_squamatus",]
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Phylo PCA
library(ape)
library(geiger)
library(caper)
tree = read.tree("../../Body/3Results/phylo.treefile")
df_tree = read.csv('../../Head/2Scripts/Table_for_PGLS.csv')
row.names(df_tree) = df_tree$species_name
phy=multi2di(tree)
name.check(phy, df_tree)
df_tree = df_tree[df_tree$species_name != "Agapornis_pullarius",]
df_tree = df_tree[df_tree$species_name != "Mergus_squamatus",]
name.check(phy, df_tree)
df_gene_realms = df_tree[,c(1:3,53:58)]
View(df_tree)
df_gene_realms = merge(df_tree, df_gene_realms, by = 'species_name')
df_gene_realms = df_tree[,c(1:3,53:58)]
View(df_gene_realms)
df_realms = unique(as.data.frame(df_mtdna[,c('species_name', 'realm')]))
df_realms = df_realms[df_realms$species_name != "Agapornis_pullarius",]
View(df_realms)
df_realms = df_realms[df_realms$species_name != "Agapornis pullarius",]
df_realms = df_realms[df_realms$species_name != "Mergus squamatus",]
df_realms$species_name = gsub(" ", "_", df_realms$species_name)
df_gene_realms = merge(df_realms, df_gene_realms, by = 'species_name')
View(df_gene_realms)
row.names(df_gene_realms) = df_gene_realms$species_name
name.check(df_gene_realms, phy)
#Phylo PCA
install.packages("phytools")
#Phylo PCA
install.packages("phytools")
install.packages("phytools")
library(phytools)
phylo_pca = phyl.pca(phy, df_gene_realms)
View(df_tree)
phylo_pca = phyl.pca(phy, df_gene_realms[,c(3:10)])
View(phylo_pca)
phylo_pca
par(mar = c(4.1,4.1,2.1,1.1),las=1)
plot(phylo_pca, main="")
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(phy,
scores(phylo_pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1 ()",
ylab=expression(paste("PC2 ("%up%"lamellae number, "
%down%"tail length)")))
eco<-setNames(df_realms[,2],rownames(df_realms))
ECO<-to.matrix(eco,levels(eco))
eco<-setNames(df_realms[,1],rownames(df_realms))
eco<-setNames(df_realms[,2],rownames(df_realms))
ECO<-to.matrix(eco,levels(eco))
View(df_realms)
row.names(df_realms) = df_realms$species_name
eco<-setNames(df_realms[,2],rownames(df_realms))
ECO<-to.matrix(eco,levels(eco))
df_realms = df_realms$realm
df_realms = unique(as.data.frame(df_mtdna[,c('species_name', 'realm')]))
df_realms = df_realms[df_realms$species_name != "Agapornis pullarius",]
df_realms = df_realms[df_realms$species_name != "Mergus squamatus",]
df_realms$species_name = gsub(" ", "_", df_realms$species_name)
row.names(df_realms) = df_realms$species_name
df_realms = df_realms[,c(2)]
df_realms = unique(as.data.frame(df_mtdna[,c('species_name', 'realm')]))
df_realms = df_realms[df_realms$species_name != "Agapornis pullarius",]
df_realms = df_realms[df_realms$species_name != "Mergus squamatus",]
df_realms$species_name = gsub(" ", "_", df_realms$species_name)
row.names(df_realms) = df_realms$species_name
df_realms = as.data.frame(df_realms[,c(2)])
View(df_realms)
row.names(df_realms) = df_realms$species_name
df_realms = unique(as.data.frame(df_mtdna[,c('species_name', 'realm')]))
df_realms = df_realms[df_realms$species_name != "Agapornis pullarius",]
df_realms = df_realms[df_realms$species_name != "Mergus squamatus",]
df_realms$species_name = gsub(" ", "_", df_realms$species_name)
row.names(df_realms) = df_realms$species_name
df_realms1 = df_realms[,c(2)]
eco<-setNames(df_realms[,2],rownames(df_realms))
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[phy$tip.label,],cex=0.5)
eco
levels(eco)
ECO=to.matrix(eco)
levels(eco)
df_try_pca = df_gene_realms[,c(3:10)]
View(df_try_pca)
phylo_pca = phyl.pca(phy, df_try_pca)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#What birds are in realms?
unique(df_mtdna$species_name[df_mtdna$realm == 'Antarctic',])
#What birds are in realms?
unique(df_mtdna[df_mtdna$realm == 'Antarctic',])
#What birds are in realms?
unique(df_mtdna[df_mtdna$realm == 'Antarctic',])$species_name
#What birds are in realms?
unique(unique(df_mtdna[df_mtdna$realm == 'Antarctic',])$species_name)
unique(unique(df_mtdna[df_mtdna$Trophic_niche == 'Herbivore_aquatic',])$species_name)
unique(unique(df_mtdna[df_mtdna$Trophic_niche == 'Herbivoreaquatic',])$species_name)
unique(unique(df_mtdna[df_mtdna$Trophic_niche == 'Herbivore aquatic',])$species_name)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
View(df_pca)
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
View(gene_stats)
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
View(gene_stats)
View(df_pca)
View(gene_stats)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
View(gene_stats)
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8,9)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
library(ggbiplot)
library(ggplot2)
library(ggpubr)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
bipl
install.packages('ggplotly')
library(ggplotly)
library(plotly)
install.packages("car")
install.packages("car")
install.packages("babynames")
install.packages("gapminder")
library(plotly)
library(dplyr)
library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
View(gene_stats)
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
library(ggbiplot)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
bipl
ggplotly(bipl)
bipl1 = ggbiplot(stats_pca)
bipl1
ggplotly(bipl1)
bipl1 = ggbiplot(stats_pca, groups = gene_stats$species_name)
bipl1
bipl1 = ggbiplot(stats_pca, groups = gene_stats$species_name, labels = FALSE, var.axes = FALSE)
ggplotly(bipl)
rm(list=ls(all=T))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
rm(list = ls(all=TRUE))
install.packages("ggbiplot")
install.packages("ggplot2")
install.packages("ggpubr")
install.packages("ggbiplot")
library(ggbiplot)
library(ggplot2)
library(ggpubr)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f1 = f1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f2 = f2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f3 = f3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot(outlier.shape = NA)+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
f4 = f4 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f5 = ggarrange(f1, f3, f2, f4,
ncol = 2, nrow = 2)
f5
f51 = ggarrange(f1,f2,
ncol = 1, nrow = 2)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
#row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
View(gene_stats)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
#PCA coloring
install.packages('devtools')
library(devtools)
install_github("vqv/ggbiplot")
library('ggbiplot')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, loadings = TRUE, loadings.label = TRUE, loadings.label.size = 5, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black')+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, )+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1, var.scale = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm alpha = 3)+
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
install.packages('plotly')
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("babynames")
install.packages("gapminder")
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "blue", "black", "black", "black", "black", "black", "red", "black"))
#PCA coloring
library('ggbiplot')
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "blue", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "yellow", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
ggplotly(bipl, width = 3)
ggplotly(bipl, width = 4)
ggplotly(bipl, width = 2)
ggplotly(bipl, width = 10)
ggplotly(bipl, width = 5)
ggplotly(bipl, width = 3)
ggplotly(bipl, width = 3, height = 3)
bipl1 = ggbiplot(stats_pca, groups = gene_stats$species_name, labels = FALSE, var.axes = FALSE)
bipl1
View(gene_stats)
ggplotly(bipl1)
spec_pca = ggplotly(bipl1)
ggplotly(bipl, width = 3, height = 3)
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
#PCA coloring
library('ggbiplot')
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.scale = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.scale = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = FALSE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl2 = ggbiplot(stats_pca, choices = 2:3, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5,)
bipl2
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl2)
bipl3 = ggbiplot(stats_pca, choices = 3:4)
bipl3
ggplotly(bipl3)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = TRUE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 0.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 1)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
