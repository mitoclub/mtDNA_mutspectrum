theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC2 (32.2%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black", 'black'))
g8
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_mtdna[,c('species_name', 'realm', 'Trophic_niche')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_syn = merge(mut_data_syn, ecozone_data, by = 'species_name')
mut_data_syn$MutSpec =  as.numeric(mut_data_syn$MutSpec)
AC = mut_data_syn[mut_data_syn$Mut == 'A>C',]
AG = mut_data_syn[mut_data_syn$Mut == 'A>G',]
AT = mut_data_syn[mut_data_syn$Mut == 'A>T',]
GC = mut_data_syn[mut_data_syn$Mut == 'G>C',]
GT = mut_data_syn[mut_data_syn$Mut == 'G>T',]
GA = mut_data_syn[mut_data_syn$Mut == 'G>A',]
CG = mut_data_syn[mut_data_syn$Mut == 'C>G',]
CT = mut_data_syn[mut_data_syn$Mut == 'C>T',]
CA = mut_data_syn[mut_data_syn$Mut == 'C>A',]
TG = mut_data_syn[mut_data_syn$Mut == 'T>G',]
TC = mut_data_syn[mut_data_syn$Mut == 'T>C',]
TA = mut_data_syn[mut_data_syn$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(1,3,4,5,6,7,8,9,10)]
names(AC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(1,3,4,5,6,7,8,9,10)]
names(AG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(1,3,4,5,6,7,8,9,10)]
names(AT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[,c(1,3,4,5,6,7,8,9,10)]
names(GC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(1,3,4,5,6,7,8,9,10)]
names(GT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(1,3,4,5,6,7,8,9,10)]
names(GA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(1,3,4,5,6,7,8,9,10)]
names(CG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(1,3,4,5,6,7,8,9,10)]
names(CT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(1,3,4,5,6,7,8,9,10)]
names(CA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(1,3,4,5,6,7,8,9,10)]
names(TG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(1,3,4,5,6,7,8,9,10)]
names(TC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(1,3,4,5,6,7,8,9,10)]
names(TA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
mut_data_syn1 = rbind(AC, AG, AT, GC, GT, GA, CT, CA, CG, TA, TG, TC)
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec, fill = realm)) +
geom_boxplot()+
scale_fill_manual(values = c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
View(mut_data_syn1)
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec, fill = realm)) +
geom_boxplot()
#MutSpec
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_for_diploma[,c('species_name', 'russian_eco', 'russian_tn')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_syn = merge(mut_data_syn, ecozone_data, by = 'species_name')
mut_data_syn$MutSpec =  as.numeric(mut_data_syn$MutSpec)
AC = mut_data_syn[mut_data_syn$Mut == 'A>C',]
AG = mut_data_syn[mut_data_syn$Mut == 'A>G',]
AT = mut_data_syn[mut_data_syn$Mut == 'A>T',]
GC = mut_data_syn[mut_data_syn$Mut == 'G>C',]
GT = mut_data_syn[mut_data_syn$Mut == 'G>T',]
GA = mut_data_syn[mut_data_syn$Mut == 'G>A',]
CG = mut_data_syn[mut_data_syn$Mut == 'C>G',]
CT = mut_data_syn[mut_data_syn$Mut == 'C>T',]
CA = mut_data_syn[mut_data_syn$Mut == 'C>A',]
TG = mut_data_syn[mut_data_syn$Mut == 'T>G',]
TC = mut_data_syn[mut_data_syn$Mut == 'T>C',]
TA = mut_data_syn[mut_data_syn$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(1,3,4,5,6,7,8,9,10)]
names(AC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(1,3,4,5,6,7,8,9,10)]
names(AG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(1,3,4,5,6,7,8,9,10)]
names(AT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[,c(1,3,4,5,6,7,8,9,10)]
names(GC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(1,3,4,5,6,7,8,9,10)]
names(GT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(1,3,4,5,6,7,8,9,10)]
names(GA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(1,3,4,5,6,7,8,9,10)]
names(CG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(1,3,4,5,6,7,8,9,10)]
names(CT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(1,3,4,5,6,7,8,9,10)]
names(CA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(1,3,4,5,6,7,8,9,10)]
names(TG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(1,3,4,5,6,7,8,9,10)]
names(TC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(1,3,4,5,6,7,8,9,10)]
names(TA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
mut_data_syn1 = rbind(AC, AG, AT, GC, GT, GA, CT, CA, CG, TA, TG, TC)
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec)) +
geom_boxplot()
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, type = "box")
library(plotly)
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, color = ~russian_eco type = "box")
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, color = ~russian_eco, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, color = ~realm, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec)) +
geom_boxplot()
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec)) +
geom_boxplot()+
ylab('Мутационный спектр')
fig <- plot_ly(mut_data_syn1, x = ~Mut, y = ~MutSpec, color = ~realm, type = "box")
fig <- fig %>% layout(boxmode = "group")
fig
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec, fill = realm)) +
geom_boxplot()+
ylab('Мутационный спектр')
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec, fill = Trophic_niche)) +
geom_boxplot()+
ylab('Мутационный спектр')
#Картинки для дипома/практики
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
library(plotly)
#Частоты
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#MutSpec
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_for_diploma[,c('species_name', 'russian_eco', 'russian_tn')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
#Экология
df_for_diploma = df_mtdna
df_for_diploma$russian_eco = ''
df_for_diploma$russian_tn = ''
dfr1 = df_for_diploma[df_for_diploma$realm == 'Antarctic',]
dfr2 = df_for_diploma[df_for_diploma$realm == 'Nearctic',]
dfr3 = df_for_diploma[df_for_diploma$realm == 'Palearctic',]
dfr4 = df_for_diploma[df_for_diploma$realm == 'Indo_Malay',]
dfr5 = df_for_diploma[df_for_diploma$realm == 'Afrotropic',]
dfr6 = df_for_diploma[df_for_diploma$realm == 'Neotropic',]
dfr7 = df_for_diploma[df_for_diploma$realm == 'Madagascar',]
dfr8 = df_for_diploma[df_for_diploma$realm == 'Australian',]
dfr9 = df_for_diploma[df_for_diploma$realm == 'Oceania',]
dfr1$russian_eco = 'Антарктика'
dfr2$russian_eco = 'Неарктика'
dfr3$russian_eco = 'Палеарктика'
dfr4$russian_eco = 'Индо-Малайзия'
dfr5$russian_eco = 'Афротропики'
dfr6$russian_eco = 'Неотропики'
dfr7$russian_eco = 'Мадагаскар'
dfr8$russian_eco = 'Австралия'
dfr9$russian_eco = 'Океания'
df_for_diploma = rbind(dfr1, dfr2, dfr3, dfr4, dfr5, dfr6, dfr7, dfr8, dfr9)
dfr1 = df_for_diploma[df_for_diploma$Trophic_niche == 'Herbivore aquatic',]
dfr2 = df_for_diploma[df_for_diploma$Trophic_niche == 'Scavenger',]
dfr3 = df_for_diploma[df_for_diploma$Trophic_niche == 'Vertivore',]
dfr4 = df_for_diploma[df_for_diploma$Trophic_niche == 'Granivore',]
dfr5 = df_for_diploma[df_for_diploma$Trophic_niche == 'Herbivore terrestrial',]
dfr6 = df_for_diploma[df_for_diploma$Trophic_niche == 'Invertivore',]
dfr7 = df_for_diploma[df_for_diploma$Trophic_niche == 'Aquatic predator',]
dfr8 = df_for_diploma[df_for_diploma$Trophic_niche == 'Nectarivore',]
dfr9 = df_for_diploma[df_for_diploma$Trophic_niche == 'Omnivore',]
dfr10 = df_for_diploma[df_for_diploma$Trophic_niche == 'Frugivore',]
dfr1$russian_tn = 'Водные травоядные'
dfr2$russian_tn = 'Падальщики'
dfr3$russian_tn = 'Позвоночные'
dfr4$russian_tn = 'Зерноядные'
dfr5$russian_tn = 'Наземные травоядные'
dfr6$russian_tn = 'Беспозвоночные'
dfr7$russian_tn = 'Водные хищники'
dfr8$russian_tn = 'Нектароядные'
dfr9$russian_tn = 'Всеядные'
dfr10$russian_tn = 'Плодоядные'
df_for_diploma = rbind(dfr1, dfr2, dfr3, dfr4, dfr5, dfr6, dfr7, dfr8, dfr9, dfr10)
#MutSpec
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/mutspec12.tsv", header = TRUE, fill = TRUE)
mut_data_syn = mut_data[mut_data$Label == 'syn',]
mut_data_syn = mut_data_syn[,c(1,2,3,4,5,7,8)]
ecozone_data = df_for_diploma[,c('species_name', 'russian_eco', 'russian_tn')]
ecozone_data = unique(ecozone_data)
ecozone_data$species_name = gsub(' ', '_', ecozone_data$species_name)
mut_data_syn = mut_data_syn[!grepl('Node', mut_data_syn$AltNode),]
names(mut_data_syn) = c('Mut', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'species_name', 'Label')
mut_data_syn = merge(mut_data_syn, ecozone_data, by = 'species_name')
mut_data_syn$MutSpec =  as.numeric(mut_data_syn$MutSpec)
AC = mut_data_syn[mut_data_syn$Mut == 'A>C',]
AG = mut_data_syn[mut_data_syn$Mut == 'A>G',]
AT = mut_data_syn[mut_data_syn$Mut == 'A>T',]
GC = mut_data_syn[mut_data_syn$Mut == 'G>C',]
GT = mut_data_syn[mut_data_syn$Mut == 'G>T',]
GA = mut_data_syn[mut_data_syn$Mut == 'G>A',]
CG = mut_data_syn[mut_data_syn$Mut == 'C>G',]
CT = mut_data_syn[mut_data_syn$Mut == 'C>T',]
CA = mut_data_syn[mut_data_syn$Mut == 'C>A',]
TG = mut_data_syn[mut_data_syn$Mut == 'T>G',]
TC = mut_data_syn[mut_data_syn$Mut == 'T>C',]
TA = mut_data_syn[mut_data_syn$Mut == 'T>A',]
AC = replace(AC, 'A>C', 'T>G')
AC = AC[,c(1,3,4,5,6,7,8,9,10)]
names(AC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AG = replace(AG, 'A>G', 'T>C')
AG = AG[,c(1,3,4,5,6,7,8,9,10)]
names(AG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
AT = replace(AT, 'A>T', 'T>A')
AT = AT[,c(1,3,4,5,6,7,8,9,10)]
names(AT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GC = replace(GC, 'G>C', 'C>G')
GC = GC[,c(1,3,4,5,6,7,8,9,10)]
names(GC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GT = replace(GT, 'G>T', 'C>A')
GT = GT[,c(1,3,4,5,6,7,8,9,10)]
names(GT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
GA = replace(GA, 'G>A', 'C>T')
GA = GA[,c(1,3,4,5,6,7,8,9,10)]
names(GA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CG = replace(CG, 'C>G', 'G>C')
CG = CG[,c(1,3,4,5,6,7,8,9,10)]
names(CG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CT = replace(CT, 'C>T', 'G>A')
CT = CT[,c(1,3,4,5,6,7,8,9,10)]
names(CT) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
CA = replace(CA, 'C>A', 'G>T')
CA = CA[,c(1,3,4,5,6,7,8,9,10)]
names(CA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TG = replace(TG, 'T>G', 'A>C')
TG = TG[,c(1,3,4,5,6,7,8,9,10)]
names(TG) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TC = replace(TC, 'T>C', 'A>G')
TC = TC[,c(1,3,4,5,6,7,8,9,10)]
names(TC) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
TA = replace(TA, 'T>A', 'A>T')
TA = TA[,c(1,3,4,5,6,7,8,9,10)]
names(TA) = c('species_name', 'ObsNum', 'ExpNum', 'RawMutSpec', 'MutSpec', 'Label', 'realm', 'Trophic_niche', 'Mut')
mut_data_syn1 = rbind(AC, AG, AT, GC, GT, GA, CT, CA, CG, TA, TG, TC)
ggplot(data = mut_data_syn1, aes(x = Mut, y = MutSpec)) +
geom_boxplot()+
ylab('Мутационный спектр')
View(mut_data_syn1)
pca_data = mut_data_syn1[,c(1,5,9)]
View(pca_data)
ex = reshape(data = pca_data, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
View(ex)
names(ex) = c('species_name', 'T>G', 'T>C', 'T>A', 'C>G', 'C>A', 'C>T', 'G>A','G>T','G>C', 'A>T', 'A>C', 'A>G')
View(ecozone_data)
ex = merge(ex, ecozone_data, by = 'species_name')
ex = ex[,c(1,14,15,12,13,11,6,5,7,8,10,9,4,3,2)]
row.names(ex) = ex$species_name
stats_pca1 = prcomp(ex[,c(4,5,6,7,8,9,10,11,12,13,14,15)], center = TRUE, scale. = TRUE)
summary(stats_pca1)
bipl = ggbiplot(stats_pca1, labels.size = 2)
bipl
birds_ms_pca = data.frame(stats_pca1$x)
birds_ms_pca = birds_ms_pca[,c(1,2)]
birds_ms_pca$species_name = row.names(birds_ms_pca)
ex2 = merge(ex, birds_ms_pca, by = 'species_name')
View(ex2)
g15 = ggplot(ex2, aes(x=PC1, color=russian_eco)) +
geom_density(size = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (37.9%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
g15
g15 = ggplot(ex2, aes(x=PC1, color=russian_eco)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (37.9%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
g15
bipl
g15 = ggplot(ex2, aes(x=PC1, color=russian_eco)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (38.2%)')+
ylab('Плотность')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
g15
g17 = ggplot(ex2, aes(x=PC1, color=russian_tn)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (38.2%)')+
ylab('Плотность')+
scale_colour_manual(name="Origin", values= c("black", "black", "black", "red", "black", "black", "black", "black", "black", 'black'))
g17
g16 = ggplot(ex2, aes(x=PC2, color=russian_eco)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC2 (10.4%)')+
ylab('Плотность')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
g16
g17 = ggplot(ex2, aes(x=PC1, color=russian_tn)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (38.2%)')+
ylab('Плотность')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black", 'black'))
g17
g18 = ggplot(ex2, aes(x=PC2, color=russian_tn)) +
geom_density()+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC2 (10.4%)')+
ylab('Плотность')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black", 'black'))
g18
pca_data = mut_data_syn1[,c(1,5,7,8,9)]
View(pca_data)
pca_data_shaped = dcast.data.table(setDT(pca_data), species_name+realm+Trophic_niche~Mut,
value.var='MutSpec')
library(data.table)
pca_data = mut_data_syn1[,c(1,5,7,8,9)]
pca_data_shaped = dcast.data.table(setDT(pca_data), species_name+realm+Trophic_niche~Mut,
value.var='MutSpec')
pca_data_shaped$TR_TS = (pca_data_shaped$`A>G`+pca_data_shaped$`C>T`+pca_data_shaped$`G>A`+pca_data_shaped$`T>C`)/(pca_data_shaped$`A>C`+pca_data_shaped$`A>T`+pca_data_shaped$`C>A`+pca_data_shaped$`C>G`+pca_data_shaped$`G>C`+pca_data_shaped$`G>T`+pca_data_shaped$`T>A`+pca_data_shaped$`T>G`)
pca_data_shaped$CT_GA = (pca_data_shaped$`C>T`/pca_data_shaped$`G>A`)
pca_data_shaped$AG_TC = (pca_data_shaped$`A>G`/pca_data_shaped$`T>C`)
realm_tr_ts = ggplot(data = pca_data_shaped, aes(x = realm, y = TR_TS))+
geom_boxplot()+
ylim(0,75)
realm_tr_ts = realm_tr_ts + xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
realm_tr_ts = realm_tr_ts + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts
View(pca_data_shaped)
View(mut_data_syn1)
library(data.table)
pca_data = mut_data_syn1[,c(1,5,7,8,9)]
pca_data_shaped = dcast.data.table(setDT(pca_data), species_name+realm+Trophic_niche~Mut,
value.var='MutSpec')
pca_data_shaped$TR_TS = (pca_data_shaped$`A>G`+pca_data_shaped$`C>T`+pca_data_shaped$`G>A`+pca_data_shaped$`T>C`)/(pca_data_shaped$`A>C`+pca_data_shaped$`A>T`+pca_data_shaped$`C>A`+pca_data_shaped$`C>G`+pca_data_shaped$`G>C`+pca_data_shaped$`G>T`+pca_data_shaped$`T>A`+pca_data_shaped$`T>G`)
pca_data_shaped$CT_GA = (pca_data_shaped$`C>T`/pca_data_shaped$`G>A`)
pca_data_shaped$AG_TC = (pca_data_shaped$`A>G`/pca_data_shaped$`T>C`)
realm_tr_ts = ggplot(data = pca_data_shaped, aes(x = realm, y = TR_TS))+
geom_boxplot()+
ylim(0,75)
realm_tr_ts = realm_tr_ts + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts = realm_tr_ts + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts
realm_tr_ts1 = ggplot(data = pca_data_shaped, aes(x = realm, y = CT_GA))+
geom_boxplot()+
ylim(0,5)
realm_tr_ts1 = realm_tr_ts1 + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts1 = realm_tr_ts1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts1
realm_tr_ts = ggplot(data = pca_data_shaped, aes(x = realm, y = TR_TS))+
geom_boxplot()+
ylim(0,75)
realm_tr_ts = realm_tr_ts + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts = realm_tr_ts + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts
niche_tr_ts = ggplot(data = pca_data_shaped, aes(x = Trophic_niche, y = TR_TS))+
geom_boxplot()+
ylim(0,75)
niche_tr_ts = niche_tr_ts + xlim(c('Водные травоядные', 'Падальщики', 'Позвоночные', 'Зерноядные', 'Наземные травоядные', 'Беспозвоночные', 'Водные хищники', 'Нектароядные', 'Всеядные', 'Плодоядные'))
niche_tr_ts = niche_tr_ts + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
niche_tr_ts
realm_tr_ts1 = ggplot(data = pca_data_shaped, aes(x = realm, y = CT_GA))+
geom_boxplot()+
ylim(0,5)+
xlab('Экозоны')+
ylab('Отношение мутаций С->T и G->A')
realm_tr_ts1 = realm_tr_ts1 + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts1 = realm_tr_ts1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts1
niche_tr_ts1 = ggplot(data = pca_data_shaped, aes(x = Trophic_niche, y = CT_GA))+
geom_boxplot()+
ylim(0,5)+
xlab('Трофические ниши')+
ylab('Отношение мутаций С->T и G->A')
niche_tr_ts1 = niche_tr_ts1 + xlim(c('Водные травоядные', 'Падальщики', 'Позвоночные', 'Зерноядные', 'Наземные травоядные', 'Беспозвоночные', 'Водные хищники', 'Нектароядные', 'Всеядные', 'Плодоядные'))
niche_tr_ts1 = niche_tr_ts1 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
niche_tr_ts1
realm_tr_ts2 = ggplot(data = pca_data_shaped, aes(x = realm, y = AG_TC))+
geom_boxplot()+
ylim(0,5)+
xlab('Экозоны')+
ylab('Отношение мутаций С->T и G->A')
realm_tr_ts2 = realm_tr_ts2 + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts2 = realm_tr_ts2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts2
realm_tr_ts2 = ggplot(data = pca_data_shaped, aes(x = realm, y = AG_TC))+
geom_boxplot()+
ylim(0,5)+
xlab('Экозоны')+
ylab('Отношение мутаций A->G и T->C')
realm_tr_ts2 = realm_tr_ts2 + xlim(c('Антарктика', 'Неарктика', 'Палеарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Австралия', 'Океания'))
realm_tr_ts2 = realm_tr_ts2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
realm_tr_ts2
niche_tr_ts2 = ggplot(data = pca_data_shaped, aes(x = Trophic_niche, y = AG_TC))+
geom_boxplot()+
ylim(0,5)+
xlab('Экозоны')+
ylab('Отношение мутаций A->G и T->C')
niche_tr_ts2 = niche_tr_ts2 + xlim(c('Водные травоядные', 'Падальщики', 'Позвоночные', 'Зерноядные', 'Наземные травоядные', 'Беспозвоночные', 'Водные хищники', 'Нектароядные', 'Всеядные', 'Плодоядные'))
niche_tr_ts2 = niche_tr_ts2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
niche_tr_ts2
niche_tr_ts2 = ggplot(data = pca_data_shaped, aes(x = Trophic_niche, y = AG_TC))+
geom_boxplot()+
ylim(0,5)+
xlab('Трофические ниши')+
ylab('Отношение мутаций A->G и T->C')
niche_tr_ts2 = niche_tr_ts2 + xlim(c('Водные травоядные', 'Падальщики', 'Позвоночные', 'Зерноядные', 'Наземные травоядные', 'Беспозвоночные', 'Водные хищники', 'Нектароядные', 'Всеядные', 'Плодоядные'))
niche_tr_ts2 = niche_tr_ts2 + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
niche_tr_ts2
#Картинки для дипома/практики
rm(list = ls(all=TRUE))
#Midory mutspec data
mut_data = read.table("C:/Users/User/Desktop/Birds mutspec results from Bogdan/internal_12_syn_mutspec_all.csv", header = TRUE, fill = TRUE, sep = ',')
library(stringr)
mut_data[c('gene_name', 'species_name')] = str_split_fixed(mut_data$gene_and_species, '__', 2)
mut_data = mut_data[,c(2,3,4,5,7,8)]
mut_data_no_gene = mut_data[,c(1,4,6)]
know = mut_data[mut_data$species_name == 'Adelomyia_melanogenys',]
rm(know)
ex = reshape(data = mut_data_no_gene, idvar = 'species_name',
timevar = 'Mut',
direction = 'wide')
names(ex) = c('species_name', 'A>G', 'A>T', 'C>A', 'C>G', 'C>T', 'G>A', 'G>C','G>T','T>A', 'T>C', 'T>G', 'A>C')
ex1 = ex
df_mtdna = read.csv('../Paper_materials/Birds_dataset_paper_extra.csv')
df_mtdna = read.csv('../../Paper_materials/Birds_dataset_paper_extra.csv')
eco_data = unique(df_mtdna[,c('species_name', 'realm', 'Trophic_niche')])
eco_data$species_name = gsub(' ', '_', eco_data$species_name)
midori_birds = merge(ex, eco_data, by = 'species_name')
midori_birds_extra = merge(mut_data, eco_data, by = 'species_name')
rm(list = ls(all=TRUE))
library(ape)
i
library(phytools)
library(geiger)
install.packages("phangorn")
install.packages("phangorn")
library(phangorn)
packageVersion("ape")
packageVersion("phangorn")
#Chapter 1
text.string<-
"(((((Robin,Iguana),((((Cow,Whale),Pig),Bat),
(Lemur,Human))),Coelacanth),Goldfish),Shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,no.margin=TRUE)
par(mfrow=c(2,2),mar=c(1.1,1.1,3.1,1.1))
plot(vert.tree)
mtext("(a)",line=1,adj=0)
plot(vert.tree,type="cladogram")
mtext("(b)",line=1,adj=0)
plot(unroot(vert.tree),type="unrooted",
lab4ut="axial",x.lim=c(-2,6.5),
y.lim=c(-3,7.5))
mtext("(c)",line=1,adj=0)
View(vert.tree)
#Nodes
plotTree(vert.tree,offset=1,type="cladogram")
library(phytools)
#Nodes
plotTree(vert.tree,offset=1,type="cladogram")
#Nodes
plotTree(vert.tree,offset=1,type="cladogram")
labelnodes(1:(Ntip(vert.tree)+vert.tree$Nnode),
1:(Ntip(vert.tree)+vert.tree$Nnode),
interactive=FALSE,cex=0.8)
rm(list = ls(all=TRUE))
