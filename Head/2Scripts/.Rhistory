summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ scavenger1, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_a ~ omnivoretn1, MutComp_all, lambda = 'ML')
unique(data_all$Primary_lifestyle)
model1 = pgls(med_a ~ generalist1, MutComp_all, lambda = 'ML')
model1 = pgls(generalist1 ~ med_a, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(aerial ~ med_a, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(aquatic ~ med_a, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(insessorial ~ med_a, MutComp_all, lambda = 'ML')
model1 = pgls(terrestrial ~ med_a, MutComp_all, lambda = 'ML')
model1 = pgls(generalist1 ~ med_c, MutComp_all, lambda = 'ML')
#Alya's script
library(ape)
library(geiger)
library(caper)
model1 = pgls(generalist1 ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(aerial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(aquatic ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(insessorial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(terrestrial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
data_all$terrestrial = 0
View(df5)
df1 = subset(data_all, data_all$Primary_lifestyle == 'Terrestrial',)
df2 = subset(data_all, data_all$Primary_lifestyle != 'Terrestrial',)
df1$terrestrial = 1
View(df1)
View(df2)
data_all = rbind(df1, df2)
model1 = pgls(terrestrial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
View(data_all)
model1 = pgls(insessorial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
MutComp_all = comparative.data(tree_all, data_all, Species, vcv = TRUE)
model1 = pgls(terrestrial ~ med_c, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_a ~ generalist1, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_a ~ aerial, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_a ~ aquatic, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_a ~ insessorial, MutComp_all, lambda = 'ML')
model1 = pgls(med_a ~ terrestrial, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ generalist1, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ aerial, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ aquatic, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ insessorial, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(med_c ~ terrestrial, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(terrestrial ~ med_a, MutComp_all, lambda = 'ML')
summary(model1)$coefficients[,4][2]
summary(model1)$r.squared
summary(model1)$coefficients[,1][2]
model1 = pgls(insessorial ~ med_a, MutComp_all, lambda = 'ML')
#Alya's script
library(ape)
library(geiger)
library(caper)
model1 = pgls(med_a ~ wetland, MutComp_all, lambda = 'ML')
summary(model1)
model1 = pgls(wetland ~ med_a, MutComp_all, lambda = 'ML')
summary(model1)
a = pgls(med_a ~ Beak_width, MutComp_all, lamda = 'ML')
a = pgls(med_a ~ Beak_width, MutComp_all, lambda = 'ML')
b = pgls(data_all[,'med_a'] ~ data_all[,'Beak_width'], MutComp_all, lambda = 'ML')
summary(a)
summary(b)
head(data_all[,'med_a'])
head(data_all$med_a)
View(MutComp_all)
c = pgls(data_all$med_a ~ data_all$Beak_width, lambda = 'ML')
c = pgls(data_all$med_a ~ data_all$Beak_width,  MutComp_all, lambda = 'ML')
c = pgls(data_all$med_a ~ data_all$Beak_width,  MutComp_all, lambda = 'ML')
summary(c)
med_a
Beak_width
MutComp_all$med_a
d = pgls(med_a ~ data_all$Beak_width,  MutComp_all, lambda = 'ML')
summary(d)
f = pgls(data_all$med_a ~ Beak_width,  MutComp_all, lambda = 'ML')
summary(f)
Beak_width
b = pgls(data_all[,'med_a'] ~ data_all[,'Beak_width'], lambda = 'ML')
a = pgls(med_a ~ Beak_width, lambda = 'ML')
View(MutComp_all)
a = pgls(med_a ~ med_c, MutComp_all, lambda = 'ML')
MutComp_all$data[,med_a]
MutComp_all$data[med_a]
MutComp_all$data[med_a,]
MutComp_all$data
MutComp_all$data[1]
head(MutComp_all$data[2])
summary(a)
f = pgls(MutComp_all$data[2] ~ Beak_width,  MutComp_all, lambda = 'ML')
f = pgls(as.numeric(MutComp_all$data[2]) ~ Beak_width,  MutComp_all, lambda = 'ML')
f = pgls(as.numeric(as.character(MutComp_all$data[2])) ~ Beak_width,  MutComp_all, lambda = 'ML')
as.numeric(as.character(MutComp_all$data[2]))
as.numeric(as.character(MutComp_all$data[2,]))
as.numeric(as.character(MutComp_all$data[,2]))
as.numeric(as.character(MutComp_all$data[,'med_a']))
f = pgls(as.numeric(as.character(MutComp_all$data[,'med_a'])) ~ Beak_width,  MutComp_all, lambda = 'ML')
summary(f)
g = pgls(as.numeric(as.character(MutComp_all$data[,'med_a'])) ~ as.numeric(as.character(MutComp_all$data[,'Beak_width'])),  MutComp_all, lambda = 'ML')
summary(g)
View(data_all)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(devtools)
library(ggbiplot)
library(ggplot2)
library(dplyr)
library(ape)
library(geiger)
library(caper)
#### 1.Preparing a birds + ecology dataset
***
```{r}
```
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
View(df_mtdna)
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$realm = NA
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
rm.na(df_mtdna)
df_mtdna = na.omit(df_mtdna)
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$realm = NA
df_mtdna$realm = NA
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
na.omit(df_mtdna)
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = df_mtdna$neutral_c - df_mtdna$neutral_T
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg-Sac = (df_mtdna$fAn + df_mtdna$fCn) - (df_mtdna$fTn + df_mtdna$fGn)
df_mtdna$Stg-Sac = (df_mtdna$fAn + df_mtdna$fCn) - (df_mtdna$fTn + df_mtdna$fGn)
df_mtdna$Stg-Sac = ((df_mtdna$fAn + df_mtdna$fCn) - (df_mtdna$fTn + df_mtdna$fGn))
df_mtdna$Stg = ((df_mtdna$fAn + df_mtdna$fCn)
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
View(df_mtdna)
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(devtools)
library(ggbiplot)
library(ggplot2)
library(dplyr)
library(ape)
library(geiger)
library(caper)
dfn = c(names(df_norm))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$realm = NA
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
#### 1.Preparing a birds + ecology dataset
##### 1.1 Read birds mtDNA data and remove extra columns
***
```{r}
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$realm = NA
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
```
<br>
##### 1.2. Calculate mtDNA describing metrics
###### All metrics are translated from light to heavy chain
***
```{r}
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
```
<br>
##### 1.3 Codon normalisation
***
```{r}
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
View(sp_sum_gen)
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
View(sp_sum_gen)
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
View(codon_norm)
---
title: "Mitochondrial mutational spectrum of birds is associated with increased metabolism"
author: 'Yury Gusarov'
date: '2022-07-07'
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(devtools)
library(ggbiplot)
library(ggplot2)
library(dplyr)
library(ape)
library(geiger)
library(caper)
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$realm = NA
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
```{r}
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
View(sp_sum_gen)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
View(codon_norm)
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
library(dplyr)
library(ggbiplot)
library(ggplot2)
library(dplyr)
library(ape)
library(geiger)
library(caper)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
codon_norm = codon_norm %>% select(-c('TAA', 'AGA'))
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
codon_norm = codon_norm %>% select(- c('TAA','AGA'))
codon_norm$TAA = NA
codon_norm = codon_norm[, colSums(is.na(codon_norm)) < nrow(codon_norm)]
View(codon_norm)
codon_norm$AGA = NA
codon_norm = codon_norm[, colSums(is.na(codon_norm)) < nrow(codon_norm)]
df_try = data.frame(unique(codon_norm))
View(df_try)
rm(df_try)
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
library(dplyr)
library(devtools)
library(dplyr)
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
View(final)
View(df_mtdna)
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
View(df_mtdna)
View(final)
library(ggplot2)
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Аденина')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1
g1
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Аденина')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Гуанина')
g2 = g2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Цитозина')
g3 = g3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота Тимина')
g4 = g4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g5 = ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
library(ggpubr)
g5 = ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
g5
g5
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Thymine frequence')
g1 = g1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Cytosine frequence')
g2 = g2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Guanine frequence')
g3 = g3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Mitochondrial genes')+
ylab('Adenine frequence')
g4 = g4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g5 = ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
g5
df_eco = read.csv('../../Body/3Results/Avonet_data.csv')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
View(df_eco)
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('Species','Beak_length_Culmen9', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
names(df_eco) = c('Species','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name)
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
