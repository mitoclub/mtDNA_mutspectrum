library(ggplot2)
library(ggpubr)
f1 = ggplot(data = df_mtdna, aes(x = gene_name, y = fAn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота аденина')
f1 = f1 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f2 = ggplot(data = df_mtdna, aes(x = gene_name, y = fGn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота гуанина')
f2 = f2 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f3 = ggplot(data = df_mtdna, aes(x = gene_name, y = fCn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота цитозина')
f3 = f3 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f4 = ggplot(data = df_mtdna, aes(x = gene_name, y = fTn))+
geom_boxplot()+
xlab('Митохондриальные гены')+
ylab('Частота тимина')
f4 = f4 +xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
f5 = ggarrange(f1, f2, f3, f4,
ncol = 2, nrow = 2)
f5
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Митохондриальные гены')+
ylab('Характеристика x')+
guides(fill = guide_legend(title = "Трофический уровень"))+
scale_fill_hue(labels = c("Плотоядные", "Травоядные", 'Всеядные', 'Падальщики'))
g1 = g1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1 = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Митохондриальные гены')+
ylab('Характеристика x')+
guides(fill = guide_legend(title = "Трофический уровень"))+
scale_fill_hue(labels = c("Плотоядные", "Травоядные", 'Всеядные', 'Падальщики'))
g1 = g1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g1
g2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = Trophic_level))+
xlab('Митохондриальные гены')+
ylab('Характеристика y')+
guides(fill = guide_legend(title = "Трофический уровень"))+
scale_fill_hue(labels = c("Плотоядные", "Травоядные", 'Всеядные', 'Падальщики'))
g2 = g2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
g2
df_mtdna$Трофический_уровень = ''
df1 = subset(df_mtdna, df_mtdna$Trophic_level == 'Carnivore',)
df2 = subset(df_mtdna, df_mtdna$Trophic_level == 'Herbivore',)
df3 = subset(df_mtdna, df_mtdna$Trophic_level == 'Omnivore',)
df4 = subset(df_mtdna, df_mtdna$Trophic_level == 'Scavenger',)
df1$Трофический_уровень = 'Плотоядные'
df2$Трофический_уровень = 'Травоядные'
df3$Трофический_уровень = 'Всеядные'
df4$Трофический_уровень = 'Падальщики'
df_mtdna = rbind(df1, df2, df3, df4)
g3 = ggplot(data = df_mtdna, aes(x = Трофический_уровень, y = med_a))+
geom_boxplot()+
xlab('Трофический уровень')+
ylab('Асимметрия аденина')
g3 = g3 + xlim(c('Плотоядные', 'Травоядные', 'Всеядные', 'Падальщики'))
g3
g4 = ggplot(data = df_mtdna, aes(x = Трофический_уровень, y = med_c))+
geom_boxplot()+
xlab('Трофический уровень')+
ylab('Асимметрия цитозина')
g4 = g4 + xlim(c('Плотоядные', 'Травоядные', 'Всеядные', 'Падальщики'))
g4
h1 = ggplot(data = df_mtdna, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(aes(fill = realm))+
xlab('Митохондриальные гены')+
ylab('Характеристика х')+
guides(fill = guide_legend(title = "Экозона"))+
scale_fill_hue(labels = c("Афротропики", "Антарктика", 'Австралия', 'Индо-Малайзия', 'Мадагаскар', 'Неарктика', 'Неотропики', 'Океания', 'Палеарктика'))
h1 = h1 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h1
h2 = ggplot(data = df_mtdna, aes(x = gene_name, y = Stg_Sac))+
geom_boxplot(aes(fill = realm))+
xlab('Митохондриальные гены')+
ylab('Характеристика у')+
guides(fill = guide_legend(title = "Экозона"))+
scale_fill_hue(labels = c("Афротропики", "Антарктика", 'Австралия', 'Индо-Малайзия', 'Мадагаскар', 'Неарктика', 'Неотропики', 'Океания', 'Палеарктика'))
h2 = h2 + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))
h2
df_mtdna$Экозона = ''
df1 = subset(df_mtdna, df_mtdna$realm == 'Afrotropic',)
df2 = subset(df_mtdna, df_mtdna$realm == 'Antarctic',)
df3 = subset(df_mtdna, df_mtdna$realm == 'Australian',)
df4 = subset(df_mtdna, df_mtdna$realm == 'Indo_Malay',)
df5 = subset(df_mtdna, df_mtdna$realm == 'Madagascar',)
df6 = subset(df_mtdna, df_mtdna$realm == 'Nearctic',)
df7 = subset(df_mtdna, df_mtdna$realm == 'Neotropic',)
df8 = subset(df_mtdna, df_mtdna$realm == 'Oceania',)
df9 = subset(df_mtdna, df_mtdna$realm == 'Palearctic',)
df1$Экозона = 'Афротропики'
df2$Экозона = 'Антарктика'
df3$Экозона = 'Австралия'
df4$Экозона = 'Индо-Малайзия'
df5$Экозона = 'Мадагаскар'
df6$Экозона = 'Неарктика'
df7$Экозона = 'Неотропики'
df8$Экозона = 'Океания'
df9$Экозона = 'Палеарктика'
df_mtdna = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9)
h3 = ggplot(data = df_mtdna, aes(x = Экозона, y = med_a))+
geom_boxplot()+
xlab('Экозона')+
ylab('Асимметрия аденина')
h3 = h3 + xlim(c("Антарктика", 'Палеарктика', 'Неарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Океания', 'Австралия'))
h3
h4 = ggplot(data = df_mtdna, aes(x = Экозона, y = med_c))+
geom_boxplot()+
xlab('Экозона')+
ylab('Асимметрия цитозина')
h4 = h4 + xlim(c("Антарктика", 'Палеарктика', 'Неарктика', 'Индо-Малайзия', 'Афротропики', 'Мадагаскар', 'Неотропики', 'Океания', 'Австралия'))
h4
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
View(gene_stats)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
library(dplyr)
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
library(devtools)
library(ggbiplot)
library(ggplot2)
library(ggpubr)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)
bipl
View(gene_stats)
bipl = ggbiplot(stats_pca)
bipl
View(df_mtdna)
rm(list = ls(all.names = TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
library(dplyr)
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
library(ggbiplot)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
df_mtdna$Трофический_уровень = ''
df1 = subset(df_mtdna, df_mtdna$Trophic_level == 'Carnivore',)
df2 = subset(df_mtdna, df_mtdna$Trophic_level == 'Herbivore',)
df3 = subset(df_mtdna, df_mtdna$Trophic_level == 'Omnivore',)
df4 = subset(df_mtdna, df_mtdna$Trophic_level == 'Scavenger',)
df1$Трофический_уровень = 'Плотоядные'
df2$Трофический_уровень = 'Травоядные'
df3$Трофический_уровень = 'Всеядные'
df4$Трофический_уровень = 'Падальщики'
df_mtdna = rbind(df1, df2, df3, df4)
df_mtdna$Экозона = ''
df1 = subset(df_mtdna, df_mtdna$realm == 'Afrotropic',)
df2 = subset(df_mtdna, df_mtdna$realm == 'Antarctic',)
df3 = subset(df_mtdna, df_mtdna$realm == 'Australian',)
df4 = subset(df_mtdna, df_mtdna$realm == 'Indo_Malay',)
df5 = subset(df_mtdna, df_mtdna$realm == 'Madagascar',)
df6 = subset(df_mtdna, df_mtdna$realm == 'Nearctic',)
df7 = subset(df_mtdna, df_mtdna$realm == 'Neotropic',)
df8 = subset(df_mtdna, df_mtdna$realm == 'Oceania',)
df9 = subset(df_mtdna, df_mtdna$realm == 'Palearctic',)
df_mtdna$Трофический_уровень = ''
df1 = subset(df_mtdna, df_mtdna$Trophic_level == 'Carnivore',)
df2 = subset(df_mtdna, df_mtdna$Trophic_level == 'Herbivore',)
df3 = subset(df_mtdna, df_mtdna$Trophic_level == 'Omnivore',)
df4 = subset(df_mtdna, df_mtdna$Trophic_level == 'Scavenger',)
df1$Трофический_уровень = 'Плотоядные'
df2$Трофический_уровень = 'Травоядные'
df3$Трофический_уровень = 'Всеядные'
df4$Трофический_уровень = 'Падальщики'
df_mtdna = rbind(df1, df2, df3, df4)
df_mtdna$Экозона = ''
df1 = subset(df_mtdna, df_mtdna$realm == 'Afrotropic',)
df2 = subset(df_mtdna, df_mtdna$realm == 'Antarctic',)
df3 = subset(df_mtdna, df_mtdna$realm == 'Australian',)
df4 = subset(df_mtdna, df_mtdna$realm == 'Indo_Malay',)
df5 = subset(df_mtdna, df_mtdna$realm == 'Madagascar',)
df6 = subset(df_mtdna, df_mtdna$realm == 'Nearctic',)
df7 = subset(df_mtdna, df_mtdna$realm == 'Neotropic',)
df8 = subset(df_mtdna, df_mtdna$realm == 'Oceania',)
df9 = subset(df_mtdna, df_mtdna$realm == 'Palearctic',)
df1$Экозона = 'Афротропики'
df2$Экозона = 'Антарктика'
df3$Экозона = 'Австралия'
df4$Экозона = 'Индо-Малайзия'
df5$Экозона = 'Мадагаскар'
df6$Экозона = 'Неарктика'
df7$Экозона = 'Неотропики'
df8$Экозона = 'Океания'
df9$Экозона = 'Палеарктика'
df_mtdna = rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
rm(list = ls(all.names = TRUE))
df_mtdna = read.csv('../../Body/3Results/Birds_mtDNA_data.csv')
df_mtdna$trophic_level = NA
df_mtdna$trophic_niche = NA
df_mtdna$foraging_niche = NA
df_mtdna = df_mtdna[, colSums(is.na(df_mtdna)) < nrow(df_mtdna)]
df_mtdna$ghahSkew = (df_mtdna$neutral_c - df_mtdna$neutral_T)/(df_mtdna$neutral_c + df_mtdna$neutral_T)
df_mtdna$fAn = df_mtdna$neutral_A/df_mtdna$neutral_amount
df_mtdna$fGn = df_mtdna$neutral_g/df_mtdna$neutral_amount
df_mtdna$fCn = df_mtdna$neutral_c/df_mtdna$neutral_amount
df_mtdna$fTn = df_mtdna$neutral_T/df_mtdna$neutral_amount
df_mtdna$Stg = df_mtdna$fAn + df_mtdna$fCn
df_mtdna$Sac = df_mtdna$fTn + df_mtdna$fGn
df_mtdna$Stg_Sac = df_mtdna$Stg - df_mtdna$Sac
library(dplyr)
df_norm = df_mtdna[df_mtdna$gene_name != 'ND6',] #deleting ND6
vec_all = c('TTC','TTT','TCC','TCT','TAC','TAT','TGC','TGT',
'TTA','TTG','TCA','TCG','TAA','TAG','TGA','TGG',
'CTC','CTT','CCC','CCT','CAC','CAT','CGC','CGT',
'CTA','CTG','CCA','CCG','CAA','CAG','CGA','CGG',
'ATC','ATT','ACC','ACT','AAC','AAT','AGC','AGT',
'ATA','ATG','ACA','ACG','AAA','AAG','AGA','AGG',
'GTC','GTT','GCC','GCT','GAC','GAT','GGC','GGT',
'GTA','GTG','GCA','GCG','GAA','GAG','GGA','GGG')
needed_codons = c('TTC','TCC','TAC','TGC',
'TTA','TCA','TAA','TGA',
'CTC','CCC','CAC','CGC',
'CTA','CCA','CAA','CGA',
'ATC','ACC','AAC','AGC',
'ATA','ACA','AAA','AGA',
'GTC','GCC','GAC','GGC',
'GTA','GCA','GAA','GGA')
dfn = c(names(df_norm))
sp_sum_gen = data.frame(unique(df_norm$species_name))
for ( codon in vec_all){
sum_of_codon = aggregate(df_norm[ ,codon], by = list(df_norm$species_name), FUN = 'sum')[2]
sp_sum_gen = cbind(sp_sum_gen, sum_of_codon)
}
names(sp_sum_gen) = c('Species', vec_all)
codon_norm = data.frame()
for (i in 1:nrow(sp_sum_gen)){
org_gen = sp_sum_gen[i,]
org_gen = as.vector(org_gen)
df_out= data.frame(sp_sum_gen[i,]$Species)
for (codon in seq(from = 2, to = 65, by = 2)){
if (org_gen[1,codon] == 0) {df_out = cbind(df_out, 0)}
else {
norm_cod = org_gen[1,codon] / (org_gen[1,codon+1] + org_gen[1,codon])
df_out = cbind(df_out, norm_cod)
}
}
names(df_out) = c('Species', needed_codons)
codon_norm = rbind(codon_norm,df_out)
}
names(codon_norm) = c('species_name', needed_codons)
codon_norm = codon_norm %>% select(-c('TAA','AGA'))
final = data.frame()
for (org in 1:nrow(codon_norm)){
sp_r = codon_norm[org,]
vec_of_c = sp_r %>% select(TTC, TCC, TAC, TGC, CTC, CCC, CAC, CGC,
ATC, ACC, AAC, AGC, GTC, GCC, GAC, GGC)
vec_of_a = sp_r %>% select(TTA, TCA, TGA, CTA, CCA, CAA, CGA,
ATA, ACA, AAA, GTA, GCA, GAA, GGA)
med_c = median(as.numeric(vec_of_c), na.rm = TRUE)
med_a = median(as.numeric(vec_of_a), na.rm = TRUE)
sp_out = data.frame(sp_r$species_name, med_c, med_a)
final = rbind(final,sp_out)
}
names(final) = c('species_name', 'med_c', 'med_a')
df_mtdna = merge(df_mtdna, final, by = 'species_name')
df_eco = read.csv('../../Body/1Raw/Avonet_data.csv')
df_eco = df_eco[c(1,9,10,11,12,13,14,15,17,18,19,25,28,29,30)]
names(df_eco) = c('species_name','Beak_length_Culmen', 'Beak_length_Nares', 'Beak_width', 'Beak_depth', 'Tarsus_length', 'Wing_length',
'Kipps_distance', 'Hand_wing_index', 'Tail_length', 'Mass', 'Habitat', 'Trophic_level', 'Trophic_niche', 'Primary_lifestyle')
df_mtdna = merge(df_mtdna, df_eco, by = 'species_name')
library(ggbiplot)
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')]
df_pca = df_pca[df_pca$gene_name != 'ND6',]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'med_a', 'med_c')
gene_stats = data.frame(unique(df_pca$species_name))
eco = df_mtdna[c('species_name','realm', 'Trophic_level')]
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
gene_stats = merge(gene_stats, eco, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)
bipl
