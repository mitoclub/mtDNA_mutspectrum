gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, loadings = TRUE, loadings.label = TRUE, loadings.label.size = 5, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black')+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, )+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1, var.scale = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 1)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm alpha = 3)+
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("grey", "blue", "grey", "grey", "grey", "grey", "grey", "red", "grey"))
bipl
install.packages('plotly')
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("babynames")
install.packages("gapminder")
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "blue", "black", "black", "black", "black", "black", "red", "black"))
#PCA coloring
library('ggbiplot')
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "blue", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "yellow", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, alpha = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
ggplotly(bipl, width = 3)
ggplotly(bipl, width = 4)
ggplotly(bipl, width = 2)
ggplotly(bipl, width = 10)
ggplotly(bipl, width = 5)
ggplotly(bipl, width = 3)
ggplotly(bipl, width = 3, height = 3)
bipl1 = ggbiplot(stats_pca, groups = gene_stats$species_name, labels = FALSE, var.axes = FALSE)
bipl1
View(gene_stats)
ggplotly(bipl1)
spec_pca = ggplotly(bipl1)
ggplotly(bipl, width = 3, height = 3)
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
#PCA coloring
library('ggbiplot')
bipl2 = ggbiplot(stats_pca, choices = 2:3)
bipl2
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, obs.scale = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.scale = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.scale = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = FALSE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl2 = ggbiplot(stats_pca, choices = 2:3, var.axes = TRUE, varname.size = 4, varname.adjust = 1.5,)
bipl2
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl2)
bipl3 = ggbiplot(stats_pca, choices = 3:4)
bipl3
ggplotly(bipl3)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = TRUE)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 0.5)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 1)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 3)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Dima's data
df_mammals = read.csv('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
View(df_mammals)
#Dima's data
df_mammals = read.table('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
View(df_mammals)
unique(df_mammals$Class)
View(df_mammals)
#Dima's data
df_all = read.table('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
df_mammals = df_all[,df_all$Class == 'Mammalia']
df_mammals = df_all[, df_all$Class == 'Mammalia']
df_mammals = df_all[df_all$Class == 'Mammalia',]
View(df_mammals)
df_mammals = df_all[,df_all$Class == 'Mammalia']
df_mammals = df_all[df_all$Class == 'Mammalia']
#PCA coloring
library('ggbiplot')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
library(plotly)
library(dplyr)
#library(carData)
library(gapminder)
library(babynames)
ggplotly(bipl)
View(gene_stats)
bipl1 = ggbiplot(stats_pca, choices = 2:3, groups = gene_stats$species_name, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl1
bipl1 = ggbiplot(stats_pca, choices = 2:3, groups = gene_stats$realms, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl1
ggplotly(bipl1)
bipl1 = ggbiplot(stats_pca, choices = 2:3, groups = gene_stats$realms, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl1
ggplotly(bipl1)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
ggplotly(bipl)
bipl1 = ggbiplot(stats_pca, choices = 2:3, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl1
ggplotly(bipl1)
bipl3 = ggbiplot(stats_pca, choices = 3:4, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl3
ggplotly(bipl3)
df_mammals = filter(df_all, df_all$Class = 'Mammalia')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
View(df_mammals)
df_what = filter(df_all, df_all$Species == 'Abotrix_longipilis')
View(df_what)
df_what = filter(df_all, df_all$Species == 'Abothrix_longipilis')
df_what = filter(df_all, df_all$Species == 'Abrothrix_longipilis')
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Dima's data
df_all = read.table('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
df_what = filter(df_all, df_all$Species == 'Abrothrix_longipilis')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
View(df_all)
unique(df_all$Class)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
df_mammals = filter(df_all, df_all$Class = 'Mammalia')
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
df_mammals = filter(df_all$Class == 'Mammalia')
df_mammals = df_all %>% filter(df_all$Class == 'Mammalia')
library(dplyr)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
View(df_mammals)
count(unique(df_mammals$Species))
unique(df_mammals$Species)
rowsum(df_mammals, df_mammals$Species == 'Capreolus_capreolus')
library(plyr)
count(df_mammals, 'Species')
count(df_mammals, 'Species') > 10
count(df_mammals, 'Species') > 12
a = (count(df_mammals, 'Species') > 12)
View(a)
a = (count(df_mammals, 'Species') >= 12)
a = (count(df_mammals, 'Species') >= 11)
a = (count(df_mammals, 'Species') == 11)
a = (count(df_mammals, 'Species') >= 12)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
#Dima's dat
df_all = read.table('../../Head/2Scripts/VertebratePolymorphisms.MutSpecData.txt')
unique(df_all$Class)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
library(plyr)
a = (count(df_mammals, 'Species') >= 12)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
library(dplyr)
df_mammals = filter(df_all, df_all$Class == 'Mammalia')
a = (count(df_mammals, 'Species') >= 12)
View(a)
library(plyr)
install.packages('plyr')
View(df_mammals)
df_mammals$ghahSkew = ((df_mammals$FrC - df_mammals$FrT))/((df_mammals$FrC + df_mammals$FrT))
library(ggplot2)
ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box = ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box = mam_box + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND1","ND2"))
mam_box
View(df_mtdna)
bird_only = df_mtdna[c('species_name', 'gene_name', 'ghahSkew')]
View(bird_only)
mam_only = df_mammals[c('Species', 'Gene', 'ghahSkew')]
View(mam_only)
bird_only$class = 'Aves'
names(mam_only) = c('species_name', 'gene_name', 'ghahSkew')
mam_only$class = 'Mammalia'
mam_and_birds = rbind(bird_only, mam_only)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(fill = mam_and_birds$class)
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot(color = mam_and_birds$class)
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
b_and_m
mam_box
mam_box = ggplot(df_mammals, aes(x = Gene, y = ghahSkew))+
geom_boxplot()
mam_box
mam_box = mam_box + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
mam_box
bird_only = bird_only[bird_only$gene_name != 'ND5']
bird_only = bird_only[bird_only$gene_name != 'ND5',]
bird_only[bird_only$gene_name == 'CYTB',]
bird_only$gene_name[bird_only$gene_name == 'CYTB',]
bird_only$gene_name == 'CYTB'
replace(bird_only$gene_name, bird_only$gene_name == 'CYTB', 'CytB')
bird_only = replace(bird_only$gene_name, bird_only$gene_name == 'CYTB', 'CytB')
bird_only = df_mtdna[c('species_name', 'gene_name', 'ghahSkew')]
bird_only$class = 'Aves'
bird_only = bird_only[bird_only$gene_name != 'ND5',]
bird_only$gene_name[bird_only$gene_name == 'CYTB'] = 'CytB'
unique(bird_only$gene_name)
mam_and_birds = rbind(bird_only, mam_only)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew))+
geom_boxplot()
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot()
b_and_m
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.fill =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.fill = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.size = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.colour =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.colour = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.color = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape =  = FALSE)
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.shape= FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
b_and_m = ggplot(mam_and_birds, aes(x = gene_name, y = ghahSkew, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)
b_and_m = b_and_m + xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
b_and_m
mam_and_birds$gene_name == CytB
mam_and_birds$gene_name == 'CytB'
bird_only$ghahSkew[bird_only$gene_name == 'CytB',]
bird_only[bird_only$gene_name == 'CytB',]
bird_only[bird_only$gene_name == 'CytB',]$ghahSkew
bird_only[bird_only$gene_name == 'CytB',]
count(bird_only[bird_only$gene_name == 'CytB',])
bird_only[bird_only$gene_name == 'CytB',]$ghahSkew
df_stats = data.frame()
View(df_stats)
View(mam_only)
a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
View(a)
a
a$statistic
a$parameter
a$p.value
a$null.value
a$alternative
a$method
a$data.name
View(a)
a$p.value
typeof(a$p.value)
typeof(numeric(a$p.value))
for (i in c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","CytB","ND1","ND2"))
{
a = wilcox.test(bird_only[bird_only$gene_name == i,]$ghahSkew, mam_only[mam_only$gene_name == i,]$ghahSkew)
b = c(i, a$p.value)
df_stats = rbind(df_stats, b)
}
View(df_stats)
names(df_stats) = c('gene_name', 'p_value')
#a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
write.csv(df_stats, file = 'ghahSkew_Aves_against_Mammalia_p_values')
#a = wilcox.test(bird_only[bird_only$gene_name == 'CytB',]$ghahSkew, mam_only[mam_only$gene_name == 'CytB',]$ghahSkew)
write.csv(df_stats, file = 'ghahSkew_Aves_against_Mammalia_p_values.csv')
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Head/2Scripts/Birds_dataset_paper.csv')
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
#row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(1,2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
View(gene_stats)
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats[gene_stats$realm == 'Antarctic',])
library(ggbiplot)
bipl = ggbiplot(stats_pca, groups = gene_stats[gene_stats$realm == 'Antarctic',])
bipl = ggbiplot(stats_pca)
bipl
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name, labels.size = 2)+
scale_colour_manual(name="Origin", values= c("black", "green", "black", "black", "black", "black", "black", "red", "black"))
bipl
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
#row.names(gene_stats) = gene_stats$species_name
#gene_stats$species_name = NA
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8,9,10)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl = ggbiplot(stats_pca)
bipl
rm(list = ls(all=TRUE))
library(ggbiplot)
library(ggplot2)
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
#PCA coloring
library('ggbiplot')
install.packages("ggbiplot")
install.packages('devtools')
install_github("vqv/ggbiplot")
library(devtools)
library('devtools')
